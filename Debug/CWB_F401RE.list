
CWB_F401RE.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00003430  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000018  080035c4  080035c4  000135c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080035dc  080035dc  0002000c  2**0
                  CONTENTS
  4 .ARM          00000008  080035dc  080035dc  000135dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  080035e4  080035e4  0002000c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080035e4  080035e4  000135e4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080035e8  080035e8  000135e8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000000c  20000000  080035ec  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000004dc  2000000c  080035f8  0002000c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200004e8  080035f8  000204e8  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0002000c  2**0
                  CONTENTS, READONLY
 12 .debug_info   000084de  00000000  00000000  0002003c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001895  00000000  00000000  0002851a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000750  00000000  00000000  00029db0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000006c8  00000000  00000000  0002a500  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00015668  00000000  00000000  0002abc8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00008594  00000000  00000000  00040230  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00084fdf  00000000  00000000  000487c4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  000cd7a3  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00001cb8  00000000  00000000  000cd7f8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	2000000c 	.word	0x2000000c
 80001b0:	00000000 	.word	0x00000000
 80001b4:	080035ac 	.word	0x080035ac

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000010 	.word	0x20000010
 80001d0:	080035ac 	.word	0x080035ac

080001d4 <__aeabi_uldivmod>:
 80001d4:	b953      	cbnz	r3, 80001ec <__aeabi_uldivmod+0x18>
 80001d6:	b94a      	cbnz	r2, 80001ec <__aeabi_uldivmod+0x18>
 80001d8:	2900      	cmp	r1, #0
 80001da:	bf08      	it	eq
 80001dc:	2800      	cmpeq	r0, #0
 80001de:	bf1c      	itt	ne
 80001e0:	f04f 31ff 	movne.w	r1, #4294967295
 80001e4:	f04f 30ff 	movne.w	r0, #4294967295
 80001e8:	f000 b96e 	b.w	80004c8 <__aeabi_idiv0>
 80001ec:	f1ad 0c08 	sub.w	ip, sp, #8
 80001f0:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80001f4:	f000 f806 	bl	8000204 <__udivmoddi4>
 80001f8:	f8dd e004 	ldr.w	lr, [sp, #4]
 80001fc:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000200:	b004      	add	sp, #16
 8000202:	4770      	bx	lr

08000204 <__udivmoddi4>:
 8000204:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000208:	9d08      	ldr	r5, [sp, #32]
 800020a:	4604      	mov	r4, r0
 800020c:	468c      	mov	ip, r1
 800020e:	2b00      	cmp	r3, #0
 8000210:	f040 8083 	bne.w	800031a <__udivmoddi4+0x116>
 8000214:	428a      	cmp	r2, r1
 8000216:	4617      	mov	r7, r2
 8000218:	d947      	bls.n	80002aa <__udivmoddi4+0xa6>
 800021a:	fab2 f282 	clz	r2, r2
 800021e:	b142      	cbz	r2, 8000232 <__udivmoddi4+0x2e>
 8000220:	f1c2 0020 	rsb	r0, r2, #32
 8000224:	fa24 f000 	lsr.w	r0, r4, r0
 8000228:	4091      	lsls	r1, r2
 800022a:	4097      	lsls	r7, r2
 800022c:	ea40 0c01 	orr.w	ip, r0, r1
 8000230:	4094      	lsls	r4, r2
 8000232:	ea4f 4817 	mov.w	r8, r7, lsr #16
 8000236:	0c23      	lsrs	r3, r4, #16
 8000238:	fbbc f6f8 	udiv	r6, ip, r8
 800023c:	fa1f fe87 	uxth.w	lr, r7
 8000240:	fb08 c116 	mls	r1, r8, r6, ip
 8000244:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000248:	fb06 f10e 	mul.w	r1, r6, lr
 800024c:	4299      	cmp	r1, r3
 800024e:	d909      	bls.n	8000264 <__udivmoddi4+0x60>
 8000250:	18fb      	adds	r3, r7, r3
 8000252:	f106 30ff 	add.w	r0, r6, #4294967295
 8000256:	f080 8119 	bcs.w	800048c <__udivmoddi4+0x288>
 800025a:	4299      	cmp	r1, r3
 800025c:	f240 8116 	bls.w	800048c <__udivmoddi4+0x288>
 8000260:	3e02      	subs	r6, #2
 8000262:	443b      	add	r3, r7
 8000264:	1a5b      	subs	r3, r3, r1
 8000266:	b2a4      	uxth	r4, r4
 8000268:	fbb3 f0f8 	udiv	r0, r3, r8
 800026c:	fb08 3310 	mls	r3, r8, r0, r3
 8000270:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000274:	fb00 fe0e 	mul.w	lr, r0, lr
 8000278:	45a6      	cmp	lr, r4
 800027a:	d909      	bls.n	8000290 <__udivmoddi4+0x8c>
 800027c:	193c      	adds	r4, r7, r4
 800027e:	f100 33ff 	add.w	r3, r0, #4294967295
 8000282:	f080 8105 	bcs.w	8000490 <__udivmoddi4+0x28c>
 8000286:	45a6      	cmp	lr, r4
 8000288:	f240 8102 	bls.w	8000490 <__udivmoddi4+0x28c>
 800028c:	3802      	subs	r0, #2
 800028e:	443c      	add	r4, r7
 8000290:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000294:	eba4 040e 	sub.w	r4, r4, lr
 8000298:	2600      	movs	r6, #0
 800029a:	b11d      	cbz	r5, 80002a4 <__udivmoddi4+0xa0>
 800029c:	40d4      	lsrs	r4, r2
 800029e:	2300      	movs	r3, #0
 80002a0:	e9c5 4300 	strd	r4, r3, [r5]
 80002a4:	4631      	mov	r1, r6
 80002a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80002aa:	b902      	cbnz	r2, 80002ae <__udivmoddi4+0xaa>
 80002ac:	deff      	udf	#255	; 0xff
 80002ae:	fab2 f282 	clz	r2, r2
 80002b2:	2a00      	cmp	r2, #0
 80002b4:	d150      	bne.n	8000358 <__udivmoddi4+0x154>
 80002b6:	1bcb      	subs	r3, r1, r7
 80002b8:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80002bc:	fa1f f887 	uxth.w	r8, r7
 80002c0:	2601      	movs	r6, #1
 80002c2:	fbb3 fcfe 	udiv	ip, r3, lr
 80002c6:	0c21      	lsrs	r1, r4, #16
 80002c8:	fb0e 331c 	mls	r3, lr, ip, r3
 80002cc:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 80002d0:	fb08 f30c 	mul.w	r3, r8, ip
 80002d4:	428b      	cmp	r3, r1
 80002d6:	d907      	bls.n	80002e8 <__udivmoddi4+0xe4>
 80002d8:	1879      	adds	r1, r7, r1
 80002da:	f10c 30ff 	add.w	r0, ip, #4294967295
 80002de:	d202      	bcs.n	80002e6 <__udivmoddi4+0xe2>
 80002e0:	428b      	cmp	r3, r1
 80002e2:	f200 80e9 	bhi.w	80004b8 <__udivmoddi4+0x2b4>
 80002e6:	4684      	mov	ip, r0
 80002e8:	1ac9      	subs	r1, r1, r3
 80002ea:	b2a3      	uxth	r3, r4
 80002ec:	fbb1 f0fe 	udiv	r0, r1, lr
 80002f0:	fb0e 1110 	mls	r1, lr, r0, r1
 80002f4:	ea43 4401 	orr.w	r4, r3, r1, lsl #16
 80002f8:	fb08 f800 	mul.w	r8, r8, r0
 80002fc:	45a0      	cmp	r8, r4
 80002fe:	d907      	bls.n	8000310 <__udivmoddi4+0x10c>
 8000300:	193c      	adds	r4, r7, r4
 8000302:	f100 33ff 	add.w	r3, r0, #4294967295
 8000306:	d202      	bcs.n	800030e <__udivmoddi4+0x10a>
 8000308:	45a0      	cmp	r8, r4
 800030a:	f200 80d9 	bhi.w	80004c0 <__udivmoddi4+0x2bc>
 800030e:	4618      	mov	r0, r3
 8000310:	eba4 0408 	sub.w	r4, r4, r8
 8000314:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 8000318:	e7bf      	b.n	800029a <__udivmoddi4+0x96>
 800031a:	428b      	cmp	r3, r1
 800031c:	d909      	bls.n	8000332 <__udivmoddi4+0x12e>
 800031e:	2d00      	cmp	r5, #0
 8000320:	f000 80b1 	beq.w	8000486 <__udivmoddi4+0x282>
 8000324:	2600      	movs	r6, #0
 8000326:	e9c5 0100 	strd	r0, r1, [r5]
 800032a:	4630      	mov	r0, r6
 800032c:	4631      	mov	r1, r6
 800032e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000332:	fab3 f683 	clz	r6, r3
 8000336:	2e00      	cmp	r6, #0
 8000338:	d14a      	bne.n	80003d0 <__udivmoddi4+0x1cc>
 800033a:	428b      	cmp	r3, r1
 800033c:	d302      	bcc.n	8000344 <__udivmoddi4+0x140>
 800033e:	4282      	cmp	r2, r0
 8000340:	f200 80b8 	bhi.w	80004b4 <__udivmoddi4+0x2b0>
 8000344:	1a84      	subs	r4, r0, r2
 8000346:	eb61 0103 	sbc.w	r1, r1, r3
 800034a:	2001      	movs	r0, #1
 800034c:	468c      	mov	ip, r1
 800034e:	2d00      	cmp	r5, #0
 8000350:	d0a8      	beq.n	80002a4 <__udivmoddi4+0xa0>
 8000352:	e9c5 4c00 	strd	r4, ip, [r5]
 8000356:	e7a5      	b.n	80002a4 <__udivmoddi4+0xa0>
 8000358:	f1c2 0320 	rsb	r3, r2, #32
 800035c:	fa20 f603 	lsr.w	r6, r0, r3
 8000360:	4097      	lsls	r7, r2
 8000362:	fa01 f002 	lsl.w	r0, r1, r2
 8000366:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 800036a:	40d9      	lsrs	r1, r3
 800036c:	4330      	orrs	r0, r6
 800036e:	0c03      	lsrs	r3, r0, #16
 8000370:	fbb1 f6fe 	udiv	r6, r1, lr
 8000374:	fa1f f887 	uxth.w	r8, r7
 8000378:	fb0e 1116 	mls	r1, lr, r6, r1
 800037c:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000380:	fb06 f108 	mul.w	r1, r6, r8
 8000384:	4299      	cmp	r1, r3
 8000386:	fa04 f402 	lsl.w	r4, r4, r2
 800038a:	d909      	bls.n	80003a0 <__udivmoddi4+0x19c>
 800038c:	18fb      	adds	r3, r7, r3
 800038e:	f106 3cff 	add.w	ip, r6, #4294967295
 8000392:	f080 808d 	bcs.w	80004b0 <__udivmoddi4+0x2ac>
 8000396:	4299      	cmp	r1, r3
 8000398:	f240 808a 	bls.w	80004b0 <__udivmoddi4+0x2ac>
 800039c:	3e02      	subs	r6, #2
 800039e:	443b      	add	r3, r7
 80003a0:	1a5b      	subs	r3, r3, r1
 80003a2:	b281      	uxth	r1, r0
 80003a4:	fbb3 f0fe 	udiv	r0, r3, lr
 80003a8:	fb0e 3310 	mls	r3, lr, r0, r3
 80003ac:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 80003b0:	fb00 f308 	mul.w	r3, r0, r8
 80003b4:	428b      	cmp	r3, r1
 80003b6:	d907      	bls.n	80003c8 <__udivmoddi4+0x1c4>
 80003b8:	1879      	adds	r1, r7, r1
 80003ba:	f100 3cff 	add.w	ip, r0, #4294967295
 80003be:	d273      	bcs.n	80004a8 <__udivmoddi4+0x2a4>
 80003c0:	428b      	cmp	r3, r1
 80003c2:	d971      	bls.n	80004a8 <__udivmoddi4+0x2a4>
 80003c4:	3802      	subs	r0, #2
 80003c6:	4439      	add	r1, r7
 80003c8:	1acb      	subs	r3, r1, r3
 80003ca:	ea40 4606 	orr.w	r6, r0, r6, lsl #16
 80003ce:	e778      	b.n	80002c2 <__udivmoddi4+0xbe>
 80003d0:	f1c6 0c20 	rsb	ip, r6, #32
 80003d4:	fa03 f406 	lsl.w	r4, r3, r6
 80003d8:	fa22 f30c 	lsr.w	r3, r2, ip
 80003dc:	431c      	orrs	r4, r3
 80003de:	fa20 f70c 	lsr.w	r7, r0, ip
 80003e2:	fa01 f306 	lsl.w	r3, r1, r6
 80003e6:	ea4f 4e14 	mov.w	lr, r4, lsr #16
 80003ea:	fa21 f10c 	lsr.w	r1, r1, ip
 80003ee:	431f      	orrs	r7, r3
 80003f0:	0c3b      	lsrs	r3, r7, #16
 80003f2:	fbb1 f9fe 	udiv	r9, r1, lr
 80003f6:	fa1f f884 	uxth.w	r8, r4
 80003fa:	fb0e 1119 	mls	r1, lr, r9, r1
 80003fe:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 8000402:	fb09 fa08 	mul.w	sl, r9, r8
 8000406:	458a      	cmp	sl, r1
 8000408:	fa02 f206 	lsl.w	r2, r2, r6
 800040c:	fa00 f306 	lsl.w	r3, r0, r6
 8000410:	d908      	bls.n	8000424 <__udivmoddi4+0x220>
 8000412:	1861      	adds	r1, r4, r1
 8000414:	f109 30ff 	add.w	r0, r9, #4294967295
 8000418:	d248      	bcs.n	80004ac <__udivmoddi4+0x2a8>
 800041a:	458a      	cmp	sl, r1
 800041c:	d946      	bls.n	80004ac <__udivmoddi4+0x2a8>
 800041e:	f1a9 0902 	sub.w	r9, r9, #2
 8000422:	4421      	add	r1, r4
 8000424:	eba1 010a 	sub.w	r1, r1, sl
 8000428:	b2bf      	uxth	r7, r7
 800042a:	fbb1 f0fe 	udiv	r0, r1, lr
 800042e:	fb0e 1110 	mls	r1, lr, r0, r1
 8000432:	ea47 4701 	orr.w	r7, r7, r1, lsl #16
 8000436:	fb00 f808 	mul.w	r8, r0, r8
 800043a:	45b8      	cmp	r8, r7
 800043c:	d907      	bls.n	800044e <__udivmoddi4+0x24a>
 800043e:	19e7      	adds	r7, r4, r7
 8000440:	f100 31ff 	add.w	r1, r0, #4294967295
 8000444:	d22e      	bcs.n	80004a4 <__udivmoddi4+0x2a0>
 8000446:	45b8      	cmp	r8, r7
 8000448:	d92c      	bls.n	80004a4 <__udivmoddi4+0x2a0>
 800044a:	3802      	subs	r0, #2
 800044c:	4427      	add	r7, r4
 800044e:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 8000452:	eba7 0708 	sub.w	r7, r7, r8
 8000456:	fba0 8902 	umull	r8, r9, r0, r2
 800045a:	454f      	cmp	r7, r9
 800045c:	46c6      	mov	lr, r8
 800045e:	4649      	mov	r1, r9
 8000460:	d31a      	bcc.n	8000498 <__udivmoddi4+0x294>
 8000462:	d017      	beq.n	8000494 <__udivmoddi4+0x290>
 8000464:	b15d      	cbz	r5, 800047e <__udivmoddi4+0x27a>
 8000466:	ebb3 020e 	subs.w	r2, r3, lr
 800046a:	eb67 0701 	sbc.w	r7, r7, r1
 800046e:	fa07 fc0c 	lsl.w	ip, r7, ip
 8000472:	40f2      	lsrs	r2, r6
 8000474:	ea4c 0202 	orr.w	r2, ip, r2
 8000478:	40f7      	lsrs	r7, r6
 800047a:	e9c5 2700 	strd	r2, r7, [r5]
 800047e:	2600      	movs	r6, #0
 8000480:	4631      	mov	r1, r6
 8000482:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000486:	462e      	mov	r6, r5
 8000488:	4628      	mov	r0, r5
 800048a:	e70b      	b.n	80002a4 <__udivmoddi4+0xa0>
 800048c:	4606      	mov	r6, r0
 800048e:	e6e9      	b.n	8000264 <__udivmoddi4+0x60>
 8000490:	4618      	mov	r0, r3
 8000492:	e6fd      	b.n	8000290 <__udivmoddi4+0x8c>
 8000494:	4543      	cmp	r3, r8
 8000496:	d2e5      	bcs.n	8000464 <__udivmoddi4+0x260>
 8000498:	ebb8 0e02 	subs.w	lr, r8, r2
 800049c:	eb69 0104 	sbc.w	r1, r9, r4
 80004a0:	3801      	subs	r0, #1
 80004a2:	e7df      	b.n	8000464 <__udivmoddi4+0x260>
 80004a4:	4608      	mov	r0, r1
 80004a6:	e7d2      	b.n	800044e <__udivmoddi4+0x24a>
 80004a8:	4660      	mov	r0, ip
 80004aa:	e78d      	b.n	80003c8 <__udivmoddi4+0x1c4>
 80004ac:	4681      	mov	r9, r0
 80004ae:	e7b9      	b.n	8000424 <__udivmoddi4+0x220>
 80004b0:	4666      	mov	r6, ip
 80004b2:	e775      	b.n	80003a0 <__udivmoddi4+0x19c>
 80004b4:	4630      	mov	r0, r6
 80004b6:	e74a      	b.n	800034e <__udivmoddi4+0x14a>
 80004b8:	f1ac 0c02 	sub.w	ip, ip, #2
 80004bc:	4439      	add	r1, r7
 80004be:	e713      	b.n	80002e8 <__udivmoddi4+0xe4>
 80004c0:	3802      	subs	r0, #2
 80004c2:	443c      	add	r4, r7
 80004c4:	e724      	b.n	8000310 <__udivmoddi4+0x10c>
 80004c6:	bf00      	nop

080004c8 <__aeabi_idiv0>:
 80004c8:	4770      	bx	lr
 80004ca:	bf00      	nop

080004cc <init_i2c>:
#define I2C_NACK	(I2C_BASS->IDR & SDA_PIN) ? 1 : 0
#define I2C_DAT		(I2C_BASS->IDR & SDA_PIN) ? 1 : 0


void init_i2c(void)
{
 80004cc:	b580      	push	{r7, lr}
 80004ce:	b086      	sub	sp, #24
 80004d0:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStruct;
	I2C_BASS = GPIOB;
 80004d2:	4b17      	ldr	r3, [pc, #92]	; (8000530 <init_i2c+0x64>)
 80004d4:	4a17      	ldr	r2, [pc, #92]	; (8000534 <init_i2c+0x68>)
 80004d6:	601a      	str	r2, [r3, #0]

	SCL_PIN  = GPIO_PIN_8;
 80004d8:	4b17      	ldr	r3, [pc, #92]	; (8000538 <init_i2c+0x6c>)
 80004da:	f44f 7280 	mov.w	r2, #256	; 0x100
 80004de:	801a      	strh	r2, [r3, #0]
	SDA_PIN  = GPIO_PIN_9;
 80004e0:	4b16      	ldr	r3, [pc, #88]	; (800053c <init_i2c+0x70>)
 80004e2:	f44f 7200 	mov.w	r2, #512	; 0x200
 80004e6:	801a      	strh	r2, [r3, #0]

	/*Configure I2Cx Port */
	GPIO_InitStruct.Pin = SCL_PIN|SDA_PIN;
 80004e8:	4b13      	ldr	r3, [pc, #76]	; (8000538 <init_i2c+0x6c>)
 80004ea:	881a      	ldrh	r2, [r3, #0]
 80004ec:	4b13      	ldr	r3, [pc, #76]	; (800053c <init_i2c+0x70>)
 80004ee:	881b      	ldrh	r3, [r3, #0]
 80004f0:	4313      	orrs	r3, r2
 80004f2:	b29b      	uxth	r3, r3
 80004f4:	607b      	str	r3, [r7, #4]
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 80004f6:	2311      	movs	r3, #17
 80004f8:	60bb      	str	r3, [r7, #8]
	GPIO_InitStruct.Pull = GPIO_PULLUP;
 80004fa:	2301      	movs	r3, #1
 80004fc:	60fb      	str	r3, [r7, #12]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80004fe:	2303      	movs	r3, #3
 8000500:	613b      	str	r3, [r7, #16]
	HAL_GPIO_Init(I2C_BASS, &GPIO_InitStruct);
 8000502:	4b0b      	ldr	r3, [pc, #44]	; (8000530 <init_i2c+0x64>)
 8000504:	681b      	ldr	r3, [r3, #0]
 8000506:	1d3a      	adds	r2, r7, #4
 8000508:	4611      	mov	r1, r2
 800050a:	4618      	mov	r0, r3
 800050c:	f001 fc18 	bl	8001d40 <HAL_GPIO_Init>
	HAL_GPIO_WritePin(I2C_BASS, SDA_PIN|SCL_PIN, GPIO_PIN_SET);
 8000510:	4b07      	ldr	r3, [pc, #28]	; (8000530 <init_i2c+0x64>)
 8000512:	6818      	ldr	r0, [r3, #0]
 8000514:	4b09      	ldr	r3, [pc, #36]	; (800053c <init_i2c+0x70>)
 8000516:	881a      	ldrh	r2, [r3, #0]
 8000518:	4b07      	ldr	r3, [pc, #28]	; (8000538 <init_i2c+0x6c>)
 800051a:	881b      	ldrh	r3, [r3, #0]
 800051c:	4313      	orrs	r3, r2
 800051e:	b29b      	uxth	r3, r3
 8000520:	2201      	movs	r2, #1
 8000522:	4619      	mov	r1, r3
 8000524:	f001 fd90 	bl	8002048 <HAL_GPIO_WritePin>
}
 8000528:	bf00      	nop
 800052a:	3718      	adds	r7, #24
 800052c:	46bd      	mov	sp, r7
 800052e:	bd80      	pop	{r7, pc}
 8000530:	2000003c 	.word	0x2000003c
 8000534:	40020400 	.word	0x40020400
 8000538:	20000038 	.word	0x20000038
 800053c:	20000040 	.word	0x20000040

08000540 <idelay>:


void idelay(uint32_t tmout)
{
 8000540:	b480      	push	{r7}
 8000542:	b085      	sub	sp, #20
 8000544:	af00      	add	r7, sp, #0
 8000546:	6078      	str	r0, [r7, #4]
	if(tmout == 1) {
 8000548:	687b      	ldr	r3, [r7, #4]
 800054a:	2b01      	cmp	r3, #1
 800054c:	d101      	bne.n	8000552 <idelay+0x12>
		#if 1	//--------------------------------- 3MHz
		__asm volatile("NOP");
 800054e:	bf00      	nop
		#endif
	}
	else {
		for(volatile int i=0; i<tmout; i++);
	}
}
 8000550:	e00a      	b.n	8000568 <idelay+0x28>
		for(volatile int i=0; i<tmout; i++);
 8000552:	2300      	movs	r3, #0
 8000554:	60fb      	str	r3, [r7, #12]
 8000556:	e002      	b.n	800055e <idelay+0x1e>
 8000558:	68fb      	ldr	r3, [r7, #12]
 800055a:	3301      	adds	r3, #1
 800055c:	60fb      	str	r3, [r7, #12]
 800055e:	68fb      	ldr	r3, [r7, #12]
 8000560:	461a      	mov	r2, r3
 8000562:	687b      	ldr	r3, [r7, #4]
 8000564:	4293      	cmp	r3, r2
 8000566:	d8f7      	bhi.n	8000558 <idelay+0x18>
}
 8000568:	bf00      	nop
 800056a:	3714      	adds	r7, #20
 800056c:	46bd      	mov	sp, r7
 800056e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000572:	4770      	bx	lr

08000574 <i2c_write_task>:



uint32_t i2c_write_task(uint8_t id, uint16_t addr, uint16_t type, uint8_t* dat, uint16_t size, uint16_t tmout)
{
 8000574:	b580      	push	{r7, lr}
 8000576:	b088      	sub	sp, #32
 8000578:	af00      	add	r7, sp, #0
 800057a:	607b      	str	r3, [r7, #4]
 800057c:	4603      	mov	r3, r0
 800057e:	73fb      	strb	r3, [r7, #15]
 8000580:	460b      	mov	r3, r1
 8000582:	81bb      	strh	r3, [r7, #12]
 8000584:	4613      	mov	r3, r2
 8000586:	817b      	strh	r3, [r7, #10]
	uint32_t i, tmp, ack;

  /*START*/
	SDA(0);
 8000588:	4b90      	ldr	r3, [pc, #576]	; (80007cc <i2c_write_task+0x258>)
 800058a:	881b      	ldrh	r3, [r3, #0]
 800058c:	041a      	lsls	r2, r3, #16
 800058e:	4b90      	ldr	r3, [pc, #576]	; (80007d0 <i2c_write_task+0x25c>)
 8000590:	681b      	ldr	r3, [r3, #0]
 8000592:	619a      	str	r2, [r3, #24]
  idelay(tmout);	// 100ns ?
 8000594:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 8000596:	4618      	mov	r0, r3
 8000598:	f7ff ffd2 	bl	8000540 <idelay>
  ack = 0;
 800059c:	2300      	movs	r3, #0
 800059e:	617b      	str	r3, [r7, #20]
	tmp = id;
 80005a0:	7bfb      	ldrb	r3, [r7, #15]
 80005a2:	61bb      	str	r3, [r7, #24]
	SCL(0);
 80005a4:	4b8b      	ldr	r3, [pc, #556]	; (80007d4 <i2c_write_task+0x260>)
 80005a6:	881b      	ldrh	r3, [r3, #0]
 80005a8:	041a      	lsls	r2, r3, #16
 80005aa:	4b89      	ldr	r3, [pc, #548]	; (80007d0 <i2c_write_task+0x25c>)
 80005ac:	681b      	ldr	r3, [r3, #0]
 80005ae:	619a      	str	r2, [r3, #24]

  /*Start ID*/
  for(i=0; i<8; i++) {
 80005b0:	2300      	movs	r3, #0
 80005b2:	61fb      	str	r3, [r7, #28]
 80005b4:	e02a      	b.n	800060c <i2c_write_task+0x98>
    SDA((tmp & 0x80) ? 1 : 0);
 80005b6:	69bb      	ldr	r3, [r7, #24]
 80005b8:	09db      	lsrs	r3, r3, #7
 80005ba:	f003 0301 	and.w	r3, r3, #1
 80005be:	b2db      	uxtb	r3, r3
 80005c0:	2b00      	cmp	r3, #0
 80005c2:	d003      	beq.n	80005cc <i2c_write_task+0x58>
 80005c4:	4b81      	ldr	r3, [pc, #516]	; (80007cc <i2c_write_task+0x258>)
 80005c6:	881b      	ldrh	r3, [r3, #0]
 80005c8:	461a      	mov	r2, r3
 80005ca:	e003      	b.n	80005d4 <i2c_write_task+0x60>
 80005cc:	4b7f      	ldr	r3, [pc, #508]	; (80007cc <i2c_write_task+0x258>)
 80005ce:	881b      	ldrh	r3, [r3, #0]
 80005d0:	041b      	lsls	r3, r3, #16
 80005d2:	461a      	mov	r2, r3
 80005d4:	4b7e      	ldr	r3, [pc, #504]	; (80007d0 <i2c_write_task+0x25c>)
 80005d6:	681b      	ldr	r3, [r3, #0]
 80005d8:	619a      	str	r2, [r3, #24]
    idelay(tmout);
 80005da:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 80005dc:	4618      	mov	r0, r3
 80005de:	f7ff ffaf 	bl	8000540 <idelay>
    SCL(1);
 80005e2:	4b7c      	ldr	r3, [pc, #496]	; (80007d4 <i2c_write_task+0x260>)
 80005e4:	881a      	ldrh	r2, [r3, #0]
 80005e6:	4b7a      	ldr	r3, [pc, #488]	; (80007d0 <i2c_write_task+0x25c>)
 80005e8:	681b      	ldr	r3, [r3, #0]
 80005ea:	619a      	str	r2, [r3, #24]
    idelay(tmout);
 80005ec:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 80005ee:	4618      	mov	r0, r3
 80005f0:	f7ff ffa6 	bl	8000540 <idelay>
    SCL(0);
 80005f4:	4b77      	ldr	r3, [pc, #476]	; (80007d4 <i2c_write_task+0x260>)
 80005f6:	881b      	ldrh	r3, [r3, #0]
 80005f8:	041a      	lsls	r2, r3, #16
 80005fa:	4b75      	ldr	r3, [pc, #468]	; (80007d0 <i2c_write_task+0x25c>)
 80005fc:	681b      	ldr	r3, [r3, #0]
 80005fe:	619a      	str	r2, [r3, #24]
		tmp <<= 1;
 8000600:	69bb      	ldr	r3, [r7, #24]
 8000602:	005b      	lsls	r3, r3, #1
 8000604:	61bb      	str	r3, [r7, #24]
  for(i=0; i<8; i++) {
 8000606:	69fb      	ldr	r3, [r7, #28]
 8000608:	3301      	adds	r3, #1
 800060a:	61fb      	str	r3, [r7, #28]
 800060c:	69fb      	ldr	r3, [r7, #28]
 800060e:	2b07      	cmp	r3, #7
 8000610:	d9d1      	bls.n	80005b6 <i2c_write_task+0x42>
  }

  /*ACK*/
	idelay(tmout); /*hold margin*/
 8000612:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 8000614:	4618      	mov	r0, r3
 8000616:	f7ff ff93 	bl	8000540 <idelay>
  SDA(1);
 800061a:	4b6c      	ldr	r3, [pc, #432]	; (80007cc <i2c_write_task+0x258>)
 800061c:	881a      	ldrh	r2, [r3, #0]
 800061e:	4b6c      	ldr	r3, [pc, #432]	; (80007d0 <i2c_write_task+0x25c>)
 8000620:	681b      	ldr	r3, [r3, #0]
 8000622:	619a      	str	r2, [r3, #24]
  idelay(tmout);
 8000624:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 8000626:	4618      	mov	r0, r3
 8000628:	f7ff ff8a 	bl	8000540 <idelay>
  SCL(1);
 800062c:	4b69      	ldr	r3, [pc, #420]	; (80007d4 <i2c_write_task+0x260>)
 800062e:	881a      	ldrh	r2, [r3, #0]
 8000630:	4b67      	ldr	r3, [pc, #412]	; (80007d0 <i2c_write_task+0x25c>)
 8000632:	681b      	ldr	r3, [r3, #0]
 8000634:	619a      	str	r2, [r3, #24]
  idelay(tmout);
 8000636:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 8000638:	4618      	mov	r0, r3
 800063a:	f7ff ff81 	bl	8000540 <idelay>
	ack = I2C_NACK;
 800063e:	4b64      	ldr	r3, [pc, #400]	; (80007d0 <i2c_write_task+0x25c>)
 8000640:	681b      	ldr	r3, [r3, #0]
 8000642:	691b      	ldr	r3, [r3, #16]
 8000644:	4a61      	ldr	r2, [pc, #388]	; (80007cc <i2c_write_task+0x258>)
 8000646:	8812      	ldrh	r2, [r2, #0]
 8000648:	4013      	ands	r3, r2
 800064a:	2b00      	cmp	r3, #0
 800064c:	bf14      	ite	ne
 800064e:	2301      	movne	r3, #1
 8000650:	2300      	moveq	r3, #0
 8000652:	b2db      	uxtb	r3, r3
 8000654:	617b      	str	r3, [r7, #20]
  SCL(0);
 8000656:	4b5f      	ldr	r3, [pc, #380]	; (80007d4 <i2c_write_task+0x260>)
 8000658:	881b      	ldrh	r3, [r3, #0]
 800065a:	041a      	lsls	r2, r3, #16
 800065c:	4b5c      	ldr	r3, [pc, #368]	; (80007d0 <i2c_write_task+0x25c>)
 800065e:	681b      	ldr	r3, [r3, #0]
 8000660:	619a      	str	r2, [r3, #24]

	if(type == 2) {	// 16bit address
 8000662:	897b      	ldrh	r3, [r7, #10]
 8000664:	2b02      	cmp	r3, #2
 8000666:	f040 80a1 	bne.w	80007ac <i2c_write_task+0x238>
		tmp = addr>>8;
 800066a:	89bb      	ldrh	r3, [r7, #12]
 800066c:	0a1b      	lsrs	r3, r3, #8
 800066e:	b29b      	uxth	r3, r3
 8000670:	61bb      	str	r3, [r7, #24]
		for(i=0; i<8; i++) {
 8000672:	2300      	movs	r3, #0
 8000674:	61fb      	str	r3, [r7, #28]
 8000676:	e02a      	b.n	80006ce <i2c_write_task+0x15a>
			SDA((tmp & 0x80) ? 1 : 0);
 8000678:	69bb      	ldr	r3, [r7, #24]
 800067a:	09db      	lsrs	r3, r3, #7
 800067c:	f003 0301 	and.w	r3, r3, #1
 8000680:	b2db      	uxtb	r3, r3
 8000682:	2b00      	cmp	r3, #0
 8000684:	d003      	beq.n	800068e <i2c_write_task+0x11a>
 8000686:	4b51      	ldr	r3, [pc, #324]	; (80007cc <i2c_write_task+0x258>)
 8000688:	881b      	ldrh	r3, [r3, #0]
 800068a:	461a      	mov	r2, r3
 800068c:	e003      	b.n	8000696 <i2c_write_task+0x122>
 800068e:	4b4f      	ldr	r3, [pc, #316]	; (80007cc <i2c_write_task+0x258>)
 8000690:	881b      	ldrh	r3, [r3, #0]
 8000692:	041b      	lsls	r3, r3, #16
 8000694:	461a      	mov	r2, r3
 8000696:	4b4e      	ldr	r3, [pc, #312]	; (80007d0 <i2c_write_task+0x25c>)
 8000698:	681b      	ldr	r3, [r3, #0]
 800069a:	619a      	str	r2, [r3, #24]
			idelay(tmout);
 800069c:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 800069e:	4618      	mov	r0, r3
 80006a0:	f7ff ff4e 	bl	8000540 <idelay>
			SCL(1);
 80006a4:	4b4b      	ldr	r3, [pc, #300]	; (80007d4 <i2c_write_task+0x260>)
 80006a6:	881a      	ldrh	r2, [r3, #0]
 80006a8:	4b49      	ldr	r3, [pc, #292]	; (80007d0 <i2c_write_task+0x25c>)
 80006aa:	681b      	ldr	r3, [r3, #0]
 80006ac:	619a      	str	r2, [r3, #24]
			idelay(tmout);
 80006ae:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 80006b0:	4618      	mov	r0, r3
 80006b2:	f7ff ff45 	bl	8000540 <idelay>
			SCL(0);
 80006b6:	4b47      	ldr	r3, [pc, #284]	; (80007d4 <i2c_write_task+0x260>)
 80006b8:	881b      	ldrh	r3, [r3, #0]
 80006ba:	041a      	lsls	r2, r3, #16
 80006bc:	4b44      	ldr	r3, [pc, #272]	; (80007d0 <i2c_write_task+0x25c>)
 80006be:	681b      	ldr	r3, [r3, #0]
 80006c0:	619a      	str	r2, [r3, #24]
			tmp <<= 1;
 80006c2:	69bb      	ldr	r3, [r7, #24]
 80006c4:	005b      	lsls	r3, r3, #1
 80006c6:	61bb      	str	r3, [r7, #24]
		for(i=0; i<8; i++) {
 80006c8:	69fb      	ldr	r3, [r7, #28]
 80006ca:	3301      	adds	r3, #1
 80006cc:	61fb      	str	r3, [r7, #28]
 80006ce:	69fb      	ldr	r3, [r7, #28]
 80006d0:	2b07      	cmp	r3, #7
 80006d2:	d9d1      	bls.n	8000678 <i2c_write_task+0x104>
		}
		/*ACK*/
		idelay(tmout);	/*hold margin*/
 80006d4:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 80006d6:	4618      	mov	r0, r3
 80006d8:	f7ff ff32 	bl	8000540 <idelay>
		SDA(1);
 80006dc:	4b3b      	ldr	r3, [pc, #236]	; (80007cc <i2c_write_task+0x258>)
 80006de:	881a      	ldrh	r2, [r3, #0]
 80006e0:	4b3b      	ldr	r3, [pc, #236]	; (80007d0 <i2c_write_task+0x25c>)
 80006e2:	681b      	ldr	r3, [r3, #0]
 80006e4:	619a      	str	r2, [r3, #24]
		idelay(tmout);
 80006e6:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 80006e8:	4618      	mov	r0, r3
 80006ea:	f7ff ff29 	bl	8000540 <idelay>
		SCL(1);
 80006ee:	4b39      	ldr	r3, [pc, #228]	; (80007d4 <i2c_write_task+0x260>)
 80006f0:	881a      	ldrh	r2, [r3, #0]
 80006f2:	4b37      	ldr	r3, [pc, #220]	; (80007d0 <i2c_write_task+0x25c>)
 80006f4:	681b      	ldr	r3, [r3, #0]
 80006f6:	619a      	str	r2, [r3, #24]
		idelay(tmout);
 80006f8:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 80006fa:	4618      	mov	r0, r3
 80006fc:	f7ff ff20 	bl	8000540 <idelay>
		tmp = addr;
 8000700:	89bb      	ldrh	r3, [r7, #12]
 8000702:	61bb      	str	r3, [r7, #24]
		SCL(0);
 8000704:	4b33      	ldr	r3, [pc, #204]	; (80007d4 <i2c_write_task+0x260>)
 8000706:	881b      	ldrh	r3, [r3, #0]
 8000708:	041a      	lsls	r2, r3, #16
 800070a:	4b31      	ldr	r3, [pc, #196]	; (80007d0 <i2c_write_task+0x25c>)
 800070c:	681b      	ldr	r3, [r3, #0]
 800070e:	619a      	str	r2, [r3, #24]

		for(i=0; i<8; i++) {
 8000710:	2300      	movs	r3, #0
 8000712:	61fb      	str	r3, [r7, #28]
 8000714:	e02a      	b.n	800076c <i2c_write_task+0x1f8>
			SDA((tmp & 0x80) ? 1 : 0);
 8000716:	69bb      	ldr	r3, [r7, #24]
 8000718:	09db      	lsrs	r3, r3, #7
 800071a:	f003 0301 	and.w	r3, r3, #1
 800071e:	b2db      	uxtb	r3, r3
 8000720:	2b00      	cmp	r3, #0
 8000722:	d003      	beq.n	800072c <i2c_write_task+0x1b8>
 8000724:	4b29      	ldr	r3, [pc, #164]	; (80007cc <i2c_write_task+0x258>)
 8000726:	881b      	ldrh	r3, [r3, #0]
 8000728:	461a      	mov	r2, r3
 800072a:	e003      	b.n	8000734 <i2c_write_task+0x1c0>
 800072c:	4b27      	ldr	r3, [pc, #156]	; (80007cc <i2c_write_task+0x258>)
 800072e:	881b      	ldrh	r3, [r3, #0]
 8000730:	041b      	lsls	r3, r3, #16
 8000732:	461a      	mov	r2, r3
 8000734:	4b26      	ldr	r3, [pc, #152]	; (80007d0 <i2c_write_task+0x25c>)
 8000736:	681b      	ldr	r3, [r3, #0]
 8000738:	619a      	str	r2, [r3, #24]
			idelay(tmout);
 800073a:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 800073c:	4618      	mov	r0, r3
 800073e:	f7ff feff 	bl	8000540 <idelay>
			SCL(1);
 8000742:	4b24      	ldr	r3, [pc, #144]	; (80007d4 <i2c_write_task+0x260>)
 8000744:	881a      	ldrh	r2, [r3, #0]
 8000746:	4b22      	ldr	r3, [pc, #136]	; (80007d0 <i2c_write_task+0x25c>)
 8000748:	681b      	ldr	r3, [r3, #0]
 800074a:	619a      	str	r2, [r3, #24]
			idelay(tmout);
 800074c:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 800074e:	4618      	mov	r0, r3
 8000750:	f7ff fef6 	bl	8000540 <idelay>
			SCL(0);
 8000754:	4b1f      	ldr	r3, [pc, #124]	; (80007d4 <i2c_write_task+0x260>)
 8000756:	881b      	ldrh	r3, [r3, #0]
 8000758:	041a      	lsls	r2, r3, #16
 800075a:	4b1d      	ldr	r3, [pc, #116]	; (80007d0 <i2c_write_task+0x25c>)
 800075c:	681b      	ldr	r3, [r3, #0]
 800075e:	619a      	str	r2, [r3, #24]
			tmp <<= 1;
 8000760:	69bb      	ldr	r3, [r7, #24]
 8000762:	005b      	lsls	r3, r3, #1
 8000764:	61bb      	str	r3, [r7, #24]
		for(i=0; i<8; i++) {
 8000766:	69fb      	ldr	r3, [r7, #28]
 8000768:	3301      	adds	r3, #1
 800076a:	61fb      	str	r3, [r7, #28]
 800076c:	69fb      	ldr	r3, [r7, #28]
 800076e:	2b07      	cmp	r3, #7
 8000770:	d9d1      	bls.n	8000716 <i2c_write_task+0x1a2>
		}
		/*ACK*/
		idelay(tmout);	/*hold margin*/
 8000772:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 8000774:	4618      	mov	r0, r3
 8000776:	f7ff fee3 	bl	8000540 <idelay>
		SDA(1);
 800077a:	4b14      	ldr	r3, [pc, #80]	; (80007cc <i2c_write_task+0x258>)
 800077c:	881a      	ldrh	r2, [r3, #0]
 800077e:	4b14      	ldr	r3, [pc, #80]	; (80007d0 <i2c_write_task+0x25c>)
 8000780:	681b      	ldr	r3, [r3, #0]
 8000782:	619a      	str	r2, [r3, #24]
		idelay(tmout);
 8000784:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 8000786:	4618      	mov	r0, r3
 8000788:	f7ff feda 	bl	8000540 <idelay>
		SCL(1);
 800078c:	4b11      	ldr	r3, [pc, #68]	; (80007d4 <i2c_write_task+0x260>)
 800078e:	881a      	ldrh	r2, [r3, #0]
 8000790:	4b0f      	ldr	r3, [pc, #60]	; (80007d0 <i2c_write_task+0x25c>)
 8000792:	681b      	ldr	r3, [r3, #0]
 8000794:	619a      	str	r2, [r3, #24]
		idelay(tmout);
 8000796:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 8000798:	4618      	mov	r0, r3
 800079a:	f7ff fed1 	bl	8000540 <idelay>
		SCL(0);
 800079e:	4b0d      	ldr	r3, [pc, #52]	; (80007d4 <i2c_write_task+0x260>)
 80007a0:	881b      	ldrh	r3, [r3, #0]
 80007a2:	041a      	lsls	r2, r3, #16
 80007a4:	4b0a      	ldr	r3, [pc, #40]	; (80007d0 <i2c_write_task+0x25c>)
 80007a6:	681b      	ldr	r3, [r3, #0]
 80007a8:	619a      	str	r2, [r3, #24]
 80007aa:	e0aa      	b.n	8000902 <i2c_write_task+0x38e>
	}

	else {  // 8bit address
		tmp = addr;
 80007ac:	89bb      	ldrh	r3, [r7, #12]
 80007ae:	61bb      	str	r3, [r7, #24]
		for(i=0; i<8; i++) {
 80007b0:	2300      	movs	r3, #0
 80007b2:	61fb      	str	r3, [r7, #28]
 80007b4:	e030      	b.n	8000818 <i2c_write_task+0x2a4>
			SDA((tmp & 0x80) ? 1 : 0);
 80007b6:	69bb      	ldr	r3, [r7, #24]
 80007b8:	09db      	lsrs	r3, r3, #7
 80007ba:	f003 0301 	and.w	r3, r3, #1
 80007be:	b2db      	uxtb	r3, r3
 80007c0:	2b00      	cmp	r3, #0
 80007c2:	d009      	beq.n	80007d8 <i2c_write_task+0x264>
 80007c4:	4b01      	ldr	r3, [pc, #4]	; (80007cc <i2c_write_task+0x258>)
 80007c6:	881b      	ldrh	r3, [r3, #0]
 80007c8:	461a      	mov	r2, r3
 80007ca:	e009      	b.n	80007e0 <i2c_write_task+0x26c>
 80007cc:	20000040 	.word	0x20000040
 80007d0:	2000003c 	.word	0x2000003c
 80007d4:	20000038 	.word	0x20000038
 80007d8:	4b5a      	ldr	r3, [pc, #360]	; (8000944 <i2c_write_task+0x3d0>)
 80007da:	881b      	ldrh	r3, [r3, #0]
 80007dc:	041b      	lsls	r3, r3, #16
 80007de:	461a      	mov	r2, r3
 80007e0:	4b59      	ldr	r3, [pc, #356]	; (8000948 <i2c_write_task+0x3d4>)
 80007e2:	681b      	ldr	r3, [r3, #0]
 80007e4:	619a      	str	r2, [r3, #24]
			idelay(tmout);
 80007e6:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 80007e8:	4618      	mov	r0, r3
 80007ea:	f7ff fea9 	bl	8000540 <idelay>
			SCL(1);
 80007ee:	4b57      	ldr	r3, [pc, #348]	; (800094c <i2c_write_task+0x3d8>)
 80007f0:	881a      	ldrh	r2, [r3, #0]
 80007f2:	4b55      	ldr	r3, [pc, #340]	; (8000948 <i2c_write_task+0x3d4>)
 80007f4:	681b      	ldr	r3, [r3, #0]
 80007f6:	619a      	str	r2, [r3, #24]
			idelay(tmout);
 80007f8:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 80007fa:	4618      	mov	r0, r3
 80007fc:	f7ff fea0 	bl	8000540 <idelay>
			SCL(0);
 8000800:	4b52      	ldr	r3, [pc, #328]	; (800094c <i2c_write_task+0x3d8>)
 8000802:	881b      	ldrh	r3, [r3, #0]
 8000804:	041a      	lsls	r2, r3, #16
 8000806:	4b50      	ldr	r3, [pc, #320]	; (8000948 <i2c_write_task+0x3d4>)
 8000808:	681b      	ldr	r3, [r3, #0]
 800080a:	619a      	str	r2, [r3, #24]
			tmp <<= 1;
 800080c:	69bb      	ldr	r3, [r7, #24]
 800080e:	005b      	lsls	r3, r3, #1
 8000810:	61bb      	str	r3, [r7, #24]
		for(i=0; i<8; i++) {
 8000812:	69fb      	ldr	r3, [r7, #28]
 8000814:	3301      	adds	r3, #1
 8000816:	61fb      	str	r3, [r7, #28]
 8000818:	69fb      	ldr	r3, [r7, #28]
 800081a:	2b07      	cmp	r3, #7
 800081c:	d9cb      	bls.n	80007b6 <i2c_write_task+0x242>
		}
		/*ACK*/
		idelay(tmout);	/*hold margin*/
 800081e:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 8000820:	4618      	mov	r0, r3
 8000822:	f7ff fe8d 	bl	8000540 <idelay>
		SDA(1);
 8000826:	4b47      	ldr	r3, [pc, #284]	; (8000944 <i2c_write_task+0x3d0>)
 8000828:	881a      	ldrh	r2, [r3, #0]
 800082a:	4b47      	ldr	r3, [pc, #284]	; (8000948 <i2c_write_task+0x3d4>)
 800082c:	681b      	ldr	r3, [r3, #0]
 800082e:	619a      	str	r2, [r3, #24]
		idelay(tmout);
 8000830:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 8000832:	4618      	mov	r0, r3
 8000834:	f7ff fe84 	bl	8000540 <idelay>
		SCL(1);
 8000838:	4b44      	ldr	r3, [pc, #272]	; (800094c <i2c_write_task+0x3d8>)
 800083a:	881a      	ldrh	r2, [r3, #0]
 800083c:	4b42      	ldr	r3, [pc, #264]	; (8000948 <i2c_write_task+0x3d4>)
 800083e:	681b      	ldr	r3, [r3, #0]
 8000840:	619a      	str	r2, [r3, #24]
		idelay(tmout);
 8000842:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 8000844:	4618      	mov	r0, r3
 8000846:	f7ff fe7b 	bl	8000540 <idelay>
		SCL(0);
 800084a:	4b40      	ldr	r3, [pc, #256]	; (800094c <i2c_write_task+0x3d8>)
 800084c:	881b      	ldrh	r3, [r3, #0]
 800084e:	041a      	lsls	r2, r3, #16
 8000850:	4b3d      	ldr	r3, [pc, #244]	; (8000948 <i2c_write_task+0x3d4>)
 8000852:	681b      	ldr	r3, [r3, #0]
 8000854:	619a      	str	r2, [r3, #24]
	}

  while(size) {
 8000856:	e054      	b.n	8000902 <i2c_write_task+0x38e>
    tmp = (*dat++);
 8000858:	687b      	ldr	r3, [r7, #4]
 800085a:	1c5a      	adds	r2, r3, #1
 800085c:	607a      	str	r2, [r7, #4]
 800085e:	781b      	ldrb	r3, [r3, #0]
 8000860:	61bb      	str	r3, [r7, #24]
    for(i=0; i<8; i++) {
 8000862:	2300      	movs	r3, #0
 8000864:	61fb      	str	r3, [r7, #28]
 8000866:	e02a      	b.n	80008be <i2c_write_task+0x34a>
      SDA((tmp & 0x80) ? 1 : 0);
 8000868:	69bb      	ldr	r3, [r7, #24]
 800086a:	09db      	lsrs	r3, r3, #7
 800086c:	f003 0301 	and.w	r3, r3, #1
 8000870:	b2db      	uxtb	r3, r3
 8000872:	2b00      	cmp	r3, #0
 8000874:	d003      	beq.n	800087e <i2c_write_task+0x30a>
 8000876:	4b33      	ldr	r3, [pc, #204]	; (8000944 <i2c_write_task+0x3d0>)
 8000878:	881b      	ldrh	r3, [r3, #0]
 800087a:	461a      	mov	r2, r3
 800087c:	e003      	b.n	8000886 <i2c_write_task+0x312>
 800087e:	4b31      	ldr	r3, [pc, #196]	; (8000944 <i2c_write_task+0x3d0>)
 8000880:	881b      	ldrh	r3, [r3, #0]
 8000882:	041b      	lsls	r3, r3, #16
 8000884:	461a      	mov	r2, r3
 8000886:	4b30      	ldr	r3, [pc, #192]	; (8000948 <i2c_write_task+0x3d4>)
 8000888:	681b      	ldr	r3, [r3, #0]
 800088a:	619a      	str	r2, [r3, #24]
      idelay(tmout);
 800088c:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 800088e:	4618      	mov	r0, r3
 8000890:	f7ff fe56 	bl	8000540 <idelay>
      SCL(1);
 8000894:	4b2d      	ldr	r3, [pc, #180]	; (800094c <i2c_write_task+0x3d8>)
 8000896:	881a      	ldrh	r2, [r3, #0]
 8000898:	4b2b      	ldr	r3, [pc, #172]	; (8000948 <i2c_write_task+0x3d4>)
 800089a:	681b      	ldr	r3, [r3, #0]
 800089c:	619a      	str	r2, [r3, #24]
      idelay(tmout);
 800089e:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 80008a0:	4618      	mov	r0, r3
 80008a2:	f7ff fe4d 	bl	8000540 <idelay>
      SCL(0);
 80008a6:	4b29      	ldr	r3, [pc, #164]	; (800094c <i2c_write_task+0x3d8>)
 80008a8:	881b      	ldrh	r3, [r3, #0]
 80008aa:	041a      	lsls	r2, r3, #16
 80008ac:	4b26      	ldr	r3, [pc, #152]	; (8000948 <i2c_write_task+0x3d4>)
 80008ae:	681b      	ldr	r3, [r3, #0]
 80008b0:	619a      	str	r2, [r3, #24]
      tmp <<= 1;
 80008b2:	69bb      	ldr	r3, [r7, #24]
 80008b4:	005b      	lsls	r3, r3, #1
 80008b6:	61bb      	str	r3, [r7, #24]
    for(i=0; i<8; i++) {
 80008b8:	69fb      	ldr	r3, [r7, #28]
 80008ba:	3301      	adds	r3, #1
 80008bc:	61fb      	str	r3, [r7, #28]
 80008be:	69fb      	ldr	r3, [r7, #28]
 80008c0:	2b07      	cmp	r3, #7
 80008c2:	d9d1      	bls.n	8000868 <i2c_write_task+0x2f4>
    }
    size--;
 80008c4:	8d3b      	ldrh	r3, [r7, #40]	; 0x28
 80008c6:	3b01      	subs	r3, #1
 80008c8:	853b      	strh	r3, [r7, #40]	; 0x28

    /*ACK*/
		idelay(tmout);	/*hold margin*/
 80008ca:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 80008cc:	4618      	mov	r0, r3
 80008ce:	f7ff fe37 	bl	8000540 <idelay>
    SDA(1);
 80008d2:	4b1c      	ldr	r3, [pc, #112]	; (8000944 <i2c_write_task+0x3d0>)
 80008d4:	881a      	ldrh	r2, [r3, #0]
 80008d6:	4b1c      	ldr	r3, [pc, #112]	; (8000948 <i2c_write_task+0x3d4>)
 80008d8:	681b      	ldr	r3, [r3, #0]
 80008da:	619a      	str	r2, [r3, #24]
    idelay(tmout);
 80008dc:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 80008de:	4618      	mov	r0, r3
 80008e0:	f7ff fe2e 	bl	8000540 <idelay>
    SCL(1);
 80008e4:	4b19      	ldr	r3, [pc, #100]	; (800094c <i2c_write_task+0x3d8>)
 80008e6:	881a      	ldrh	r2, [r3, #0]
 80008e8:	4b17      	ldr	r3, [pc, #92]	; (8000948 <i2c_write_task+0x3d4>)
 80008ea:	681b      	ldr	r3, [r3, #0]
 80008ec:	619a      	str	r2, [r3, #24]
    idelay(tmout);
 80008ee:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 80008f0:	4618      	mov	r0, r3
 80008f2:	f7ff fe25 	bl	8000540 <idelay>
    SCL(0);
 80008f6:	4b15      	ldr	r3, [pc, #84]	; (800094c <i2c_write_task+0x3d8>)
 80008f8:	881b      	ldrh	r3, [r3, #0]
 80008fa:	041a      	lsls	r2, r3, #16
 80008fc:	4b12      	ldr	r3, [pc, #72]	; (8000948 <i2c_write_task+0x3d4>)
 80008fe:	681b      	ldr	r3, [r3, #0]
 8000900:	619a      	str	r2, [r3, #24]
  while(size) {
 8000902:	8d3b      	ldrh	r3, [r7, #40]	; 0x28
 8000904:	2b00      	cmp	r3, #0
 8000906:	d1a7      	bne.n	8000858 <i2c_write_task+0x2e4>
  }

  /*STOP*/
  SDA(0);
 8000908:	4b0e      	ldr	r3, [pc, #56]	; (8000944 <i2c_write_task+0x3d0>)
 800090a:	881b      	ldrh	r3, [r3, #0]
 800090c:	041a      	lsls	r2, r3, #16
 800090e:	4b0e      	ldr	r3, [pc, #56]	; (8000948 <i2c_write_task+0x3d4>)
 8000910:	681b      	ldr	r3, [r3, #0]
 8000912:	619a      	str	r2, [r3, #24]
  idelay(tmout);
 8000914:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 8000916:	4618      	mov	r0, r3
 8000918:	f7ff fe12 	bl	8000540 <idelay>
  SCL(1);
 800091c:	4b0b      	ldr	r3, [pc, #44]	; (800094c <i2c_write_task+0x3d8>)
 800091e:	881a      	ldrh	r2, [r3, #0]
 8000920:	4b09      	ldr	r3, [pc, #36]	; (8000948 <i2c_write_task+0x3d4>)
 8000922:	681b      	ldr	r3, [r3, #0]
 8000924:	619a      	str	r2, [r3, #24]
  idelay(tmout);
 8000926:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 8000928:	4618      	mov	r0, r3
 800092a:	f7ff fe09 	bl	8000540 <idelay>
  SDA(1);
 800092e:	4b05      	ldr	r3, [pc, #20]	; (8000944 <i2c_write_task+0x3d0>)
 8000930:	881a      	ldrh	r2, [r3, #0]
 8000932:	4b05      	ldr	r3, [pc, #20]	; (8000948 <i2c_write_task+0x3d4>)
 8000934:	681b      	ldr	r3, [r3, #0]
 8000936:	619a      	str	r2, [r3, #24]

  return ack;
 8000938:	697b      	ldr	r3, [r7, #20]
}
 800093a:	4618      	mov	r0, r3
 800093c:	3720      	adds	r7, #32
 800093e:	46bd      	mov	sp, r7
 8000940:	bd80      	pop	{r7, pc}
 8000942:	bf00      	nop
 8000944:	20000040 	.word	0x20000040
 8000948:	2000003c 	.word	0x2000003c
 800094c:	20000038 	.word	0x20000038

08000950 <i2c_read_task>:


uint32_t i2c_read_task(uint8_t id, uint16_t addr, uint16_t type, uint8_t* dat, uint16_t size, uint16_t tmout)
{
 8000950:	b580      	push	{r7, lr}
 8000952:	b08a      	sub	sp, #40	; 0x28
 8000954:	af02      	add	r7, sp, #8
 8000956:	607b      	str	r3, [r7, #4]
 8000958:	4603      	mov	r3, r0
 800095a:	73fb      	strb	r3, [r7, #15]
 800095c:	460b      	mov	r3, r1
 800095e:	81bb      	strh	r3, [r7, #12]
 8000960:	4613      	mov	r3, r2
 8000962:	817b      	strh	r3, [r7, #10]
    uint32_t i, ack, tmp;

		ack = i2c_write_task(id, addr, type, dat, 0, tmout);
 8000964:	897a      	ldrh	r2, [r7, #10]
 8000966:	89b9      	ldrh	r1, [r7, #12]
 8000968:	7bf8      	ldrb	r0, [r7, #15]
 800096a:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 800096c:	9301      	str	r3, [sp, #4]
 800096e:	2300      	movs	r3, #0
 8000970:	9300      	str	r3, [sp, #0]
 8000972:	687b      	ldr	r3, [r7, #4]
 8000974:	f7ff fdfe 	bl	8000574 <i2c_write_task>
 8000978:	6178      	str	r0, [r7, #20]

		/*START*/
		idelay(tmout);
 800097a:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 800097c:	4618      	mov	r0, r3
 800097e:	f7ff fddf 	bl	8000540 <idelay>
    SDA(0);
 8000982:	4b7d      	ldr	r3, [pc, #500]	; (8000b78 <i2c_read_task+0x228>)
 8000984:	881b      	ldrh	r3, [r3, #0]
 8000986:	041a      	lsls	r2, r3, #16
 8000988:	4b7c      	ldr	r3, [pc, #496]	; (8000b7c <i2c_read_task+0x22c>)
 800098a:	681b      	ldr	r3, [r3, #0]
 800098c:	619a      	str	r2, [r3, #24]
    idelay(tmout);
 800098e:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 8000990:	4618      	mov	r0, r3
 8000992:	f7ff fdd5 	bl	8000540 <idelay>
    SCL(0);
 8000996:	4b7a      	ldr	r3, [pc, #488]	; (8000b80 <i2c_read_task+0x230>)
 8000998:	881b      	ldrh	r3, [r3, #0]
 800099a:	041a      	lsls	r2, r3, #16
 800099c:	4b77      	ldr	r3, [pc, #476]	; (8000b7c <i2c_read_task+0x22c>)
 800099e:	681b      	ldr	r3, [r3, #0]
 80009a0:	619a      	str	r2, [r3, #24]
		idelay(tmout);
 80009a2:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 80009a4:	4618      	mov	r0, r3
 80009a6:	f7ff fdcb 	bl	8000540 <idelay>
		tmp = id + 1;
 80009aa:	7bfb      	ldrb	r3, [r7, #15]
 80009ac:	3301      	adds	r3, #1
 80009ae:	61bb      	str	r3, [r7, #24]

		/*RID*/
    for(i=0; i<8; i++)
 80009b0:	2300      	movs	r3, #0
 80009b2:	61fb      	str	r3, [r7, #28]
 80009b4:	e02a      	b.n	8000a0c <i2c_read_task+0xbc>
    {
      SDA((tmp & 0x80) ? 1 : 0);
 80009b6:	69bb      	ldr	r3, [r7, #24]
 80009b8:	09db      	lsrs	r3, r3, #7
 80009ba:	f003 0301 	and.w	r3, r3, #1
 80009be:	b2db      	uxtb	r3, r3
 80009c0:	2b00      	cmp	r3, #0
 80009c2:	d003      	beq.n	80009cc <i2c_read_task+0x7c>
 80009c4:	4b6c      	ldr	r3, [pc, #432]	; (8000b78 <i2c_read_task+0x228>)
 80009c6:	881b      	ldrh	r3, [r3, #0]
 80009c8:	461a      	mov	r2, r3
 80009ca:	e003      	b.n	80009d4 <i2c_read_task+0x84>
 80009cc:	4b6a      	ldr	r3, [pc, #424]	; (8000b78 <i2c_read_task+0x228>)
 80009ce:	881b      	ldrh	r3, [r3, #0]
 80009d0:	041b      	lsls	r3, r3, #16
 80009d2:	461a      	mov	r2, r3
 80009d4:	4b69      	ldr	r3, [pc, #420]	; (8000b7c <i2c_read_task+0x22c>)
 80009d6:	681b      	ldr	r3, [r3, #0]
 80009d8:	619a      	str	r2, [r3, #24]
			idelay(tmout);
 80009da:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 80009dc:	4618      	mov	r0, r3
 80009de:	f7ff fdaf 	bl	8000540 <idelay>
      SCL(1);
 80009e2:	4b67      	ldr	r3, [pc, #412]	; (8000b80 <i2c_read_task+0x230>)
 80009e4:	881a      	ldrh	r2, [r3, #0]
 80009e6:	4b65      	ldr	r3, [pc, #404]	; (8000b7c <i2c_read_task+0x22c>)
 80009e8:	681b      	ldr	r3, [r3, #0]
 80009ea:	619a      	str	r2, [r3, #24]
      idelay(tmout);
 80009ec:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 80009ee:	4618      	mov	r0, r3
 80009f0:	f7ff fda6 	bl	8000540 <idelay>
			tmp <<= 1;
 80009f4:	69bb      	ldr	r3, [r7, #24]
 80009f6:	005b      	lsls	r3, r3, #1
 80009f8:	61bb      	str	r3, [r7, #24]
      SCL(0);
 80009fa:	4b61      	ldr	r3, [pc, #388]	; (8000b80 <i2c_read_task+0x230>)
 80009fc:	881b      	ldrh	r3, [r3, #0]
 80009fe:	041a      	lsls	r2, r3, #16
 8000a00:	4b5e      	ldr	r3, [pc, #376]	; (8000b7c <i2c_read_task+0x22c>)
 8000a02:	681b      	ldr	r3, [r3, #0]
 8000a04:	619a      	str	r2, [r3, #24]
    for(i=0; i<8; i++)
 8000a06:	69fb      	ldr	r3, [r7, #28]
 8000a08:	3301      	adds	r3, #1
 8000a0a:	61fb      	str	r3, [r7, #28]
 8000a0c:	69fb      	ldr	r3, [r7, #28]
 8000a0e:	2b07      	cmp	r3, #7
 8000a10:	d9d1      	bls.n	80009b6 <i2c_read_task+0x66>
    }
    /*ACK*/
		idelay(tmout); /*hold margin*/
 8000a12:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 8000a14:	4618      	mov	r0, r3
 8000a16:	f7ff fd93 	bl	8000540 <idelay>
    SDA(1);
 8000a1a:	4b57      	ldr	r3, [pc, #348]	; (8000b78 <i2c_read_task+0x228>)
 8000a1c:	881a      	ldrh	r2, [r3, #0]
 8000a1e:	4b57      	ldr	r3, [pc, #348]	; (8000b7c <i2c_read_task+0x22c>)
 8000a20:	681b      	ldr	r3, [r3, #0]
 8000a22:	619a      	str	r2, [r3, #24]
    idelay(tmout);
 8000a24:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 8000a26:	4618      	mov	r0, r3
 8000a28:	f7ff fd8a 	bl	8000540 <idelay>
    SCL(1);
 8000a2c:	4b54      	ldr	r3, [pc, #336]	; (8000b80 <i2c_read_task+0x230>)
 8000a2e:	881a      	ldrh	r2, [r3, #0]
 8000a30:	4b52      	ldr	r3, [pc, #328]	; (8000b7c <i2c_read_task+0x22c>)
 8000a32:	681b      	ldr	r3, [r3, #0]
 8000a34:	619a      	str	r2, [r3, #24]
    idelay(tmout);
 8000a36:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 8000a38:	4618      	mov	r0, r3
 8000a3a:	f7ff fd81 	bl	8000540 <idelay>
		tmp = 0;
 8000a3e:	2300      	movs	r3, #0
 8000a40:	61bb      	str	r3, [r7, #24]
    SCL(0);
 8000a42:	4b4f      	ldr	r3, [pc, #316]	; (8000b80 <i2c_read_task+0x230>)
 8000a44:	881b      	ldrh	r3, [r3, #0]
 8000a46:	041a      	lsls	r2, r3, #16
 8000a48:	4b4c      	ldr	r3, [pc, #304]	; (8000b7c <i2c_read_task+0x22c>)
 8000a4a:	681b      	ldr	r3, [r3, #0]
 8000a4c:	619a      	str	r2, [r3, #24]

		/*R-DATA*/
    while(size > 0)
 8000a4e:	e072      	b.n	8000b36 <i2c_read_task+0x1e6>
    { /*read sda pin*/
      for(i=0; i<8; i++) {
 8000a50:	2300      	movs	r3, #0
 8000a52:	61fb      	str	r3, [r7, #28]
 8000a54:	e02a      	b.n	8000aac <i2c_read_task+0x15c>
				idelay(tmout);
 8000a56:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 8000a58:	4618      	mov	r0, r3
 8000a5a:	f7ff fd71 	bl	8000540 <idelay>
        SCL(1);
 8000a5e:	4b48      	ldr	r3, [pc, #288]	; (8000b80 <i2c_read_task+0x230>)
 8000a60:	881a      	ldrh	r2, [r3, #0]
 8000a62:	4b46      	ldr	r3, [pc, #280]	; (8000b7c <i2c_read_task+0x22c>)
 8000a64:	681b      	ldr	r3, [r3, #0]
 8000a66:	619a      	str	r2, [r3, #24]
        idelay(tmout);
 8000a68:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 8000a6a:	4618      	mov	r0, r3
 8000a6c:	f7ff fd68 	bl	8000540 <idelay>
				tmp |= I2C_DAT;
 8000a70:	4b42      	ldr	r3, [pc, #264]	; (8000b7c <i2c_read_task+0x22c>)
 8000a72:	681b      	ldr	r3, [r3, #0]
 8000a74:	691b      	ldr	r3, [r3, #16]
 8000a76:	4a40      	ldr	r2, [pc, #256]	; (8000b78 <i2c_read_task+0x228>)
 8000a78:	8812      	ldrh	r2, [r2, #0]
 8000a7a:	4013      	ands	r3, r2
 8000a7c:	2b00      	cmp	r3, #0
 8000a7e:	bf14      	ite	ne
 8000a80:	2301      	movne	r3, #1
 8000a82:	2300      	moveq	r3, #0
 8000a84:	b2db      	uxtb	r3, r3
 8000a86:	461a      	mov	r2, r3
 8000a88:	69bb      	ldr	r3, [r7, #24]
 8000a8a:	4313      	orrs	r3, r2
 8000a8c:	61bb      	str	r3, [r7, #24]
        SCL(0);
 8000a8e:	4b3c      	ldr	r3, [pc, #240]	; (8000b80 <i2c_read_task+0x230>)
 8000a90:	881b      	ldrh	r3, [r3, #0]
 8000a92:	041a      	lsls	r2, r3, #16
 8000a94:	4b39      	ldr	r3, [pc, #228]	; (8000b7c <i2c_read_task+0x22c>)
 8000a96:	681b      	ldr	r3, [r3, #0]
 8000a98:	619a      	str	r2, [r3, #24]
				if(i < 7) tmp <<= 1;
 8000a9a:	69fb      	ldr	r3, [r7, #28]
 8000a9c:	2b06      	cmp	r3, #6
 8000a9e:	d802      	bhi.n	8000aa6 <i2c_read_task+0x156>
 8000aa0:	69bb      	ldr	r3, [r7, #24]
 8000aa2:	005b      	lsls	r3, r3, #1
 8000aa4:	61bb      	str	r3, [r7, #24]
      for(i=0; i<8; i++) {
 8000aa6:	69fb      	ldr	r3, [r7, #28]
 8000aa8:	3301      	adds	r3, #1
 8000aaa:	61fb      	str	r3, [r7, #28]
 8000aac:	69fb      	ldr	r3, [r7, #28]
 8000aae:	2b07      	cmp	r3, #7
 8000ab0:	d9d1      	bls.n	8000a56 <i2c_read_task+0x106>
      }
      (*dat++) = tmp;
 8000ab2:	687b      	ldr	r3, [r7, #4]
 8000ab4:	1c5a      	adds	r2, r3, #1
 8000ab6:	607a      	str	r2, [r7, #4]
 8000ab8:	69ba      	ldr	r2, [r7, #24]
 8000aba:	b2d2      	uxtb	r2, r2
 8000abc:	701a      	strb	r2, [r3, #0]
			tmp = 0;
 8000abe:	2300      	movs	r3, #0
 8000ac0:	61bb      	str	r3, [r7, #24]
			size--;
 8000ac2:	8d3b      	ldrh	r3, [r7, #40]	; 0x28
 8000ac4:	3b01      	subs	r3, #1
 8000ac6:	853b      	strh	r3, [r7, #40]	; 0x28

      if(size) {
 8000ac8:	8d3b      	ldrh	r3, [r7, #40]	; 0x28
 8000aca:	2b00      	cmp	r3, #0
 8000acc:	d020      	beq.n	8000b10 <i2c_read_task+0x1c0>
        SDA(0);/*Force ACK*/
 8000ace:	4b2a      	ldr	r3, [pc, #168]	; (8000b78 <i2c_read_task+0x228>)
 8000ad0:	881b      	ldrh	r3, [r3, #0]
 8000ad2:	041a      	lsls	r2, r3, #16
 8000ad4:	4b29      	ldr	r3, [pc, #164]	; (8000b7c <i2c_read_task+0x22c>)
 8000ad6:	681b      	ldr	r3, [r3, #0]
 8000ad8:	619a      	str	r2, [r3, #24]
        idelay(tmout);
 8000ada:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 8000adc:	4618      	mov	r0, r3
 8000ade:	f7ff fd2f 	bl	8000540 <idelay>
        SCL(1);
 8000ae2:	4b27      	ldr	r3, [pc, #156]	; (8000b80 <i2c_read_task+0x230>)
 8000ae4:	881a      	ldrh	r2, [r3, #0]
 8000ae6:	4b25      	ldr	r3, [pc, #148]	; (8000b7c <i2c_read_task+0x22c>)
 8000ae8:	681b      	ldr	r3, [r3, #0]
 8000aea:	619a      	str	r2, [r3, #24]
        idelay(tmout);
 8000aec:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 8000aee:	4618      	mov	r0, r3
 8000af0:	f7ff fd26 	bl	8000540 <idelay>
        SCL(0);
 8000af4:	4b22      	ldr	r3, [pc, #136]	; (8000b80 <i2c_read_task+0x230>)
 8000af6:	881b      	ldrh	r3, [r3, #0]
 8000af8:	041a      	lsls	r2, r3, #16
 8000afa:	4b20      	ldr	r3, [pc, #128]	; (8000b7c <i2c_read_task+0x22c>)
 8000afc:	681b      	ldr	r3, [r3, #0]
 8000afe:	619a      	str	r2, [r3, #24]
        __asm volatile("NOP");
 8000b00:	bf00      	nop
        SDA(1);
 8000b02:	4b1d      	ldr	r3, [pc, #116]	; (8000b78 <i2c_read_task+0x228>)
 8000b04:	881a      	ldrh	r2, [r3, #0]
 8000b06:	4b1d      	ldr	r3, [pc, #116]	; (8000b7c <i2c_read_task+0x22c>)
 8000b08:	681b      	ldr	r3, [r3, #0]
 8000b0a:	619a      	str	r2, [r3, #24]
				__asm volatile("NOP");
 8000b0c:	bf00      	nop
 8000b0e:	e012      	b.n	8000b36 <i2c_read_task+0x1e6>
      }
      else { /*Noack*/
        idelay(tmout);
 8000b10:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 8000b12:	4618      	mov	r0, r3
 8000b14:	f7ff fd14 	bl	8000540 <idelay>
        SCL(1);
 8000b18:	4b19      	ldr	r3, [pc, #100]	; (8000b80 <i2c_read_task+0x230>)
 8000b1a:	881a      	ldrh	r2, [r3, #0]
 8000b1c:	4b17      	ldr	r3, [pc, #92]	; (8000b7c <i2c_read_task+0x22c>)
 8000b1e:	681b      	ldr	r3, [r3, #0]
 8000b20:	619a      	str	r2, [r3, #24]
        idelay(tmout);
 8000b22:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 8000b24:	4618      	mov	r0, r3
 8000b26:	f7ff fd0b 	bl	8000540 <idelay>
        SCL(0);
 8000b2a:	4b15      	ldr	r3, [pc, #84]	; (8000b80 <i2c_read_task+0x230>)
 8000b2c:	881b      	ldrh	r3, [r3, #0]
 8000b2e:	041a      	lsls	r2, r3, #16
 8000b30:	4b12      	ldr	r3, [pc, #72]	; (8000b7c <i2c_read_task+0x22c>)
 8000b32:	681b      	ldr	r3, [r3, #0]
 8000b34:	619a      	str	r2, [r3, #24]
    while(size > 0)
 8000b36:	8d3b      	ldrh	r3, [r7, #40]	; 0x28
 8000b38:	2b00      	cmp	r3, #0
 8000b3a:	d189      	bne.n	8000a50 <i2c_read_task+0x100>
      }
    }

    /*STOP*/
    SDA(0);
 8000b3c:	4b0e      	ldr	r3, [pc, #56]	; (8000b78 <i2c_read_task+0x228>)
 8000b3e:	881b      	ldrh	r3, [r3, #0]
 8000b40:	041a      	lsls	r2, r3, #16
 8000b42:	4b0e      	ldr	r3, [pc, #56]	; (8000b7c <i2c_read_task+0x22c>)
 8000b44:	681b      	ldr	r3, [r3, #0]
 8000b46:	619a      	str	r2, [r3, #24]
    idelay(tmout);
 8000b48:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 8000b4a:	4618      	mov	r0, r3
 8000b4c:	f7ff fcf8 	bl	8000540 <idelay>
    SCL(1);
 8000b50:	4b0b      	ldr	r3, [pc, #44]	; (8000b80 <i2c_read_task+0x230>)
 8000b52:	881a      	ldrh	r2, [r3, #0]
 8000b54:	4b09      	ldr	r3, [pc, #36]	; (8000b7c <i2c_read_task+0x22c>)
 8000b56:	681b      	ldr	r3, [r3, #0]
 8000b58:	619a      	str	r2, [r3, #24]
    idelay(tmout);
 8000b5a:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 8000b5c:	4618      	mov	r0, r3
 8000b5e:	f7ff fcef 	bl	8000540 <idelay>
    SDA(1);
 8000b62:	4b05      	ldr	r3, [pc, #20]	; (8000b78 <i2c_read_task+0x228>)
 8000b64:	881a      	ldrh	r2, [r3, #0]
 8000b66:	4b05      	ldr	r3, [pc, #20]	; (8000b7c <i2c_read_task+0x22c>)
 8000b68:	681b      	ldr	r3, [r3, #0]
 8000b6a:	619a      	str	r2, [r3, #24]

    return ack;
 8000b6c:	697b      	ldr	r3, [r7, #20]
}
 8000b6e:	4618      	mov	r0, r3
 8000b70:	3720      	adds	r7, #32
 8000b72:	46bd      	mov	sp, r7
 8000b74:	bd80      	pop	{r7, pc}
 8000b76:	bf00      	nop
 8000b78:	20000040 	.word	0x20000040
 8000b7c:	2000003c 	.word	0x2000003c
 8000b80:	20000038 	.word	0x20000038

08000b84 <_8u16>:
void VCP_Transmit_Packet(int plus);
void VCP_Receive_Packet(void);
void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart);
void HAL_UART_TxCpltCallback(UART_HandleTypeDef *UartHandle);

u16 _8u16(u8 a, u8 b) { return (u16)(((u16)a << 8) | (u16)b); }
 8000b84:	b480      	push	{r7}
 8000b86:	b083      	sub	sp, #12
 8000b88:	af00      	add	r7, sp, #0
 8000b8a:	4603      	mov	r3, r0
 8000b8c:	460a      	mov	r2, r1
 8000b8e:	71fb      	strb	r3, [r7, #7]
 8000b90:	4613      	mov	r3, r2
 8000b92:	71bb      	strb	r3, [r7, #6]
 8000b94:	79fb      	ldrb	r3, [r7, #7]
 8000b96:	021b      	lsls	r3, r3, #8
 8000b98:	b21a      	sxth	r2, r3
 8000b9a:	79bb      	ldrb	r3, [r7, #6]
 8000b9c:	b21b      	sxth	r3, r3
 8000b9e:	4313      	orrs	r3, r2
 8000ba0:	b21b      	sxth	r3, r3
 8000ba2:	b29b      	uxth	r3, r3
 8000ba4:	4618      	mov	r0, r3
 8000ba6:	370c      	adds	r7, #12
 8000ba8:	46bd      	mov	sp, r7
 8000baa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000bae:	4770      	bx	lr

08000bb0 <LED_LOOK>:
Function	: LED display
Date		: 2021.07.14
Version		: CLK base is 170Mhz
***************************************************************************/
void LED_LOOK()
{
 8000bb0:	b580      	push	{r7, lr}
 8000bb2:	af00      	add	r7, sp, #0
	static int t;

	if(t > 500000) {
 8000bb4:	4b09      	ldr	r3, [pc, #36]	; (8000bdc <LED_LOOK+0x2c>)
 8000bb6:	681b      	ldr	r3, [r3, #0]
 8000bb8:	4a09      	ldr	r2, [pc, #36]	; (8000be0 <LED_LOOK+0x30>)
 8000bba:	4293      	cmp	r3, r2
 8000bbc:	dd07      	ble.n	8000bce <LED_LOOK+0x1e>
		t=0;
 8000bbe:	4b07      	ldr	r3, [pc, #28]	; (8000bdc <LED_LOOK+0x2c>)
 8000bc0:	2200      	movs	r2, #0
 8000bc2:	601a      	str	r2, [r3, #0]
		T_LED;
 8000bc4:	2120      	movs	r1, #32
 8000bc6:	4807      	ldr	r0, [pc, #28]	; (8000be4 <LED_LOOK+0x34>)
 8000bc8:	f001 fa57 	bl	800207a <HAL_GPIO_TogglePin>
	}
	else t++;
}
 8000bcc:	e004      	b.n	8000bd8 <LED_LOOK+0x28>
	else t++;
 8000bce:	4b03      	ldr	r3, [pc, #12]	; (8000bdc <LED_LOOK+0x2c>)
 8000bd0:	681b      	ldr	r3, [r3, #0]
 8000bd2:	3301      	adds	r3, #1
 8000bd4:	4a01      	ldr	r2, [pc, #4]	; (8000bdc <LED_LOOK+0x2c>)
 8000bd6:	6013      	str	r3, [r2, #0]
}
 8000bd8:	bf00      	nop
 8000bda:	bd80      	pop	{r7, pc}
 8000bdc:	20000028 	.word	0x20000028
 8000be0:	0007a120 	.word	0x0007a120
 8000be4:	40020000 	.word	0x40020000

08000be8 <Delay_us>:
Function	: soft delay
Date		: 2021.07.14
Version		: CLK base is 170Mhz
***************************************************************************/
void Delay_us(int delay)
{
 8000be8:	b480      	push	{r7}
 8000bea:	b085      	sub	sp, #20
 8000bec:	af00      	add	r7, sp, #0
 8000bee:	6078      	str	r0, [r7, #4]
	volatile int i, k;

	for(i=0; i < delay; i++) {
 8000bf0:	2300      	movs	r3, #0
 8000bf2:	60fb      	str	r3, [r7, #12]
 8000bf4:	e00c      	b.n	8000c10 <Delay_us+0x28>
		for(k=0; k < 1; k++) {
 8000bf6:	2300      	movs	r3, #0
 8000bf8:	60bb      	str	r3, [r7, #8]
 8000bfa:	e003      	b.n	8000c04 <Delay_us+0x1c>
			__asm volatile("NOP");
 8000bfc:	bf00      	nop
		for(k=0; k < 1; k++) {
 8000bfe:	68bb      	ldr	r3, [r7, #8]
 8000c00:	3301      	adds	r3, #1
 8000c02:	60bb      	str	r3, [r7, #8]
 8000c04:	68bb      	ldr	r3, [r7, #8]
 8000c06:	2b00      	cmp	r3, #0
 8000c08:	ddf8      	ble.n	8000bfc <Delay_us+0x14>
	for(i=0; i < delay; i++) {
 8000c0a:	68fb      	ldr	r3, [r7, #12]
 8000c0c:	3301      	adds	r3, #1
 8000c0e:	60fb      	str	r3, [r7, #12]
 8000c10:	68fb      	ldr	r3, [r7, #12]
 8000c12:	687a      	ldr	r2, [r7, #4]
 8000c14:	429a      	cmp	r2, r3
 8000c16:	dcee      	bgt.n	8000bf6 <Delay_us+0xe>
		}
	}

	for(i=0; i < delay; i++) {
 8000c18:	2300      	movs	r3, #0
 8000c1a:	60fb      	str	r3, [r7, #12]
 8000c1c:	e012      	b.n	8000c44 <Delay_us+0x5c>
		for(k=0; k < 2; k++) {
 8000c1e:	2300      	movs	r3, #0
 8000c20:	60bb      	str	r3, [r7, #8]
 8000c22:	e009      	b.n	8000c38 <Delay_us+0x50>
			__asm volatile("NOP");
 8000c24:	bf00      	nop
			__asm volatile("NOP");
 8000c26:	bf00      	nop
			__asm volatile("NOP");
 8000c28:	bf00      	nop
			__asm volatile("NOP");
 8000c2a:	bf00      	nop
			__asm volatile("NOP");
 8000c2c:	bf00      	nop
			__asm volatile("NOP");
 8000c2e:	bf00      	nop
			__asm volatile("NOP");
 8000c30:	bf00      	nop
		for(k=0; k < 2; k++) {
 8000c32:	68bb      	ldr	r3, [r7, #8]
 8000c34:	3301      	adds	r3, #1
 8000c36:	60bb      	str	r3, [r7, #8]
 8000c38:	68bb      	ldr	r3, [r7, #8]
 8000c3a:	2b01      	cmp	r3, #1
 8000c3c:	ddf2      	ble.n	8000c24 <Delay_us+0x3c>
	for(i=0; i < delay; i++) {
 8000c3e:	68fb      	ldr	r3, [r7, #12]
 8000c40:	3301      	adds	r3, #1
 8000c42:	60fb      	str	r3, [r7, #12]
 8000c44:	68fb      	ldr	r3, [r7, #12]
 8000c46:	687a      	ldr	r2, [r7, #4]
 8000c48:	429a      	cmp	r2, r3
 8000c4a:	dce8      	bgt.n	8000c1e <Delay_us+0x36>
			//__asm volatile("NOP");
		}
	}
}
 8000c4c:	bf00      	nop
 8000c4e:	bf00      	nop
 8000c50:	3714      	adds	r7, #20
 8000c52:	46bd      	mov	sp, r7
 8000c54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c58:	4770      	bx	lr
	...

08000c5c <S_Wire_Func>:
PC10 : CTRL
PC11 : EN
*/

int S_Wire_Func(int type)
{
 8000c5c:	b580      	push	{r7, lr}
 8000c5e:	b088      	sub	sp, #32
 8000c60:	af00      	add	r7, sp, #0
 8000c62:	6078      	str	r0, [r7, #4]
	u32 cnt, p0, p1, p2, p3;

	p0 = (uint32_t)USBpk.Buf[6]<<8 | USBpk.Buf[7];
 8000c64:	4b83      	ldr	r3, [pc, #524]	; (8000e74 <S_Wire_Func+0x218>)
 8000c66:	799b      	ldrb	r3, [r3, #6]
 8000c68:	021b      	lsls	r3, r3, #8
 8000c6a:	4a82      	ldr	r2, [pc, #520]	; (8000e74 <S_Wire_Func+0x218>)
 8000c6c:	79d2      	ldrb	r2, [r2, #7]
 8000c6e:	4313      	orrs	r3, r2
 8000c70:	61bb      	str	r3, [r7, #24]
	p1 = (uint32_t)USBpk.Buf[8]<<8 | USBpk.Buf[9];
 8000c72:	4b80      	ldr	r3, [pc, #512]	; (8000e74 <S_Wire_Func+0x218>)
 8000c74:	7a1b      	ldrb	r3, [r3, #8]
 8000c76:	021b      	lsls	r3, r3, #8
 8000c78:	4a7e      	ldr	r2, [pc, #504]	; (8000e74 <S_Wire_Func+0x218>)
 8000c7a:	7a52      	ldrb	r2, [r2, #9]
 8000c7c:	4313      	orrs	r3, r2
 8000c7e:	617b      	str	r3, [r7, #20]
	p2 = (uint32_t)USBpk.Buf[10]<<8 | USBpk.Buf[11];
 8000c80:	4b7c      	ldr	r3, [pc, #496]	; (8000e74 <S_Wire_Func+0x218>)
 8000c82:	7a9b      	ldrb	r3, [r3, #10]
 8000c84:	021b      	lsls	r3, r3, #8
 8000c86:	4a7b      	ldr	r2, [pc, #492]	; (8000e74 <S_Wire_Func+0x218>)
 8000c88:	7ad2      	ldrb	r2, [r2, #11]
 8000c8a:	4313      	orrs	r3, r2
 8000c8c:	613b      	str	r3, [r7, #16]
	p3 = (uint32_t)USBpk.Buf[12]<<8 | USBpk.Buf[13];
 8000c8e:	4b79      	ldr	r3, [pc, #484]	; (8000e74 <S_Wire_Func+0x218>)
 8000c90:	7b1b      	ldrb	r3, [r3, #12]
 8000c92:	021b      	lsls	r3, r3, #8
 8000c94:	4a77      	ldr	r2, [pc, #476]	; (8000e74 <S_Wire_Func+0x218>)
 8000c96:	7b52      	ldrb	r2, [r2, #13]
 8000c98:	4313      	orrs	r3, r2
 8000c9a:	60fb      	str	r3, [r7, #12]

	if(type == 0) S_CTRL(1);
 8000c9c:	687b      	ldr	r3, [r7, #4]
 8000c9e:	2b00      	cmp	r3, #0
 8000ca0:	d105      	bne.n	8000cae <S_Wire_Func+0x52>
 8000ca2:	2201      	movs	r2, #1
 8000ca4:	2120      	movs	r1, #32
 8000ca6:	4874      	ldr	r0, [pc, #464]	; (8000e78 <S_Wire_Func+0x21c>)
 8000ca8:	f001 f9ce 	bl	8002048 <HAL_GPIO_WritePin>
 8000cac:	e004      	b.n	8000cb8 <S_Wire_Func+0x5c>
	else S_EN(1);
 8000cae:	2201      	movs	r2, #1
 8000cb0:	2140      	movs	r1, #64	; 0x40
 8000cb2:	4871      	ldr	r0, [pc, #452]	; (8000e78 <S_Wire_Func+0x21c>)
 8000cb4:	f001 f9c8 	bl	8002048 <HAL_GPIO_WritePin>

	//step 1: init time setting
	Delay_us(g_swire_init_time);
 8000cb8:	4b70      	ldr	r3, [pc, #448]	; (8000e7c <S_Wire_Func+0x220>)
 8000cba:	681b      	ldr	r3, [r3, #0]
 8000cbc:	4618      	mov	r0, r3
 8000cbe:	f7ff ff93 	bl	8000be8 <Delay_us>

	//step 2: setup time setting
	for(cnt=0; cnt < p0; cnt++) {
 8000cc2:	2300      	movs	r3, #0
 8000cc4:	61fb      	str	r3, [r7, #28]
 8000cc6:	e013      	b.n	8000cf0 <S_Wire_Func+0x94>
		Delay_us(g_swire_pulse_time);	// setup time
 8000cc8:	4b6d      	ldr	r3, [pc, #436]	; (8000e80 <S_Wire_Func+0x224>)
 8000cca:	681b      	ldr	r3, [r3, #0]
 8000ccc:	4618      	mov	r0, r3
 8000cce:	f7ff ff8b 	bl	8000be8 <Delay_us>
		if(type == 0) T_CTRL;
 8000cd2:	687b      	ldr	r3, [r7, #4]
 8000cd4:	2b00      	cmp	r3, #0
 8000cd6:	d104      	bne.n	8000ce2 <S_Wire_Func+0x86>
 8000cd8:	2120      	movs	r1, #32
 8000cda:	4867      	ldr	r0, [pc, #412]	; (8000e78 <S_Wire_Func+0x21c>)
 8000cdc:	f001 f9cd 	bl	800207a <HAL_GPIO_TogglePin>
 8000ce0:	e003      	b.n	8000cea <S_Wire_Func+0x8e>
		else T_EN;
 8000ce2:	2140      	movs	r1, #64	; 0x40
 8000ce4:	4864      	ldr	r0, [pc, #400]	; (8000e78 <S_Wire_Func+0x21c>)
 8000ce6:	f001 f9c8 	bl	800207a <HAL_GPIO_TogglePin>
	for(cnt=0; cnt < p0; cnt++) {
 8000cea:	69fb      	ldr	r3, [r7, #28]
 8000cec:	3301      	adds	r3, #1
 8000cee:	61fb      	str	r3, [r7, #28]
 8000cf0:	69fa      	ldr	r2, [r7, #28]
 8000cf2:	69bb      	ldr	r3, [r7, #24]
 8000cf4:	429a      	cmp	r2, r3
 8000cf6:	d3e7      	bcc.n	8000cc8 <S_Wire_Func+0x6c>
	}

	Delay_us(g_swire_store_time);	// store time
 8000cf8:	4b62      	ldr	r3, [pc, #392]	; (8000e84 <S_Wire_Func+0x228>)
 8000cfa:	681b      	ldr	r3, [r3, #0]
 8000cfc:	4618      	mov	r0, r3
 8000cfe:	f7ff ff73 	bl	8000be8 <Delay_us>
	S_CTRL(0);
 8000d02:	2200      	movs	r2, #0
 8000d04:	2120      	movs	r1, #32
 8000d06:	485c      	ldr	r0, [pc, #368]	; (8000e78 <S_Wire_Func+0x21c>)
 8000d08:	f001 f99e 	bl	8002048 <HAL_GPIO_WritePin>

	if(g_swire_init_time1 > 0 && p1 > 0)
 8000d0c:	4b5e      	ldr	r3, [pc, #376]	; (8000e88 <S_Wire_Func+0x22c>)
 8000d0e:	681b      	ldr	r3, [r3, #0]
 8000d10:	2b00      	cmp	r3, #0
 8000d12:	d035      	beq.n	8000d80 <S_Wire_Func+0x124>
 8000d14:	697b      	ldr	r3, [r7, #20]
 8000d16:	2b00      	cmp	r3, #0
 8000d18:	d032      	beq.n	8000d80 <S_Wire_Func+0x124>
	{
		if(type == 0) S_CTRL(1);
 8000d1a:	687b      	ldr	r3, [r7, #4]
 8000d1c:	2b00      	cmp	r3, #0
 8000d1e:	d105      	bne.n	8000d2c <S_Wire_Func+0xd0>
 8000d20:	2201      	movs	r2, #1
 8000d22:	2120      	movs	r1, #32
 8000d24:	4854      	ldr	r0, [pc, #336]	; (8000e78 <S_Wire_Func+0x21c>)
 8000d26:	f001 f98f 	bl	8002048 <HAL_GPIO_WritePin>
 8000d2a:	e004      	b.n	8000d36 <S_Wire_Func+0xda>
		else S_EN(1);
 8000d2c:	2201      	movs	r2, #1
 8000d2e:	2140      	movs	r1, #64	; 0x40
 8000d30:	4851      	ldr	r0, [pc, #324]	; (8000e78 <S_Wire_Func+0x21c>)
 8000d32:	f001 f989 	bl	8002048 <HAL_GPIO_WritePin>
		Delay_us(g_swire_init_time1);	// store time
 8000d36:	4b54      	ldr	r3, [pc, #336]	; (8000e88 <S_Wire_Func+0x22c>)
 8000d38:	681b      	ldr	r3, [r3, #0]
 8000d3a:	4618      	mov	r0, r3
 8000d3c:	f7ff ff54 	bl	8000be8 <Delay_us>

		for(cnt=0; cnt < p1; cnt++) {
 8000d40:	2300      	movs	r3, #0
 8000d42:	61fb      	str	r3, [r7, #28]
 8000d44:	e013      	b.n	8000d6e <S_Wire_Func+0x112>
			Delay_us(g_swire_pulse_time1);	// setup time
 8000d46:	4b51      	ldr	r3, [pc, #324]	; (8000e8c <S_Wire_Func+0x230>)
 8000d48:	681b      	ldr	r3, [r3, #0]
 8000d4a:	4618      	mov	r0, r3
 8000d4c:	f7ff ff4c 	bl	8000be8 <Delay_us>
			if(type == 0) T_CTRL;
 8000d50:	687b      	ldr	r3, [r7, #4]
 8000d52:	2b00      	cmp	r3, #0
 8000d54:	d104      	bne.n	8000d60 <S_Wire_Func+0x104>
 8000d56:	2120      	movs	r1, #32
 8000d58:	4847      	ldr	r0, [pc, #284]	; (8000e78 <S_Wire_Func+0x21c>)
 8000d5a:	f001 f98e 	bl	800207a <HAL_GPIO_TogglePin>
 8000d5e:	e003      	b.n	8000d68 <S_Wire_Func+0x10c>
			else T_EN;
 8000d60:	2140      	movs	r1, #64	; 0x40
 8000d62:	4845      	ldr	r0, [pc, #276]	; (8000e78 <S_Wire_Func+0x21c>)
 8000d64:	f001 f989 	bl	800207a <HAL_GPIO_TogglePin>
		for(cnt=0; cnt < p1; cnt++) {
 8000d68:	69fb      	ldr	r3, [r7, #28]
 8000d6a:	3301      	adds	r3, #1
 8000d6c:	61fb      	str	r3, [r7, #28]
 8000d6e:	69fa      	ldr	r2, [r7, #28]
 8000d70:	697b      	ldr	r3, [r7, #20]
 8000d72:	429a      	cmp	r2, r3
 8000d74:	d3e7      	bcc.n	8000d46 <S_Wire_Func+0xea>
		}
		Delay_us(g_swire_store_time1);	// store time
 8000d76:	4b46      	ldr	r3, [pc, #280]	; (8000e90 <S_Wire_Func+0x234>)
 8000d78:	681b      	ldr	r3, [r3, #0]
 8000d7a:	4618      	mov	r0, r3
 8000d7c:	f7ff ff34 	bl	8000be8 <Delay_us>
	}

	if(g_swire_init_time2 > 0 && p2 > 0)
 8000d80:	4b44      	ldr	r3, [pc, #272]	; (8000e94 <S_Wire_Func+0x238>)
 8000d82:	681b      	ldr	r3, [r3, #0]
 8000d84:	2b00      	cmp	r3, #0
 8000d86:	d035      	beq.n	8000df4 <S_Wire_Func+0x198>
 8000d88:	693b      	ldr	r3, [r7, #16]
 8000d8a:	2b00      	cmp	r3, #0
 8000d8c:	d032      	beq.n	8000df4 <S_Wire_Func+0x198>
	{
		if(type == 0) S_CTRL(1);
 8000d8e:	687b      	ldr	r3, [r7, #4]
 8000d90:	2b00      	cmp	r3, #0
 8000d92:	d105      	bne.n	8000da0 <S_Wire_Func+0x144>
 8000d94:	2201      	movs	r2, #1
 8000d96:	2120      	movs	r1, #32
 8000d98:	4837      	ldr	r0, [pc, #220]	; (8000e78 <S_Wire_Func+0x21c>)
 8000d9a:	f001 f955 	bl	8002048 <HAL_GPIO_WritePin>
 8000d9e:	e004      	b.n	8000daa <S_Wire_Func+0x14e>
		else S_EN(1);
 8000da0:	2201      	movs	r2, #1
 8000da2:	2140      	movs	r1, #64	; 0x40
 8000da4:	4834      	ldr	r0, [pc, #208]	; (8000e78 <S_Wire_Func+0x21c>)
 8000da6:	f001 f94f 	bl	8002048 <HAL_GPIO_WritePin>
		Delay_us(g_swire_init_time2);	// store time
 8000daa:	4b3a      	ldr	r3, [pc, #232]	; (8000e94 <S_Wire_Func+0x238>)
 8000dac:	681b      	ldr	r3, [r3, #0]
 8000dae:	4618      	mov	r0, r3
 8000db0:	f7ff ff1a 	bl	8000be8 <Delay_us>

		for(cnt=0; cnt < p2; cnt++) {
 8000db4:	2300      	movs	r3, #0
 8000db6:	61fb      	str	r3, [r7, #28]
 8000db8:	e013      	b.n	8000de2 <S_Wire_Func+0x186>
			Delay_us(g_swire_pulse_time2);	// setup time
 8000dba:	4b37      	ldr	r3, [pc, #220]	; (8000e98 <S_Wire_Func+0x23c>)
 8000dbc:	681b      	ldr	r3, [r3, #0]
 8000dbe:	4618      	mov	r0, r3
 8000dc0:	f7ff ff12 	bl	8000be8 <Delay_us>
			if(type == 0) T_CTRL;
 8000dc4:	687b      	ldr	r3, [r7, #4]
 8000dc6:	2b00      	cmp	r3, #0
 8000dc8:	d104      	bne.n	8000dd4 <S_Wire_Func+0x178>
 8000dca:	2120      	movs	r1, #32
 8000dcc:	482a      	ldr	r0, [pc, #168]	; (8000e78 <S_Wire_Func+0x21c>)
 8000dce:	f001 f954 	bl	800207a <HAL_GPIO_TogglePin>
 8000dd2:	e003      	b.n	8000ddc <S_Wire_Func+0x180>
			else T_EN;
 8000dd4:	2140      	movs	r1, #64	; 0x40
 8000dd6:	4828      	ldr	r0, [pc, #160]	; (8000e78 <S_Wire_Func+0x21c>)
 8000dd8:	f001 f94f 	bl	800207a <HAL_GPIO_TogglePin>
		for(cnt=0; cnt < p2; cnt++) {
 8000ddc:	69fb      	ldr	r3, [r7, #28]
 8000dde:	3301      	adds	r3, #1
 8000de0:	61fb      	str	r3, [r7, #28]
 8000de2:	69fa      	ldr	r2, [r7, #28]
 8000de4:	693b      	ldr	r3, [r7, #16]
 8000de6:	429a      	cmp	r2, r3
 8000de8:	d3e7      	bcc.n	8000dba <S_Wire_Func+0x15e>
		}
		Delay_us(g_swire_store_time2);	// store time
 8000dea:	4b2c      	ldr	r3, [pc, #176]	; (8000e9c <S_Wire_Func+0x240>)
 8000dec:	681b      	ldr	r3, [r3, #0]
 8000dee:	4618      	mov	r0, r3
 8000df0:	f7ff fefa 	bl	8000be8 <Delay_us>
	}

	if(g_swire_init_time3 > 0 && p3 > 0)
 8000df4:	4b2a      	ldr	r3, [pc, #168]	; (8000ea0 <S_Wire_Func+0x244>)
 8000df6:	681b      	ldr	r3, [r3, #0]
 8000df8:	2b00      	cmp	r3, #0
 8000dfa:	d035      	beq.n	8000e68 <S_Wire_Func+0x20c>
 8000dfc:	68fb      	ldr	r3, [r7, #12]
 8000dfe:	2b00      	cmp	r3, #0
 8000e00:	d032      	beq.n	8000e68 <S_Wire_Func+0x20c>
	{
		if(type == 0) S_CTRL(1);
 8000e02:	687b      	ldr	r3, [r7, #4]
 8000e04:	2b00      	cmp	r3, #0
 8000e06:	d105      	bne.n	8000e14 <S_Wire_Func+0x1b8>
 8000e08:	2201      	movs	r2, #1
 8000e0a:	2120      	movs	r1, #32
 8000e0c:	481a      	ldr	r0, [pc, #104]	; (8000e78 <S_Wire_Func+0x21c>)
 8000e0e:	f001 f91b 	bl	8002048 <HAL_GPIO_WritePin>
 8000e12:	e004      	b.n	8000e1e <S_Wire_Func+0x1c2>
		else S_EN(1);
 8000e14:	2201      	movs	r2, #1
 8000e16:	2140      	movs	r1, #64	; 0x40
 8000e18:	4817      	ldr	r0, [pc, #92]	; (8000e78 <S_Wire_Func+0x21c>)
 8000e1a:	f001 f915 	bl	8002048 <HAL_GPIO_WritePin>
		Delay_us(g_swire_init_time3);	// store time
 8000e1e:	4b20      	ldr	r3, [pc, #128]	; (8000ea0 <S_Wire_Func+0x244>)
 8000e20:	681b      	ldr	r3, [r3, #0]
 8000e22:	4618      	mov	r0, r3
 8000e24:	f7ff fee0 	bl	8000be8 <Delay_us>

		for(cnt=0; cnt < p3; cnt++) {
 8000e28:	2300      	movs	r3, #0
 8000e2a:	61fb      	str	r3, [r7, #28]
 8000e2c:	e013      	b.n	8000e56 <S_Wire_Func+0x1fa>
			Delay_us(g_swire_pulse_time3);	// setup time
 8000e2e:	4b1d      	ldr	r3, [pc, #116]	; (8000ea4 <S_Wire_Func+0x248>)
 8000e30:	681b      	ldr	r3, [r3, #0]
 8000e32:	4618      	mov	r0, r3
 8000e34:	f7ff fed8 	bl	8000be8 <Delay_us>
			if(type == 0) T_CTRL;
 8000e38:	687b      	ldr	r3, [r7, #4]
 8000e3a:	2b00      	cmp	r3, #0
 8000e3c:	d104      	bne.n	8000e48 <S_Wire_Func+0x1ec>
 8000e3e:	2120      	movs	r1, #32
 8000e40:	480d      	ldr	r0, [pc, #52]	; (8000e78 <S_Wire_Func+0x21c>)
 8000e42:	f001 f91a 	bl	800207a <HAL_GPIO_TogglePin>
 8000e46:	e003      	b.n	8000e50 <S_Wire_Func+0x1f4>
			else T_EN;
 8000e48:	2140      	movs	r1, #64	; 0x40
 8000e4a:	480b      	ldr	r0, [pc, #44]	; (8000e78 <S_Wire_Func+0x21c>)
 8000e4c:	f001 f915 	bl	800207a <HAL_GPIO_TogglePin>
		for(cnt=0; cnt < p3; cnt++) {
 8000e50:	69fb      	ldr	r3, [r7, #28]
 8000e52:	3301      	adds	r3, #1
 8000e54:	61fb      	str	r3, [r7, #28]
 8000e56:	69fa      	ldr	r2, [r7, #28]
 8000e58:	68fb      	ldr	r3, [r7, #12]
 8000e5a:	429a      	cmp	r2, r3
 8000e5c:	d3e7      	bcc.n	8000e2e <S_Wire_Func+0x1d2>
		}
		Delay_us(g_swire_store_time3);	// store time
 8000e5e:	4b12      	ldr	r3, [pc, #72]	; (8000ea8 <S_Wire_Func+0x24c>)
 8000e60:	681b      	ldr	r3, [r3, #0]
 8000e62:	4618      	mov	r0, r3
 8000e64:	f7ff fec0 	bl	8000be8 <Delay_us>
	}
	return 0;
 8000e68:	2300      	movs	r3, #0
}
 8000e6a:	4618      	mov	r0, r3
 8000e6c:	3720      	adds	r7, #32
 8000e6e:	46bd      	mov	sp, r7
 8000e70:	bd80      	pop	{r7, pc}
 8000e72:	bf00      	nop
 8000e74:	2000007c 	.word	0x2000007c
 8000e78:	40020800 	.word	0x40020800
 8000e7c:	20000078 	.word	0x20000078
 8000e80:	2000006c 	.word	0x2000006c
 8000e84:	200004e0 	.word	0x200004e0
 8000e88:	20000064 	.word	0x20000064
 8000e8c:	20000044 	.word	0x20000044
 8000e90:	20000074 	.word	0x20000074
 8000e94:	2000004c 	.word	0x2000004c
 8000e98:	20000060 	.word	0x20000060
 8000e9c:	20000054 	.word	0x20000054
 8000ea0:	200004dc 	.word	0x200004dc
 8000ea4:	20000488 	.word	0x20000488
 8000ea8:	20000050 	.word	0x20000050

08000eac <Boot_Message>:
Function	: Boot Message Function
Date		: 2021.07.13 JKS
Version		: 1.0
***************************************************************************/
void Boot_Message(void)
{
 8000eac:	b580      	push	{r7, lr}
 8000eae:	af00      	add	r7, sp, #0
	g_update = 0x0729;
 8000eb0:	4b23      	ldr	r3, [pc, #140]	; (8000f40 <Boot_Message+0x94>)
 8000eb2:	f240 7229 	movw	r2, #1833	; 0x729
 8000eb6:	801a      	strh	r2, [r3, #0]
	g_firmver = 0x0005;
 8000eb8:	4b22      	ldr	r3, [pc, #136]	; (8000f44 <Boot_Message+0x98>)
 8000eba:	2205      	movs	r2, #5
 8000ebc:	801a      	strh	r2, [r3, #0]
	g_hardver = 0x8786;
 8000ebe:	4b22      	ldr	r3, [pc, #136]	; (8000f48 <Boot_Message+0x9c>)
 8000ec0:	f248 7286 	movw	r2, #34694	; 0x8786
 8000ec4:	801a      	strh	r2, [r3, #0]
	g_swire_pulse_time = 10;
 8000ec6:	4b21      	ldr	r3, [pc, #132]	; (8000f4c <Boot_Message+0xa0>)
 8000ec8:	220a      	movs	r2, #10
 8000eca:	601a      	str	r2, [r3, #0]
	g_swire_init_time = 1000;
 8000ecc:	4b20      	ldr	r3, [pc, #128]	; (8000f50 <Boot_Message+0xa4>)
 8000ece:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8000ed2:	601a      	str	r2, [r3, #0]
	g_swire_store_time = 80;
 8000ed4:	4b1f      	ldr	r3, [pc, #124]	; (8000f54 <Boot_Message+0xa8>)
 8000ed6:	2250      	movs	r2, #80	; 0x50
 8000ed8:	601a      	str	r2, [r3, #0]

	USBpk.Buf[5] = 0;
 8000eda:	4b1f      	ldr	r3, [pc, #124]	; (8000f58 <Boot_Message+0xac>)
 8000edc:	2200      	movs	r2, #0
 8000ede:	715a      	strb	r2, [r3, #5]
	USBpk.Buf[6] = 0;
 8000ee0:	4b1d      	ldr	r3, [pc, #116]	; (8000f58 <Boot_Message+0xac>)
 8000ee2:	2200      	movs	r2, #0
 8000ee4:	719a      	strb	r2, [r3, #6]
	USBpk.Buf[7] = 1;
 8000ee6:	4b1c      	ldr	r3, [pc, #112]	; (8000f58 <Boot_Message+0xac>)
 8000ee8:	2201      	movs	r2, #1
 8000eea:	71da      	strb	r2, [r3, #7]
	USBpk.Buf[8] = g_hardver >> 8;
 8000eec:	4b16      	ldr	r3, [pc, #88]	; (8000f48 <Boot_Message+0x9c>)
 8000eee:	881b      	ldrh	r3, [r3, #0]
 8000ef0:	0a1b      	lsrs	r3, r3, #8
 8000ef2:	b29b      	uxth	r3, r3
 8000ef4:	b2da      	uxtb	r2, r3
 8000ef6:	4b18      	ldr	r3, [pc, #96]	; (8000f58 <Boot_Message+0xac>)
 8000ef8:	721a      	strb	r2, [r3, #8]
	USBpk.Buf[9] = (uint8_t)g_hardver;
 8000efa:	4b13      	ldr	r3, [pc, #76]	; (8000f48 <Boot_Message+0x9c>)
 8000efc:	881b      	ldrh	r3, [r3, #0]
 8000efe:	b2da      	uxtb	r2, r3
 8000f00:	4b15      	ldr	r3, [pc, #84]	; (8000f58 <Boot_Message+0xac>)
 8000f02:	725a      	strb	r2, [r3, #9]
	USBpk.Buf[10] = g_firmver >> 8;
 8000f04:	4b0f      	ldr	r3, [pc, #60]	; (8000f44 <Boot_Message+0x98>)
 8000f06:	881b      	ldrh	r3, [r3, #0]
 8000f08:	0a1b      	lsrs	r3, r3, #8
 8000f0a:	b29b      	uxth	r3, r3
 8000f0c:	b2da      	uxtb	r2, r3
 8000f0e:	4b12      	ldr	r3, [pc, #72]	; (8000f58 <Boot_Message+0xac>)
 8000f10:	729a      	strb	r2, [r3, #10]
	USBpk.Buf[11] = (uint8_t)g_firmver;
 8000f12:	4b0c      	ldr	r3, [pc, #48]	; (8000f44 <Boot_Message+0x98>)
 8000f14:	881b      	ldrh	r3, [r3, #0]
 8000f16:	b2da      	uxtb	r2, r3
 8000f18:	4b0f      	ldr	r3, [pc, #60]	; (8000f58 <Boot_Message+0xac>)
 8000f1a:	72da      	strb	r2, [r3, #11]
	USBpk.Buf[12] = g_update >> 8;
 8000f1c:	4b08      	ldr	r3, [pc, #32]	; (8000f40 <Boot_Message+0x94>)
 8000f1e:	881b      	ldrh	r3, [r3, #0]
 8000f20:	0a1b      	lsrs	r3, r3, #8
 8000f22:	b29b      	uxth	r3, r3
 8000f24:	b2da      	uxtb	r2, r3
 8000f26:	4b0c      	ldr	r3, [pc, #48]	; (8000f58 <Boot_Message+0xac>)
 8000f28:	731a      	strb	r2, [r3, #12]
	USBpk.Buf[13] = (uint8_t)g_update;
 8000f2a:	4b05      	ldr	r3, [pc, #20]	; (8000f40 <Boot_Message+0x94>)
 8000f2c:	881b      	ldrh	r3, [r3, #0]
 8000f2e:	b2da      	uxtb	r2, r3
 8000f30:	4b09      	ldr	r3, [pc, #36]	; (8000f58 <Boot_Message+0xac>)
 8000f32:	735a      	strb	r2, [r3, #13]
	VCP_Transmit_Packet(10);
 8000f34:	200a      	movs	r0, #10
 8000f36:	f000 f893 	bl	8001060 <VCP_Transmit_Packet>
}
 8000f3a:	bf00      	nop
 8000f3c:	bd80      	pop	{r7, pc}
 8000f3e:	bf00      	nop
 8000f40:	200004d4 	.word	0x200004d4
 8000f44:	20000070 	.word	0x20000070
 8000f48:	20000068 	.word	0x20000068
 8000f4c:	2000006c 	.word	0x2000006c
 8000f50:	20000078 	.word	0x20000078
 8000f54:	200004e0 	.word	0x200004e0
 8000f58:	2000007c 	.word	0x2000007c

08000f5c <DeviceSet>:
Function	: Device Set Call Function
Date			: 2017.02.22
Version	: 1.0
***************************************************************************/
void DeviceSet(void)
{
 8000f5c:	b580      	push	{r7, lr}
 8000f5e:	af00      	add	r7, sp, #0
	switch(USBpk.Buf[6]) {
 8000f60:	4b3a      	ldr	r3, [pc, #232]	; (800104c <DeviceSet+0xf0>)
 8000f62:	799b      	ldrb	r3, [r3, #6]
 8000f64:	3b01      	subs	r3, #1
 8000f66:	2b19      	cmp	r3, #25
 8000f68:	d86e      	bhi.n	8001048 <DeviceSet+0xec>
 8000f6a:	a201      	add	r2, pc, #4	; (adr r2, 8000f70 <DeviceSet+0x14>)
 8000f6c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000f70:	08000fd9 	.word	0x08000fd9
 8000f74:	08000fe7 	.word	0x08000fe7
 8000f78:	08001049 	.word	0x08001049
 8000f7c:	08001049 	.word	0x08001049
 8000f80:	08001049 	.word	0x08001049
 8000f84:	08001049 	.word	0x08001049
 8000f88:	08001049 	.word	0x08001049
 8000f8c:	08001049 	.word	0x08001049
 8000f90:	08001049 	.word	0x08001049
 8000f94:	08001049 	.word	0x08001049
 8000f98:	08001049 	.word	0x08001049
 8000f9c:	08001049 	.word	0x08001049
 8000fa0:	08001049 	.word	0x08001049
 8000fa4:	08001049 	.word	0x08001049
 8000fa8:	08001049 	.word	0x08001049
 8000fac:	08001049 	.word	0x08001049
 8000fb0:	08001049 	.word	0x08001049
 8000fb4:	08001049 	.word	0x08001049
 8000fb8:	08001049 	.word	0x08001049
 8000fbc:	08000fef 	.word	0x08000fef
 8000fc0:	08000fff 	.word	0x08000fff
 8000fc4:	0800100f 	.word	0x0800100f
 8000fc8:	0800101f 	.word	0x0800101f
 8000fcc:	08001049 	.word	0x08001049
 8000fd0:	08001049 	.word	0x08001049
 8000fd4:	0800102f 	.word	0x0800102f

	case 1:     // who are you
		if(USBpk.Buf[7] == 1) Boot_Message();
 8000fd8:	4b1c      	ldr	r3, [pc, #112]	; (800104c <DeviceSet+0xf0>)
 8000fda:	79db      	ldrb	r3, [r3, #7]
 8000fdc:	2b01      	cmp	r3, #1
 8000fde:	d132      	bne.n	8001046 <DeviceSet+0xea>
 8000fe0:	f7ff ff64 	bl	8000eac <Boot_Message>
		break;
 8000fe4:	e02f      	b.n	8001046 <DeviceSet+0xea>
	case 2: // Reset
		SCB->AIRCR = 0x05FA0000 | 0x04;
 8000fe6:	4b1a      	ldr	r3, [pc, #104]	; (8001050 <DeviceSet+0xf4>)
 8000fe8:	4a1a      	ldr	r2, [pc, #104]	; (8001054 <DeviceSet+0xf8>)
 8000fea:	60da      	str	r2, [r3, #12]
		break;
 8000fec:	e02c      	b.n	8001048 <DeviceSet+0xec>
	case 20:
		ENP(USBpk.Buf[7]);
 8000fee:	4b17      	ldr	r3, [pc, #92]	; (800104c <DeviceSet+0xf0>)
 8000ff0:	79db      	ldrb	r3, [r3, #7]
 8000ff2:	461a      	mov	r2, r3
 8000ff4:	2120      	movs	r1, #32
 8000ff6:	4818      	ldr	r0, [pc, #96]	; (8001058 <DeviceSet+0xfc>)
 8000ff8:	f001 f826 	bl	8002048 <HAL_GPIO_WritePin>
		break;
 8000ffc:	e024      	b.n	8001048 <DeviceSet+0xec>
	case 21:
		ENN(USBpk.Buf[7]);
 8000ffe:	4b13      	ldr	r3, [pc, #76]	; (800104c <DeviceSet+0xf0>)
 8001000:	79db      	ldrb	r3, [r3, #7]
 8001002:	461a      	mov	r2, r3
 8001004:	2140      	movs	r1, #64	; 0x40
 8001006:	4814      	ldr	r0, [pc, #80]	; (8001058 <DeviceSet+0xfc>)
 8001008:	f001 f81e 	bl	8002048 <HAL_GPIO_WritePin>
		break;
 800100c:	e01c      	b.n	8001048 <DeviceSet+0xec>
	case 22:
		S_EN(USBpk.Buf[7]);
 800100e:	4b0f      	ldr	r3, [pc, #60]	; (800104c <DeviceSet+0xf0>)
 8001010:	79db      	ldrb	r3, [r3, #7]
 8001012:	461a      	mov	r2, r3
 8001014:	2140      	movs	r1, #64	; 0x40
 8001016:	4810      	ldr	r0, [pc, #64]	; (8001058 <DeviceSet+0xfc>)
 8001018:	f001 f816 	bl	8002048 <HAL_GPIO_WritePin>
		break;
 800101c:	e014      	b.n	8001048 <DeviceSet+0xec>
	case 23:
		S_CTRL(USBpk.Buf[7]);
 800101e:	4b0b      	ldr	r3, [pc, #44]	; (800104c <DeviceSet+0xf0>)
 8001020:	79db      	ldrb	r3, [r3, #7]
 8001022:	461a      	mov	r2, r3
 8001024:	2120      	movs	r1, #32
 8001026:	480c      	ldr	r0, [pc, #48]	; (8001058 <DeviceSet+0xfc>)
 8001028:	f001 f80e 	bl	8002048 <HAL_GPIO_WritePin>
		break;
 800102c:	e00c      	b.n	8001048 <DeviceSet+0xec>
	case 26:	// ctrl + en pin idle state set
		if(USBpk.Buf[7] == 1) g_dw8786_pin_idle = 1;
 800102e:	4b07      	ldr	r3, [pc, #28]	; (800104c <DeviceSet+0xf0>)
 8001030:	79db      	ldrb	r3, [r3, #7]
 8001032:	2b01      	cmp	r3, #1
 8001034:	d103      	bne.n	800103e <DeviceSet+0xe2>
 8001036:	4b09      	ldr	r3, [pc, #36]	; (800105c <DeviceSet+0x100>)
 8001038:	2201      	movs	r2, #1
 800103a:	601a      	str	r2, [r3, #0]
		else g_dw8786_pin_idle = 0;
		break;
 800103c:	e004      	b.n	8001048 <DeviceSet+0xec>
		else g_dw8786_pin_idle = 0;
 800103e:	4b07      	ldr	r3, [pc, #28]	; (800105c <DeviceSet+0x100>)
 8001040:	2200      	movs	r2, #0
 8001042:	601a      	str	r2, [r3, #0]
		break;
 8001044:	e000      	b.n	8001048 <DeviceSet+0xec>
		break;
 8001046:	bf00      	nop
	}
}
 8001048:	bf00      	nop
 800104a:	bd80      	pop	{r7, pc}
 800104c:	2000007c 	.word	0x2000007c
 8001050:	e000ed00 	.word	0xe000ed00
 8001054:	05fa0004 	.word	0x05fa0004
 8001058:	40020800 	.word	0x40020800
 800105c:	2000005c 	.word	0x2000005c

08001060 <VCP_Transmit_Packet>:
Date		: 2021.7.13 JKS
Version		: 1.0
Descript 	: size is Actual data size without header(5)
***************************************************************************/
void VCP_Transmit_Packet(int plus)
{
 8001060:	b580      	push	{r7, lr}
 8001062:	b082      	sub	sp, #8
 8001064:	af00      	add	r7, sp, #0
 8001066:	6078      	str	r0, [r7, #4]
	USBpk.TxSize = plus;
 8001068:	687b      	ldr	r3, [r7, #4]
 800106a:	4a1a      	ldr	r2, [pc, #104]	; (80010d4 <VCP_Transmit_Packet+0x74>)
 800106c:	f8c2 3408 	str.w	r3, [r2, #1032]	; 0x408
	USBpk.Buf[0] = 0x28;
 8001070:	4b18      	ldr	r3, [pc, #96]	; (80010d4 <VCP_Transmit_Packet+0x74>)
 8001072:	2228      	movs	r2, #40	; 0x28
 8001074:	701a      	strb	r2, [r3, #0]
	USBpk.Buf[1] = 0xAE;
 8001076:	4b17      	ldr	r3, [pc, #92]	; (80010d4 <VCP_Transmit_Packet+0x74>)
 8001078:	22ae      	movs	r2, #174	; 0xae
 800107a:	705a      	strb	r2, [r3, #1]
	USBpk.Buf[2] = USBpk.TxSize >> 8;
 800107c:	4b15      	ldr	r3, [pc, #84]	; (80010d4 <VCP_Transmit_Packet+0x74>)
 800107e:	f8d3 3408 	ldr.w	r3, [r3, #1032]	; 0x408
 8001082:	0a1b      	lsrs	r3, r3, #8
 8001084:	b2da      	uxtb	r2, r3
 8001086:	4b13      	ldr	r3, [pc, #76]	; (80010d4 <VCP_Transmit_Packet+0x74>)
 8001088:	709a      	strb	r2, [r3, #2]
	USBpk.Buf[3] = USBpk.TxSize;
 800108a:	4b12      	ldr	r3, [pc, #72]	; (80010d4 <VCP_Transmit_Packet+0x74>)
 800108c:	f8d3 3408 	ldr.w	r3, [r3, #1032]	; 0x408
 8001090:	b2da      	uxtb	r2, r3
 8001092:	4b10      	ldr	r3, [pc, #64]	; (80010d4 <VCP_Transmit_Packet+0x74>)
 8001094:	70da      	strb	r2, [r3, #3]
	USBpk.Buf[4] = USBpk.Buf[0] + USBpk.Buf[1] + USBpk.Buf[2] + USBpk.Buf[3];
 8001096:	4b0f      	ldr	r3, [pc, #60]	; (80010d4 <VCP_Transmit_Packet+0x74>)
 8001098:	781a      	ldrb	r2, [r3, #0]
 800109a:	4b0e      	ldr	r3, [pc, #56]	; (80010d4 <VCP_Transmit_Packet+0x74>)
 800109c:	785b      	ldrb	r3, [r3, #1]
 800109e:	4413      	add	r3, r2
 80010a0:	b2da      	uxtb	r2, r3
 80010a2:	4b0c      	ldr	r3, [pc, #48]	; (80010d4 <VCP_Transmit_Packet+0x74>)
 80010a4:	789b      	ldrb	r3, [r3, #2]
 80010a6:	4413      	add	r3, r2
 80010a8:	b2da      	uxtb	r2, r3
 80010aa:	4b0a      	ldr	r3, [pc, #40]	; (80010d4 <VCP_Transmit_Packet+0x74>)
 80010ac:	78db      	ldrb	r3, [r3, #3]
 80010ae:	4413      	add	r3, r2
 80010b0:	b2da      	uxtb	r2, r3
 80010b2:	4b08      	ldr	r3, [pc, #32]	; (80010d4 <VCP_Transmit_Packet+0x74>)
 80010b4:	711a      	strb	r2, [r3, #4]
	HAL_UART_Transmit_IT(&huart2,(uint8_t*)USBpk.Buf, USBpk.TxSize + BBB_HD_SIZE);
 80010b6:	4b07      	ldr	r3, [pc, #28]	; (80010d4 <VCP_Transmit_Packet+0x74>)
 80010b8:	f8d3 3408 	ldr.w	r3, [r3, #1032]	; 0x408
 80010bc:	b29b      	uxth	r3, r3
 80010be:	3305      	adds	r3, #5
 80010c0:	b29b      	uxth	r3, r3
 80010c2:	461a      	mov	r2, r3
 80010c4:	4903      	ldr	r1, [pc, #12]	; (80010d4 <VCP_Transmit_Packet+0x74>)
 80010c6:	4804      	ldr	r0, [pc, #16]	; (80010d8 <VCP_Transmit_Packet+0x78>)
 80010c8:	f001 fccb 	bl	8002a62 <HAL_UART_Transmit_IT>

	/*Wait for the transfer to complete.*/
	//while(USBsr.Tx_Done == 0);
	//USBsr.Tx_Done = 0;
}
 80010cc:	bf00      	nop
 80010ce:	3708      	adds	r7, #8
 80010d0:	46bd      	mov	sp, r7
 80010d2:	bd80      	pop	{r7, pc}
 80010d4:	2000007c 	.word	0x2000007c
 80010d8:	20000490 	.word	0x20000490

080010dc <i2c_task>:



void i2c_task(void)
{
 80010dc:	b580      	push	{r7, lr}
 80010de:	b084      	sub	sp, #16
 80010e0:	af02      	add	r7, sp, #8
	int ret;

	u16 size;

	size = _8u16(USBpk.Buf[7], USBpk.Buf[8]);
 80010e2:	4b29      	ldr	r3, [pc, #164]	; (8001188 <i2c_task+0xac>)
 80010e4:	79db      	ldrb	r3, [r3, #7]
 80010e6:	4a28      	ldr	r2, [pc, #160]	; (8001188 <i2c_task+0xac>)
 80010e8:	7a12      	ldrb	r2, [r2, #8]
 80010ea:	4611      	mov	r1, r2
 80010ec:	4618      	mov	r0, r3
 80010ee:	f7ff fd49 	bl	8000b84 <_8u16>
 80010f2:	4603      	mov	r3, r0
 80010f4:	807b      	strh	r3, [r7, #2]

	if(USBpk.Buf[6] == 4) { //multi read
 80010f6:	4b24      	ldr	r3, [pc, #144]	; (8001188 <i2c_task+0xac>)
 80010f8:	799b      	ldrb	r3, [r3, #6]
 80010fa:	2b04      	cmp	r3, #4
 80010fc:	d113      	bne.n	8001126 <i2c_task+0x4a>
		ret = i2c_read_task(USBpk.Buf[9], USBpk.Buf[10], 1, USBpk.Buf+12, size, 10);
 80010fe:	4b22      	ldr	r3, [pc, #136]	; (8001188 <i2c_task+0xac>)
 8001100:	7a58      	ldrb	r0, [r3, #9]
 8001102:	4b21      	ldr	r3, [pc, #132]	; (8001188 <i2c_task+0xac>)
 8001104:	7a9b      	ldrb	r3, [r3, #10]
 8001106:	b299      	uxth	r1, r3
 8001108:	4a20      	ldr	r2, [pc, #128]	; (800118c <i2c_task+0xb0>)
 800110a:	230a      	movs	r3, #10
 800110c:	9301      	str	r3, [sp, #4]
 800110e:	887b      	ldrh	r3, [r7, #2]
 8001110:	9300      	str	r3, [sp, #0]
 8001112:	4613      	mov	r3, r2
 8001114:	2201      	movs	r2, #1
 8001116:	f7ff fc1b 	bl	8000950 <i2c_read_task>
 800111a:	4603      	mov	r3, r0
 800111c:	607b      	str	r3, [r7, #4]
		size = 7 + size;
 800111e:	887b      	ldrh	r3, [r7, #2]
 8001120:	3307      	adds	r3, #7
 8001122:	807b      	strh	r3, [r7, #2]
 8001124:	e019      	b.n	800115a <i2c_task+0x7e>
	}

	else if(USBpk.Buf[6] == 5) { //multi write
 8001126:	4b18      	ldr	r3, [pc, #96]	; (8001188 <i2c_task+0xac>)
 8001128:	799b      	ldrb	r3, [r3, #6]
 800112a:	2b05      	cmp	r3, #5
 800112c:	d115      	bne.n	800115a <i2c_task+0x7e>
		ret = i2c_write_task(USBpk.Buf[9], USBpk.Buf[10], 1, USBpk.Buf+11, size, 10);
 800112e:	4b16      	ldr	r3, [pc, #88]	; (8001188 <i2c_task+0xac>)
 8001130:	7a58      	ldrb	r0, [r3, #9]
 8001132:	4b15      	ldr	r3, [pc, #84]	; (8001188 <i2c_task+0xac>)
 8001134:	7a9b      	ldrb	r3, [r3, #10]
 8001136:	b299      	uxth	r1, r3
 8001138:	4a15      	ldr	r2, [pc, #84]	; (8001190 <i2c_task+0xb4>)
 800113a:	230a      	movs	r3, #10
 800113c:	9301      	str	r3, [sp, #4]
 800113e:	887b      	ldrh	r3, [r7, #2]
 8001140:	9300      	str	r3, [sp, #0]
 8001142:	4613      	mov	r3, r2
 8001144:	2201      	movs	r2, #1
 8001146:	f7ff fa15 	bl	8000574 <i2c_write_task>
 800114a:	4603      	mov	r3, r0
 800114c:	607b      	str	r3, [r7, #4]
		size = 7;
 800114e:	2307      	movs	r3, #7
 8001150:	807b      	strh	r3, [r7, #2]
		VCP_Transmit_Packet(size);
 8001152:	887b      	ldrh	r3, [r7, #2]
 8001154:	4618      	mov	r0, r3
 8001156:	f7ff ff83 	bl	8001060 <VCP_Transmit_Packet>
	}

	if(ret == 1) { // noack
 800115a:	687b      	ldr	r3, [r7, #4]
 800115c:	2b01      	cmp	r3, #1
 800115e:	d10e      	bne.n	800117e <i2c_task+0xa2>
		size = 3;
 8001160:	2303      	movs	r3, #3
 8001162:	807b      	strh	r3, [r7, #2]
		USBpk.Buf[5] = 0;
 8001164:	4b08      	ldr	r3, [pc, #32]	; (8001188 <i2c_task+0xac>)
 8001166:	2200      	movs	r2, #0
 8001168:	715a      	strb	r2, [r3, #5]
		USBpk.Buf[6] = 1;
 800116a:	4b07      	ldr	r3, [pc, #28]	; (8001188 <i2c_task+0xac>)
 800116c:	2201      	movs	r2, #1
 800116e:	719a      	strb	r2, [r3, #6]
		USBpk.Buf[7] = 1;
 8001170:	4b05      	ldr	r3, [pc, #20]	; (8001188 <i2c_task+0xac>)
 8001172:	2201      	movs	r2, #1
 8001174:	71da      	strb	r2, [r3, #7]
		VCP_Transmit_Packet(size);
 8001176:	887b      	ldrh	r3, [r7, #2]
 8001178:	4618      	mov	r0, r3
 800117a:	f7ff ff71 	bl	8001060 <VCP_Transmit_Packet>
	}


}
 800117e:	bf00      	nop
 8001180:	3708      	adds	r7, #8
 8001182:	46bd      	mov	sp, r7
 8001184:	bd80      	pop	{r7, pc}
 8001186:	bf00      	nop
 8001188:	2000007c 	.word	0x2000007c
 800118c:	20000088 	.word	0x20000088
 8001190:	20000087 	.word	0x20000087

08001194 <VCP_Receive_Packet>:
Function	: VCP Receive Packet (Maximum Receive size 4Kbyte)
Date		: 2021.07.13 JKS
Version		: 1.0
***************************************************************************/
void VCP_Receive_Packet(void)
{
 8001194:	b580      	push	{r7, lr}
 8001196:	af00      	add	r7, sp, #0
	switch(USBpk.Buf[5]) {
 8001198:	4b4c      	ldr	r3, [pc, #304]	; (80012cc <VCP_Receive_Packet+0x138>)
 800119a:	795b      	ldrb	r3, [r3, #5]
 800119c:	2b07      	cmp	r3, #7
 800119e:	f200 808e 	bhi.w	80012be <VCP_Receive_Packet+0x12a>
 80011a2:	a201      	add	r2, pc, #4	; (adr r2, 80011a8 <VCP_Receive_Packet+0x14>)
 80011a4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80011a8:	080011c9 	.word	0x080011c9
 80011ac:	080011cf 	.word	0x080011cf
 80011b0:	080012bf 	.word	0x080012bf
 80011b4:	080012bf 	.word	0x080012bf
 80011b8:	080012bf 	.word	0x080012bf
 80011bc:	080011d5 	.word	0x080011d5
 80011c0:	0800129d 	.word	0x0800129d
 80011c4:	080012b3 	.word	0x080012b3
	case 0:
		DeviceSet();
 80011c8:	f7ff fec8 	bl	8000f5c <DeviceSet>
		break;
 80011cc:	e077      	b.n	80012be <VCP_Receive_Packet+0x12a>

	case 1: // I2C Command
		i2c_task();
 80011ce:	f7ff ff85 	bl	80010dc <i2c_task>
		break;
 80011d2:	e074      	b.n	80012be <VCP_Receive_Packet+0x12a>

	case 5: //	s-wire set
		g_swire_init_time = (uint32_t)USBpk.Buf[6]<<8 | USBpk.Buf[7];
 80011d4:	4b3d      	ldr	r3, [pc, #244]	; (80012cc <VCP_Receive_Packet+0x138>)
 80011d6:	799b      	ldrb	r3, [r3, #6]
 80011d8:	021b      	lsls	r3, r3, #8
 80011da:	4a3c      	ldr	r2, [pc, #240]	; (80012cc <VCP_Receive_Packet+0x138>)
 80011dc:	79d2      	ldrb	r2, [r2, #7]
 80011de:	4313      	orrs	r3, r2
 80011e0:	4a3b      	ldr	r2, [pc, #236]	; (80012d0 <VCP_Receive_Packet+0x13c>)
 80011e2:	6013      	str	r3, [r2, #0]
		g_swire_pulse_time = (uint32_t)USBpk.Buf[8]<<8 | USBpk.Buf[9];
 80011e4:	4b39      	ldr	r3, [pc, #228]	; (80012cc <VCP_Receive_Packet+0x138>)
 80011e6:	7a1b      	ldrb	r3, [r3, #8]
 80011e8:	021b      	lsls	r3, r3, #8
 80011ea:	4a38      	ldr	r2, [pc, #224]	; (80012cc <VCP_Receive_Packet+0x138>)
 80011ec:	7a52      	ldrb	r2, [r2, #9]
 80011ee:	4313      	orrs	r3, r2
 80011f0:	4a38      	ldr	r2, [pc, #224]	; (80012d4 <VCP_Receive_Packet+0x140>)
 80011f2:	6013      	str	r3, [r2, #0]
		g_swire_store_time = (uint32_t)USBpk.Buf[10]<<8 | USBpk.Buf[11];
 80011f4:	4b35      	ldr	r3, [pc, #212]	; (80012cc <VCP_Receive_Packet+0x138>)
 80011f6:	7a9b      	ldrb	r3, [r3, #10]
 80011f8:	021b      	lsls	r3, r3, #8
 80011fa:	4a34      	ldr	r2, [pc, #208]	; (80012cc <VCP_Receive_Packet+0x138>)
 80011fc:	7ad2      	ldrb	r2, [r2, #11]
 80011fe:	4313      	orrs	r3, r2
 8001200:	4a35      	ldr	r2, [pc, #212]	; (80012d8 <VCP_Receive_Packet+0x144>)
 8001202:	6013      	str	r3, [r2, #0]
		g_swire_init_time1 = (uint32_t)USBpk.Buf[12]<<8 | USBpk.Buf[13];
 8001204:	4b31      	ldr	r3, [pc, #196]	; (80012cc <VCP_Receive_Packet+0x138>)
 8001206:	7b1b      	ldrb	r3, [r3, #12]
 8001208:	021b      	lsls	r3, r3, #8
 800120a:	4a30      	ldr	r2, [pc, #192]	; (80012cc <VCP_Receive_Packet+0x138>)
 800120c:	7b52      	ldrb	r2, [r2, #13]
 800120e:	4313      	orrs	r3, r2
 8001210:	4a32      	ldr	r2, [pc, #200]	; (80012dc <VCP_Receive_Packet+0x148>)
 8001212:	6013      	str	r3, [r2, #0]
		g_swire_pulse_time1 = (uint32_t)USBpk.Buf[14]<<8 | USBpk.Buf[15];
 8001214:	4b2d      	ldr	r3, [pc, #180]	; (80012cc <VCP_Receive_Packet+0x138>)
 8001216:	7b9b      	ldrb	r3, [r3, #14]
 8001218:	021b      	lsls	r3, r3, #8
 800121a:	4a2c      	ldr	r2, [pc, #176]	; (80012cc <VCP_Receive_Packet+0x138>)
 800121c:	7bd2      	ldrb	r2, [r2, #15]
 800121e:	4313      	orrs	r3, r2
 8001220:	4a2f      	ldr	r2, [pc, #188]	; (80012e0 <VCP_Receive_Packet+0x14c>)
 8001222:	6013      	str	r3, [r2, #0]
		g_swire_store_time1 = (uint32_t)USBpk.Buf[16]<<8 | USBpk.Buf[17];
 8001224:	4b29      	ldr	r3, [pc, #164]	; (80012cc <VCP_Receive_Packet+0x138>)
 8001226:	7c1b      	ldrb	r3, [r3, #16]
 8001228:	021b      	lsls	r3, r3, #8
 800122a:	4a28      	ldr	r2, [pc, #160]	; (80012cc <VCP_Receive_Packet+0x138>)
 800122c:	7c52      	ldrb	r2, [r2, #17]
 800122e:	4313      	orrs	r3, r2
 8001230:	4a2c      	ldr	r2, [pc, #176]	; (80012e4 <VCP_Receive_Packet+0x150>)
 8001232:	6013      	str	r3, [r2, #0]
		g_swire_init_time2 = (uint32_t)USBpk.Buf[18]<<8 | USBpk.Buf[19];
 8001234:	4b25      	ldr	r3, [pc, #148]	; (80012cc <VCP_Receive_Packet+0x138>)
 8001236:	7c9b      	ldrb	r3, [r3, #18]
 8001238:	021b      	lsls	r3, r3, #8
 800123a:	4a24      	ldr	r2, [pc, #144]	; (80012cc <VCP_Receive_Packet+0x138>)
 800123c:	7cd2      	ldrb	r2, [r2, #19]
 800123e:	4313      	orrs	r3, r2
 8001240:	4a29      	ldr	r2, [pc, #164]	; (80012e8 <VCP_Receive_Packet+0x154>)
 8001242:	6013      	str	r3, [r2, #0]
		g_swire_pulse_time2 = (uint32_t)USBpk.Buf[20]<<8 | USBpk.Buf[21];
 8001244:	4b21      	ldr	r3, [pc, #132]	; (80012cc <VCP_Receive_Packet+0x138>)
 8001246:	7d1b      	ldrb	r3, [r3, #20]
 8001248:	021b      	lsls	r3, r3, #8
 800124a:	4a20      	ldr	r2, [pc, #128]	; (80012cc <VCP_Receive_Packet+0x138>)
 800124c:	7d52      	ldrb	r2, [r2, #21]
 800124e:	4313      	orrs	r3, r2
 8001250:	4a26      	ldr	r2, [pc, #152]	; (80012ec <VCP_Receive_Packet+0x158>)
 8001252:	6013      	str	r3, [r2, #0]
		g_swire_store_time2 = (uint32_t)USBpk.Buf[22]<<8 | USBpk.Buf[23];
 8001254:	4b1d      	ldr	r3, [pc, #116]	; (80012cc <VCP_Receive_Packet+0x138>)
 8001256:	7d9b      	ldrb	r3, [r3, #22]
 8001258:	021b      	lsls	r3, r3, #8
 800125a:	4a1c      	ldr	r2, [pc, #112]	; (80012cc <VCP_Receive_Packet+0x138>)
 800125c:	7dd2      	ldrb	r2, [r2, #23]
 800125e:	4313      	orrs	r3, r2
 8001260:	4a23      	ldr	r2, [pc, #140]	; (80012f0 <VCP_Receive_Packet+0x15c>)
 8001262:	6013      	str	r3, [r2, #0]
		g_swire_init_time3 = (uint32_t)USBpk.Buf[24]<<8 | USBpk.Buf[25];
 8001264:	4b19      	ldr	r3, [pc, #100]	; (80012cc <VCP_Receive_Packet+0x138>)
 8001266:	7e1b      	ldrb	r3, [r3, #24]
 8001268:	021b      	lsls	r3, r3, #8
 800126a:	4a18      	ldr	r2, [pc, #96]	; (80012cc <VCP_Receive_Packet+0x138>)
 800126c:	7e52      	ldrb	r2, [r2, #25]
 800126e:	4313      	orrs	r3, r2
 8001270:	4a20      	ldr	r2, [pc, #128]	; (80012f4 <VCP_Receive_Packet+0x160>)
 8001272:	6013      	str	r3, [r2, #0]
		g_swire_pulse_time3 = (uint32_t)USBpk.Buf[26]<<8 | USBpk.Buf[27];
 8001274:	4b15      	ldr	r3, [pc, #84]	; (80012cc <VCP_Receive_Packet+0x138>)
 8001276:	7e9b      	ldrb	r3, [r3, #26]
 8001278:	021b      	lsls	r3, r3, #8
 800127a:	4a14      	ldr	r2, [pc, #80]	; (80012cc <VCP_Receive_Packet+0x138>)
 800127c:	7ed2      	ldrb	r2, [r2, #27]
 800127e:	4313      	orrs	r3, r2
 8001280:	4a1d      	ldr	r2, [pc, #116]	; (80012f8 <VCP_Receive_Packet+0x164>)
 8001282:	6013      	str	r3, [r2, #0]
		g_swire_store_time3 = (uint32_t)USBpk.Buf[28]<<8 | USBpk.Buf[29];
 8001284:	4b11      	ldr	r3, [pc, #68]	; (80012cc <VCP_Receive_Packet+0x138>)
 8001286:	7f1b      	ldrb	r3, [r3, #28]
 8001288:	021b      	lsls	r3, r3, #8
 800128a:	4a10      	ldr	r2, [pc, #64]	; (80012cc <VCP_Receive_Packet+0x138>)
 800128c:	7f52      	ldrb	r2, [r2, #29]
 800128e:	4313      	orrs	r3, r2
 8001290:	4a1a      	ldr	r2, [pc, #104]	; (80012fc <VCP_Receive_Packet+0x168>)
 8001292:	6013      	str	r3, [r2, #0]
		VCP_Transmit_Packet(5);
 8001294:	2005      	movs	r0, #5
 8001296:	f7ff fee3 	bl	8001060 <VCP_Transmit_Packet>
		break;
 800129a:	e010      	b.n	80012be <VCP_Receive_Packet+0x12a>

	case 6: // s-wire play
		g_dw8786_pin_mode = USBpk.Buf[14];
 800129c:	4b0b      	ldr	r3, [pc, #44]	; (80012cc <VCP_Receive_Packet+0x138>)
 800129e:	7b9b      	ldrb	r3, [r3, #14]
 80012a0:	461a      	mov	r2, r3
 80012a2:	4b17      	ldr	r3, [pc, #92]	; (8001300 <VCP_Receive_Packet+0x16c>)
 80012a4:	601a      	str	r2, [r3, #0]
		S_Wire_Func(g_dw8786_pin_mode);
 80012a6:	4b16      	ldr	r3, [pc, #88]	; (8001300 <VCP_Receive_Packet+0x16c>)
 80012a8:	681b      	ldr	r3, [r3, #0]
 80012aa:	4618      	mov	r0, r3
 80012ac:	f7ff fcd6 	bl	8000c5c <S_Wire_Func>
		break;
 80012b0:	e005      	b.n	80012be <VCP_Receive_Packet+0x12a>

	case 7: // s-wire test
		g_swire_test_flag = USBpk.Buf[6];
 80012b2:	4b06      	ldr	r3, [pc, #24]	; (80012cc <VCP_Receive_Packet+0x138>)
 80012b4:	799b      	ldrb	r3, [r3, #6]
 80012b6:	461a      	mov	r2, r3
 80012b8:	4b12      	ldr	r3, [pc, #72]	; (8001304 <VCP_Receive_Packet+0x170>)
 80012ba:	601a      	str	r2, [r3, #0]
		break;
 80012bc:	bf00      	nop
	}

	USBsr.Rx_Done = 0;
 80012be:	4a12      	ldr	r2, [pc, #72]	; (8001308 <VCP_Receive_Packet+0x174>)
 80012c0:	7813      	ldrb	r3, [r2, #0]
 80012c2:	f36f 0300 	bfc	r3, #0, #1
 80012c6:	7013      	strb	r3, [r2, #0]
}
 80012c8:	bf00      	nop
 80012ca:	bd80      	pop	{r7, pc}
 80012cc:	2000007c 	.word	0x2000007c
 80012d0:	20000078 	.word	0x20000078
 80012d4:	2000006c 	.word	0x2000006c
 80012d8:	200004e0 	.word	0x200004e0
 80012dc:	20000064 	.word	0x20000064
 80012e0:	20000044 	.word	0x20000044
 80012e4:	20000074 	.word	0x20000074
 80012e8:	2000004c 	.word	0x2000004c
 80012ec:	20000060 	.word	0x20000060
 80012f0:	20000054 	.word	0x20000054
 80012f4:	200004dc 	.word	0x200004dc
 80012f8:	20000488 	.word	0x20000488
 80012fc:	20000050 	.word	0x20000050
 8001300:	20000058 	.word	0x20000058
 8001304:	20000048 	.word	0x20000048
 8001308:	200004d8 	.word	0x200004d8

0800130c <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 800130c:	b580      	push	{r7, lr}
 800130e:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8001310:	f000 fb00 	bl	8001914 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8001314:	f000 f814 	bl	8001340 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8001318:	f000 f8b4 	bl	8001484 <MX_GPIO_Init>
  MX_USART2_UART_Init();
 800131c:	f000 f87c 	bl	8001418 <MX_USART2_UART_Init>
  /* USER CODE BEGIN 2 */
  Boot_Message();
 8001320:	f7ff fdc4 	bl	8000eac <Boot_Message>
  HAL_UART_Receive_IT(&huart2, &USBpk.Get, 1);
 8001324:	2201      	movs	r2, #1
 8001326:	4904      	ldr	r1, [pc, #16]	; (8001338 <main+0x2c>)
 8001328:	4804      	ldr	r0, [pc, #16]	; (800133c <main+0x30>)
 800132a:	f001 fbdf 	bl	8002aec <HAL_UART_Receive_IT>
  init_i2c();
 800132e:	f7ff f8cd 	bl	80004cc <init_i2c>
  while (1)
  {
    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */
	  LED_LOOK();
 8001332:	f7ff fc3d 	bl	8000bb0 <LED_LOOK>
 8001336:	e7fc      	b.n	8001332 <main+0x26>
 8001338:	2000047c 	.word	0x2000047c
 800133c:	20000490 	.word	0x20000490

08001340 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001340:	b580      	push	{r7, lr}
 8001342:	b094      	sub	sp, #80	; 0x50
 8001344:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001346:	f107 0320 	add.w	r3, r7, #32
 800134a:	2230      	movs	r2, #48	; 0x30
 800134c:	2100      	movs	r1, #0
 800134e:	4618      	mov	r0, r3
 8001350:	f002 f924 	bl	800359c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001354:	f107 030c 	add.w	r3, r7, #12
 8001358:	2200      	movs	r2, #0
 800135a:	601a      	str	r2, [r3, #0]
 800135c:	605a      	str	r2, [r3, #4]
 800135e:	609a      	str	r2, [r3, #8]
 8001360:	60da      	str	r2, [r3, #12]
 8001362:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8001364:	2300      	movs	r3, #0
 8001366:	60bb      	str	r3, [r7, #8]
 8001368:	4b29      	ldr	r3, [pc, #164]	; (8001410 <SystemClock_Config+0xd0>)
 800136a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800136c:	4a28      	ldr	r2, [pc, #160]	; (8001410 <SystemClock_Config+0xd0>)
 800136e:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001372:	6413      	str	r3, [r2, #64]	; 0x40
 8001374:	4b26      	ldr	r3, [pc, #152]	; (8001410 <SystemClock_Config+0xd0>)
 8001376:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001378:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800137c:	60bb      	str	r3, [r7, #8]
 800137e:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 8001380:	2300      	movs	r3, #0
 8001382:	607b      	str	r3, [r7, #4]
 8001384:	4b23      	ldr	r3, [pc, #140]	; (8001414 <SystemClock_Config+0xd4>)
 8001386:	681b      	ldr	r3, [r3, #0]
 8001388:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 800138c:	4a21      	ldr	r2, [pc, #132]	; (8001414 <SystemClock_Config+0xd4>)
 800138e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8001392:	6013      	str	r3, [r2, #0]
 8001394:	4b1f      	ldr	r3, [pc, #124]	; (8001414 <SystemClock_Config+0xd4>)
 8001396:	681b      	ldr	r3, [r3, #0]
 8001398:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 800139c:	607b      	str	r3, [r7, #4]
 800139e:	687b      	ldr	r3, [r7, #4]
  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 80013a0:	2302      	movs	r3, #2
 80013a2:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80013a4:	2301      	movs	r3, #1
 80013a6:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80013a8:	2310      	movs	r3, #16
 80013aa:	633b      	str	r3, [r7, #48]	; 0x30
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80013ac:	2302      	movs	r3, #2
 80013ae:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 80013b0:	2300      	movs	r3, #0
 80013b2:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLM = 16;
 80013b4:	2310      	movs	r3, #16
 80013b6:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLN = 336;
 80013b8:	f44f 73a8 	mov.w	r3, #336	; 0x150
 80013bc:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 80013be:	2304      	movs	r3, #4
 80013c0:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 7;
 80013c2:	2307      	movs	r3, #7
 80013c4:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80013c6:	f107 0320 	add.w	r3, r7, #32
 80013ca:	4618      	mov	r0, r3
 80013cc:	f000 fe88 	bl	80020e0 <HAL_RCC_OscConfig>
 80013d0:	4603      	mov	r3, r0
 80013d2:	2b00      	cmp	r3, #0
 80013d4:	d001      	beq.n	80013da <SystemClock_Config+0x9a>
  {
    Error_Handler();
 80013d6:	f000 f9a7 	bl	8001728 <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80013da:	230f      	movs	r3, #15
 80013dc:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80013de:	2302      	movs	r3, #2
 80013e0:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80013e2:	2300      	movs	r3, #0
 80013e4:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 80013e6:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80013ea:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80013ec:	2300      	movs	r3, #0
 80013ee:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 80013f0:	f107 030c 	add.w	r3, r7, #12
 80013f4:	2102      	movs	r1, #2
 80013f6:	4618      	mov	r0, r3
 80013f8:	f001 f8ea 	bl	80025d0 <HAL_RCC_ClockConfig>
 80013fc:	4603      	mov	r3, r0
 80013fe:	2b00      	cmp	r3, #0
 8001400:	d001      	beq.n	8001406 <SystemClock_Config+0xc6>
  {
    Error_Handler();
 8001402:	f000 f991 	bl	8001728 <Error_Handler>
  }
}
 8001406:	bf00      	nop
 8001408:	3750      	adds	r7, #80	; 0x50
 800140a:	46bd      	mov	sp, r7
 800140c:	bd80      	pop	{r7, pc}
 800140e:	bf00      	nop
 8001410:	40023800 	.word	0x40023800
 8001414:	40007000 	.word	0x40007000

08001418 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8001418:	b580      	push	{r7, lr}
 800141a:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 800141c:	4b17      	ldr	r3, [pc, #92]	; (800147c <MX_USART2_UART_Init+0x64>)
 800141e:	4a18      	ldr	r2, [pc, #96]	; (8001480 <MX_USART2_UART_Init+0x68>)
 8001420:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 8001422:	4b16      	ldr	r3, [pc, #88]	; (800147c <MX_USART2_UART_Init+0x64>)
 8001424:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8001428:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 800142a:	4b14      	ldr	r3, [pc, #80]	; (800147c <MX_USART2_UART_Init+0x64>)
 800142c:	2200      	movs	r2, #0
 800142e:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8001430:	4b12      	ldr	r3, [pc, #72]	; (800147c <MX_USART2_UART_Init+0x64>)
 8001432:	2200      	movs	r2, #0
 8001434:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8001436:	4b11      	ldr	r3, [pc, #68]	; (800147c <MX_USART2_UART_Init+0x64>)
 8001438:	2200      	movs	r2, #0
 800143a:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 800143c:	4b0f      	ldr	r3, [pc, #60]	; (800147c <MX_USART2_UART_Init+0x64>)
 800143e:	220c      	movs	r2, #12
 8001440:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8001442:	4b0e      	ldr	r3, [pc, #56]	; (800147c <MX_USART2_UART_Init+0x64>)
 8001444:	2200      	movs	r2, #0
 8001446:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8001448:	4b0c      	ldr	r3, [pc, #48]	; (800147c <MX_USART2_UART_Init+0x64>)
 800144a:	2200      	movs	r2, #0
 800144c:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 800144e:	480b      	ldr	r0, [pc, #44]	; (800147c <MX_USART2_UART_Init+0x64>)
 8001450:	f001 faba 	bl	80029c8 <HAL_UART_Init>
 8001454:	4603      	mov	r3, r0
 8001456:	2b00      	cmp	r3, #0
 8001458:	d001      	beq.n	800145e <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 800145a:	f000 f965 	bl	8001728 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */
  huart2.Init.BaudRate = UART_BUAD;
 800145e:	4b07      	ldr	r3, [pc, #28]	; (800147c <MX_USART2_UART_Init+0x64>)
 8001460:	f44f 2261 	mov.w	r2, #921600	; 0xe1000
 8001464:	605a      	str	r2, [r3, #4]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8001466:	4805      	ldr	r0, [pc, #20]	; (800147c <MX_USART2_UART_Init+0x64>)
 8001468:	f001 faae 	bl	80029c8 <HAL_UART_Init>
 800146c:	4603      	mov	r3, r0
 800146e:	2b00      	cmp	r3, #0
 8001470:	d001      	beq.n	8001476 <MX_USART2_UART_Init+0x5e>
  {
    Error_Handler();
 8001472:	f000 f959 	bl	8001728 <Error_Handler>
  }
  /* USER CODE END USART2_Init 2 */

}
 8001476:	bf00      	nop
 8001478:	bd80      	pop	{r7, pc}
 800147a:	bf00      	nop
 800147c:	20000490 	.word	0x20000490
 8001480:	40004400 	.word	0x40004400

08001484 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8001484:	b580      	push	{r7, lr}
 8001486:	b08a      	sub	sp, #40	; 0x28
 8001488:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800148a:	f107 0314 	add.w	r3, r7, #20
 800148e:	2200      	movs	r2, #0
 8001490:	601a      	str	r2, [r3, #0]
 8001492:	605a      	str	r2, [r3, #4]
 8001494:	609a      	str	r2, [r3, #8]
 8001496:	60da      	str	r2, [r3, #12]
 8001498:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800149a:	2300      	movs	r3, #0
 800149c:	613b      	str	r3, [r7, #16]
 800149e:	4b4c      	ldr	r3, [pc, #304]	; (80015d0 <MX_GPIO_Init+0x14c>)
 80014a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80014a2:	4a4b      	ldr	r2, [pc, #300]	; (80015d0 <MX_GPIO_Init+0x14c>)
 80014a4:	f043 0304 	orr.w	r3, r3, #4
 80014a8:	6313      	str	r3, [r2, #48]	; 0x30
 80014aa:	4b49      	ldr	r3, [pc, #292]	; (80015d0 <MX_GPIO_Init+0x14c>)
 80014ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80014ae:	f003 0304 	and.w	r3, r3, #4
 80014b2:	613b      	str	r3, [r7, #16]
 80014b4:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80014b6:	2300      	movs	r3, #0
 80014b8:	60fb      	str	r3, [r7, #12]
 80014ba:	4b45      	ldr	r3, [pc, #276]	; (80015d0 <MX_GPIO_Init+0x14c>)
 80014bc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80014be:	4a44      	ldr	r2, [pc, #272]	; (80015d0 <MX_GPIO_Init+0x14c>)
 80014c0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80014c4:	6313      	str	r3, [r2, #48]	; 0x30
 80014c6:	4b42      	ldr	r3, [pc, #264]	; (80015d0 <MX_GPIO_Init+0x14c>)
 80014c8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80014ca:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80014ce:	60fb      	str	r3, [r7, #12]
 80014d0:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80014d2:	2300      	movs	r3, #0
 80014d4:	60bb      	str	r3, [r7, #8]
 80014d6:	4b3e      	ldr	r3, [pc, #248]	; (80015d0 <MX_GPIO_Init+0x14c>)
 80014d8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80014da:	4a3d      	ldr	r2, [pc, #244]	; (80015d0 <MX_GPIO_Init+0x14c>)
 80014dc:	f043 0301 	orr.w	r3, r3, #1
 80014e0:	6313      	str	r3, [r2, #48]	; 0x30
 80014e2:	4b3b      	ldr	r3, [pc, #236]	; (80015d0 <MX_GPIO_Init+0x14c>)
 80014e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80014e6:	f003 0301 	and.w	r3, r3, #1
 80014ea:	60bb      	str	r3, [r7, #8]
 80014ec:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80014ee:	2300      	movs	r3, #0
 80014f0:	607b      	str	r3, [r7, #4]
 80014f2:	4b37      	ldr	r3, [pc, #220]	; (80015d0 <MX_GPIO_Init+0x14c>)
 80014f4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80014f6:	4a36      	ldr	r2, [pc, #216]	; (80015d0 <MX_GPIO_Init+0x14c>)
 80014f8:	f043 0308 	orr.w	r3, r3, #8
 80014fc:	6313      	str	r3, [r2, #48]	; 0x30
 80014fe:	4b34      	ldr	r3, [pc, #208]	; (80015d0 <MX_GPIO_Init+0x14c>)
 8001500:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001502:	f003 0308 	and.w	r3, r3, #8
 8001506:	607b      	str	r3, [r7, #4]
 8001508:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800150a:	2300      	movs	r3, #0
 800150c:	603b      	str	r3, [r7, #0]
 800150e:	4b30      	ldr	r3, [pc, #192]	; (80015d0 <MX_GPIO_Init+0x14c>)
 8001510:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001512:	4a2f      	ldr	r2, [pc, #188]	; (80015d0 <MX_GPIO_Init+0x14c>)
 8001514:	f043 0302 	orr.w	r3, r3, #2
 8001518:	6313      	str	r3, [r2, #48]	; 0x30
 800151a:	4b2d      	ldr	r3, [pc, #180]	; (80015d0 <MX_GPIO_Init+0x14c>)
 800151c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800151e:	f003 0302 	and.w	r3, r3, #2
 8001522:	603b      	str	r3, [r7, #0]
 8001524:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 8001526:	2200      	movs	r2, #0
 8001528:	2120      	movs	r1, #32
 800152a:	482a      	ldr	r0, [pc, #168]	; (80015d4 <MX_GPIO_Init+0x150>)
 800152c:	f000 fd8c 	bl	8002048 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_10|GPIO_PIN_11
 8001530:	2200      	movs	r2, #0
 8001532:	f44f 51e3 	mov.w	r1, #7264	; 0x1c60
 8001536:	4828      	ldr	r0, [pc, #160]	; (80015d8 <MX_GPIO_Init+0x154>)
 8001538:	f000 fd86 	bl	8002048 <HAL_GPIO_WritePin>
                          |GPIO_PIN_12, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_2, GPIO_PIN_RESET);
 800153c:	2200      	movs	r2, #0
 800153e:	2104      	movs	r1, #4
 8001540:	4826      	ldr	r0, [pc, #152]	; (80015dc <MX_GPIO_Init+0x158>)
 8001542:	f000 fd81 	bl	8002048 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
 8001546:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800154a:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 800154c:	4b24      	ldr	r3, [pc, #144]	; (80015e0 <MX_GPIO_Init+0x15c>)
 800154e:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001550:	2300      	movs	r3, #0
 8001552:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 8001554:	f107 0314 	add.w	r3, r7, #20
 8001558:	4619      	mov	r1, r3
 800155a:	481f      	ldr	r0, [pc, #124]	; (80015d8 <MX_GPIO_Init+0x154>)
 800155c:	f000 fbf0 	bl	8001d40 <HAL_GPIO_Init>

  /*Configure GPIO pin : LD2_Pin */
  GPIO_InitStruct.Pin = LD2_Pin;
 8001560:	2320      	movs	r3, #32
 8001562:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001564:	2301      	movs	r3, #1
 8001566:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001568:	2300      	movs	r3, #0
 800156a:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800156c:	2300      	movs	r3, #0
 800156e:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 8001570:	f107 0314 	add.w	r3, r7, #20
 8001574:	4619      	mov	r1, r3
 8001576:	4817      	ldr	r0, [pc, #92]	; (80015d4 <MX_GPIO_Init+0x150>)
 8001578:	f000 fbe2 	bl	8001d40 <HAL_GPIO_Init>

  /*Configure GPIO pins : PC5 PC6 PC10 PC11
                           PC12 */
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_10|GPIO_PIN_11
 800157c:	f44f 53e3 	mov.w	r3, #7264	; 0x1c60
 8001580:	617b      	str	r3, [r7, #20]
                          |GPIO_PIN_12;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001582:	2301      	movs	r3, #1
 8001584:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001586:	2300      	movs	r3, #0
 8001588:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800158a:	2300      	movs	r3, #0
 800158c:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800158e:	f107 0314 	add.w	r3, r7, #20
 8001592:	4619      	mov	r1, r3
 8001594:	4810      	ldr	r0, [pc, #64]	; (80015d8 <MX_GPIO_Init+0x154>)
 8001596:	f000 fbd3 	bl	8001d40 <HAL_GPIO_Init>

  /*Configure GPIO pin : PD2 */
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 800159a:	2304      	movs	r3, #4
 800159c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800159e:	2301      	movs	r3, #1
 80015a0:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015a2:	2300      	movs	r3, #0
 80015a4:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80015a6:	2300      	movs	r3, #0
 80015a8:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015aa:	f107 0314 	add.w	r3, r7, #20
 80015ae:	4619      	mov	r1, r3
 80015b0:	480a      	ldr	r0, [pc, #40]	; (80015dc <MX_GPIO_Init+0x158>)
 80015b2:	f000 fbc5 	bl	8001d40 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 80015b6:	2200      	movs	r2, #0
 80015b8:	2100      	movs	r1, #0
 80015ba:	2028      	movs	r0, #40	; 0x28
 80015bc:	f000 faf7 	bl	8001bae <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 80015c0:	2028      	movs	r0, #40	; 0x28
 80015c2:	f000 fb10 	bl	8001be6 <HAL_NVIC_EnableIRQ>

}
 80015c6:	bf00      	nop
 80015c8:	3728      	adds	r7, #40	; 0x28
 80015ca:	46bd      	mov	sp, r7
 80015cc:	bd80      	pop	{r7, pc}
 80015ce:	bf00      	nop
 80015d0:	40023800 	.word	0x40023800
 80015d4:	40020000 	.word	0x40020000
 80015d8:	40020800 	.word	0x40020800
 80015dc:	40020c00 	.word	0x40020c00
 80015e0:	10210000 	.word	0x10210000

080015e4 <HAL_GPIO_EXTI_Callback>:
Function	: EXTI line detection callbacks
Date		: 2021.06.13 JKS
Version		: 1.0
***************************************************************************/
void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
{
 80015e4:	b580      	push	{r7, lr}
 80015e6:	b084      	sub	sp, #16
 80015e8:	af02      	add	r7, sp, #8
 80015ea:	4603      	mov	r3, r0
 80015ec:	80fb      	strh	r3, [r7, #6]
	static uint8_t dat;

	if(GPIO_Pin == GPIO_PIN_13) {
 80015ee:	88fb      	ldrh	r3, [r7, #6]
 80015f0:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80015f4:	d129      	bne.n	800164a <HAL_GPIO_EXTI_Callback+0x66>
		HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_5);
 80015f6:	2120      	movs	r1, #32
 80015f8:	4816      	ldr	r0, [pc, #88]	; (8001654 <HAL_GPIO_EXTI_Callback+0x70>)
 80015fa:	f000 fd3e 	bl	800207a <HAL_GPIO_TogglePin>
		//printf("test\r\n");
		Boot_Message();
 80015fe:	f7ff fc55 	bl	8000eac <Boot_Message>
		dat++;
 8001602:	4b15      	ldr	r3, [pc, #84]	; (8001658 <HAL_GPIO_EXTI_Callback+0x74>)
 8001604:	781b      	ldrb	r3, [r3, #0]
 8001606:	3301      	adds	r3, #1
 8001608:	b2da      	uxtb	r2, r3
 800160a:	4b13      	ldr	r3, [pc, #76]	; (8001658 <HAL_GPIO_EXTI_Callback+0x74>)
 800160c:	701a      	strb	r2, [r3, #0]
		i2c_write_task(0xe4, 0x01, 1, &dat, 1, 1);
 800160e:	2301      	movs	r3, #1
 8001610:	9301      	str	r3, [sp, #4]
 8001612:	2301      	movs	r3, #1
 8001614:	9300      	str	r3, [sp, #0]
 8001616:	4b10      	ldr	r3, [pc, #64]	; (8001658 <HAL_GPIO_EXTI_Callback+0x74>)
 8001618:	2201      	movs	r2, #1
 800161a:	2101      	movs	r1, #1
 800161c:	20e4      	movs	r0, #228	; 0xe4
 800161e:	f7fe ffa9 	bl	8000574 <i2c_write_task>
		ENP(dat&0x01);
 8001622:	4b0d      	ldr	r3, [pc, #52]	; (8001658 <HAL_GPIO_EXTI_Callback+0x74>)
 8001624:	781b      	ldrb	r3, [r3, #0]
 8001626:	f003 0301 	and.w	r3, r3, #1
 800162a:	b2db      	uxtb	r3, r3
 800162c:	461a      	mov	r2, r3
 800162e:	2120      	movs	r1, #32
 8001630:	480a      	ldr	r0, [pc, #40]	; (800165c <HAL_GPIO_EXTI_Callback+0x78>)
 8001632:	f000 fd09 	bl	8002048 <HAL_GPIO_WritePin>
		ENN(dat&0x01);
 8001636:	4b08      	ldr	r3, [pc, #32]	; (8001658 <HAL_GPIO_EXTI_Callback+0x74>)
 8001638:	781b      	ldrb	r3, [r3, #0]
 800163a:	f003 0301 	and.w	r3, r3, #1
 800163e:	b2db      	uxtb	r3, r3
 8001640:	461a      	mov	r2, r3
 8001642:	2140      	movs	r1, #64	; 0x40
 8001644:	4805      	ldr	r0, [pc, #20]	; (800165c <HAL_GPIO_EXTI_Callback+0x78>)
 8001646:	f000 fcff 	bl	8002048 <HAL_GPIO_WritePin>
	}
}
 800164a:	bf00      	nop
 800164c:	3708      	adds	r7, #8
 800164e:	46bd      	mov	sp, r7
 8001650:	bd80      	pop	{r7, pc}
 8001652:	bf00      	nop
 8001654:	40020000 	.word	0x40020000
 8001658:	2000002c 	.word	0x2000002c
 800165c:	40020800 	.word	0x40020800

08001660 <HAL_UART_RxCpltCallback>:
Function	: Rx Transfer completed callback
Date		: 2019.10.28 JKS
Version		: 1.0
***************************************************************************/
void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
 8001660:	b580      	push	{r7, lr}
 8001662:	b084      	sub	sp, #16
 8001664:	af00      	add	r7, sp, #0
 8001666:	6078      	str	r0, [r7, #4]
    u8 crc;
	static u32 RxCnt, g_RxSize;

	USBpk.Buf[RxCnt++] = USBpk.Get;
 8001668:	4b20      	ldr	r3, [pc, #128]	; (80016ec <HAL_UART_RxCpltCallback+0x8c>)
 800166a:	681b      	ldr	r3, [r3, #0]
 800166c:	1c5a      	adds	r2, r3, #1
 800166e:	491f      	ldr	r1, [pc, #124]	; (80016ec <HAL_UART_RxCpltCallback+0x8c>)
 8001670:	600a      	str	r2, [r1, #0]
 8001672:	4a1f      	ldr	r2, [pc, #124]	; (80016f0 <HAL_UART_RxCpltCallback+0x90>)
 8001674:	f892 1400 	ldrb.w	r1, [r2, #1024]	; 0x400
 8001678:	4a1d      	ldr	r2, [pc, #116]	; (80016f0 <HAL_UART_RxCpltCallback+0x90>)
 800167a:	54d1      	strb	r1, [r2, r3]

    if(RxCnt == 4) {
 800167c:	4b1b      	ldr	r3, [pc, #108]	; (80016ec <HAL_UART_RxCpltCallback+0x8c>)
 800167e:	681b      	ldr	r3, [r3, #0]
 8001680:	2b04      	cmp	r3, #4
 8001682:	d108      	bne.n	8001696 <HAL_UART_RxCpltCallback+0x36>
        g_RxSize = (((uint32_t)USBpk.Buf[2] << 8) | USBpk.Buf[3]) + 5;
 8001684:	4b1a      	ldr	r3, [pc, #104]	; (80016f0 <HAL_UART_RxCpltCallback+0x90>)
 8001686:	789b      	ldrb	r3, [r3, #2]
 8001688:	021b      	lsls	r3, r3, #8
 800168a:	4a19      	ldr	r2, [pc, #100]	; (80016f0 <HAL_UART_RxCpltCallback+0x90>)
 800168c:	78d2      	ldrb	r2, [r2, #3]
 800168e:	4313      	orrs	r3, r2
 8001690:	3305      	adds	r3, #5
 8001692:	4a18      	ldr	r2, [pc, #96]	; (80016f4 <HAL_UART_RxCpltCallback+0x94>)
 8001694:	6013      	str	r3, [r2, #0]
    }

    if (RxCnt == g_RxSize) {
 8001696:	4b15      	ldr	r3, [pc, #84]	; (80016ec <HAL_UART_RxCpltCallback+0x8c>)
 8001698:	681a      	ldr	r2, [r3, #0]
 800169a:	4b16      	ldr	r3, [pc, #88]	; (80016f4 <HAL_UART_RxCpltCallback+0x94>)
 800169c:	681b      	ldr	r3, [r3, #0]
 800169e:	429a      	cmp	r2, r3
 80016a0:	d11b      	bne.n	80016da <HAL_UART_RxCpltCallback+0x7a>
        crc = USBpk.Buf[0] + USBpk.Buf[1] + USBpk.Buf[2] + USBpk.Buf[3];
 80016a2:	4b13      	ldr	r3, [pc, #76]	; (80016f0 <HAL_UART_RxCpltCallback+0x90>)
 80016a4:	781a      	ldrb	r2, [r3, #0]
 80016a6:	4b12      	ldr	r3, [pc, #72]	; (80016f0 <HAL_UART_RxCpltCallback+0x90>)
 80016a8:	785b      	ldrb	r3, [r3, #1]
 80016aa:	4413      	add	r3, r2
 80016ac:	b2da      	uxtb	r2, r3
 80016ae:	4b10      	ldr	r3, [pc, #64]	; (80016f0 <HAL_UART_RxCpltCallback+0x90>)
 80016b0:	789b      	ldrb	r3, [r3, #2]
 80016b2:	4413      	add	r3, r2
 80016b4:	b2da      	uxtb	r2, r3
 80016b6:	4b0e      	ldr	r3, [pc, #56]	; (80016f0 <HAL_UART_RxCpltCallback+0x90>)
 80016b8:	78db      	ldrb	r3, [r3, #3]
 80016ba:	4413      	add	r3, r2
 80016bc:	73fb      	strb	r3, [r7, #15]

        if(USBpk.Buf[4] == crc) {
 80016be:	4b0c      	ldr	r3, [pc, #48]	; (80016f0 <HAL_UART_RxCpltCallback+0x90>)
 80016c0:	791b      	ldrb	r3, [r3, #4]
 80016c2:	7bfa      	ldrb	r2, [r7, #15]
 80016c4:	429a      	cmp	r2, r3
 80016c6:	d105      	bne.n	80016d4 <HAL_UART_RxCpltCallback+0x74>
         HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_5);
 80016c8:	2120      	movs	r1, #32
 80016ca:	480b      	ldr	r0, [pc, #44]	; (80016f8 <HAL_UART_RxCpltCallback+0x98>)
 80016cc:	f000 fcd5 	bl	800207a <HAL_GPIO_TogglePin>
         VCP_Receive_Packet();
 80016d0:	f7ff fd60 	bl	8001194 <VCP_Receive_Packet>
        }
        RxCnt = 0;
 80016d4:	4b05      	ldr	r3, [pc, #20]	; (80016ec <HAL_UART_RxCpltCallback+0x8c>)
 80016d6:	2200      	movs	r2, #0
 80016d8:	601a      	str	r2, [r3, #0]
    }

	HAL_UART_Receive_IT(&huart2, &USBpk.Get, 1);
 80016da:	2201      	movs	r2, #1
 80016dc:	4907      	ldr	r1, [pc, #28]	; (80016fc <HAL_UART_RxCpltCallback+0x9c>)
 80016de:	4808      	ldr	r0, [pc, #32]	; (8001700 <HAL_UART_RxCpltCallback+0xa0>)
 80016e0:	f001 fa04 	bl	8002aec <HAL_UART_Receive_IT>
}
 80016e4:	bf00      	nop
 80016e6:	3710      	adds	r7, #16
 80016e8:	46bd      	mov	sp, r7
 80016ea:	bd80      	pop	{r7, pc}
 80016ec:	20000030 	.word	0x20000030
 80016f0:	2000007c 	.word	0x2000007c
 80016f4:	20000034 	.word	0x20000034
 80016f8:	40020000 	.word	0x40020000
 80016fc:	2000047c 	.word	0x2000047c
 8001700:	20000490 	.word	0x20000490

08001704 <HAL_UART_TxCpltCallback>:
  * @note   This example shows a simple way to report end of DMA Tx transfer, and
  *         you can add your own implementation.
  * @retval None
  */
void HAL_UART_TxCpltCallback(UART_HandleTypeDef *UartHandle)
{
 8001704:	b480      	push	{r7}
 8001706:	b083      	sub	sp, #12
 8001708:	af00      	add	r7, sp, #0
 800170a:	6078      	str	r0, [r7, #4]
  /* Set transmission flag: transfer complete*/
	USBsr.Tx_Done = 1;
 800170c:	4a05      	ldr	r2, [pc, #20]	; (8001724 <HAL_UART_TxCpltCallback+0x20>)
 800170e:	7813      	ldrb	r3, [r2, #0]
 8001710:	f043 0302 	orr.w	r3, r3, #2
 8001714:	7013      	strb	r3, [r2, #0]
}
 8001716:	bf00      	nop
 8001718:	370c      	adds	r7, #12
 800171a:	46bd      	mov	sp, r7
 800171c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001720:	4770      	bx	lr
 8001722:	bf00      	nop
 8001724:	200004d8 	.word	0x200004d8

08001728 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001728:	b480      	push	{r7}
 800172a:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 800172c:	b672      	cpsid	i
}
 800172e:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8001730:	e7fe      	b.n	8001730 <Error_Handler+0x8>
	...

08001734 <HAL_MspInit>:
 8001734:	b580      	push	{r7, lr}
 8001736:	b082      	sub	sp, #8
 8001738:	af00      	add	r7, sp, #0
 800173a:	2300      	movs	r3, #0
 800173c:	607b      	str	r3, [r7, #4]
 800173e:	4b10      	ldr	r3, [pc, #64]	; (8001780 <HAL_MspInit+0x4c>)
 8001740:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001742:	4a0f      	ldr	r2, [pc, #60]	; (8001780 <HAL_MspInit+0x4c>)
 8001744:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001748:	6453      	str	r3, [r2, #68]	; 0x44
 800174a:	4b0d      	ldr	r3, [pc, #52]	; (8001780 <HAL_MspInit+0x4c>)
 800174c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800174e:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8001752:	607b      	str	r3, [r7, #4]
 8001754:	687b      	ldr	r3, [r7, #4]
 8001756:	2300      	movs	r3, #0
 8001758:	603b      	str	r3, [r7, #0]
 800175a:	4b09      	ldr	r3, [pc, #36]	; (8001780 <HAL_MspInit+0x4c>)
 800175c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800175e:	4a08      	ldr	r2, [pc, #32]	; (8001780 <HAL_MspInit+0x4c>)
 8001760:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001764:	6413      	str	r3, [r2, #64]	; 0x40
 8001766:	4b06      	ldr	r3, [pc, #24]	; (8001780 <HAL_MspInit+0x4c>)
 8001768:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800176a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800176e:	603b      	str	r3, [r7, #0]
 8001770:	683b      	ldr	r3, [r7, #0]
 8001772:	2007      	movs	r0, #7
 8001774:	f000 fa10 	bl	8001b98 <HAL_NVIC_SetPriorityGrouping>
 8001778:	bf00      	nop
 800177a:	3708      	adds	r7, #8
 800177c:	46bd      	mov	sp, r7
 800177e:	bd80      	pop	{r7, pc}
 8001780:	40023800 	.word	0x40023800

08001784 <HAL_UART_MspInit>:
 8001784:	b580      	push	{r7, lr}
 8001786:	b08a      	sub	sp, #40	; 0x28
 8001788:	af00      	add	r7, sp, #0
 800178a:	6078      	str	r0, [r7, #4]
 800178c:	f107 0314 	add.w	r3, r7, #20
 8001790:	2200      	movs	r2, #0
 8001792:	601a      	str	r2, [r3, #0]
 8001794:	605a      	str	r2, [r3, #4]
 8001796:	609a      	str	r2, [r3, #8]
 8001798:	60da      	str	r2, [r3, #12]
 800179a:	611a      	str	r2, [r3, #16]
 800179c:	687b      	ldr	r3, [r7, #4]
 800179e:	681b      	ldr	r3, [r3, #0]
 80017a0:	4a1d      	ldr	r2, [pc, #116]	; (8001818 <HAL_UART_MspInit+0x94>)
 80017a2:	4293      	cmp	r3, r2
 80017a4:	d133      	bne.n	800180e <HAL_UART_MspInit+0x8a>
 80017a6:	2300      	movs	r3, #0
 80017a8:	613b      	str	r3, [r7, #16]
 80017aa:	4b1c      	ldr	r3, [pc, #112]	; (800181c <HAL_UART_MspInit+0x98>)
 80017ac:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80017ae:	4a1b      	ldr	r2, [pc, #108]	; (800181c <HAL_UART_MspInit+0x98>)
 80017b0:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80017b4:	6413      	str	r3, [r2, #64]	; 0x40
 80017b6:	4b19      	ldr	r3, [pc, #100]	; (800181c <HAL_UART_MspInit+0x98>)
 80017b8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80017ba:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80017be:	613b      	str	r3, [r7, #16]
 80017c0:	693b      	ldr	r3, [r7, #16]
 80017c2:	2300      	movs	r3, #0
 80017c4:	60fb      	str	r3, [r7, #12]
 80017c6:	4b15      	ldr	r3, [pc, #84]	; (800181c <HAL_UART_MspInit+0x98>)
 80017c8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80017ca:	4a14      	ldr	r2, [pc, #80]	; (800181c <HAL_UART_MspInit+0x98>)
 80017cc:	f043 0301 	orr.w	r3, r3, #1
 80017d0:	6313      	str	r3, [r2, #48]	; 0x30
 80017d2:	4b12      	ldr	r3, [pc, #72]	; (800181c <HAL_UART_MspInit+0x98>)
 80017d4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80017d6:	f003 0301 	and.w	r3, r3, #1
 80017da:	60fb      	str	r3, [r7, #12]
 80017dc:	68fb      	ldr	r3, [r7, #12]
 80017de:	230c      	movs	r3, #12
 80017e0:	617b      	str	r3, [r7, #20]
 80017e2:	2302      	movs	r3, #2
 80017e4:	61bb      	str	r3, [r7, #24]
 80017e6:	2300      	movs	r3, #0
 80017e8:	61fb      	str	r3, [r7, #28]
 80017ea:	2303      	movs	r3, #3
 80017ec:	623b      	str	r3, [r7, #32]
 80017ee:	2307      	movs	r3, #7
 80017f0:	627b      	str	r3, [r7, #36]	; 0x24
 80017f2:	f107 0314 	add.w	r3, r7, #20
 80017f6:	4619      	mov	r1, r3
 80017f8:	4809      	ldr	r0, [pc, #36]	; (8001820 <HAL_UART_MspInit+0x9c>)
 80017fa:	f000 faa1 	bl	8001d40 <HAL_GPIO_Init>
 80017fe:	2200      	movs	r2, #0
 8001800:	2100      	movs	r1, #0
 8001802:	2026      	movs	r0, #38	; 0x26
 8001804:	f000 f9d3 	bl	8001bae <HAL_NVIC_SetPriority>
 8001808:	2026      	movs	r0, #38	; 0x26
 800180a:	f000 f9ec 	bl	8001be6 <HAL_NVIC_EnableIRQ>
 800180e:	bf00      	nop
 8001810:	3728      	adds	r7, #40	; 0x28
 8001812:	46bd      	mov	sp, r7
 8001814:	bd80      	pop	{r7, pc}
 8001816:	bf00      	nop
 8001818:	40004400 	.word	0x40004400
 800181c:	40023800 	.word	0x40023800
 8001820:	40020000 	.word	0x40020000

08001824 <NMI_Handler>:
 8001824:	b480      	push	{r7}
 8001826:	af00      	add	r7, sp, #0
 8001828:	e7fe      	b.n	8001828 <NMI_Handler+0x4>

0800182a <HardFault_Handler>:
 800182a:	b480      	push	{r7}
 800182c:	af00      	add	r7, sp, #0
 800182e:	e7fe      	b.n	800182e <HardFault_Handler+0x4>

08001830 <MemManage_Handler>:
 8001830:	b480      	push	{r7}
 8001832:	af00      	add	r7, sp, #0
 8001834:	e7fe      	b.n	8001834 <MemManage_Handler+0x4>

08001836 <BusFault_Handler>:
 8001836:	b480      	push	{r7}
 8001838:	af00      	add	r7, sp, #0
 800183a:	e7fe      	b.n	800183a <BusFault_Handler+0x4>

0800183c <UsageFault_Handler>:
 800183c:	b480      	push	{r7}
 800183e:	af00      	add	r7, sp, #0
 8001840:	e7fe      	b.n	8001840 <UsageFault_Handler+0x4>

08001842 <SVC_Handler>:
 8001842:	b480      	push	{r7}
 8001844:	af00      	add	r7, sp, #0
 8001846:	bf00      	nop
 8001848:	46bd      	mov	sp, r7
 800184a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800184e:	4770      	bx	lr

08001850 <DebugMon_Handler>:
 8001850:	b480      	push	{r7}
 8001852:	af00      	add	r7, sp, #0
 8001854:	bf00      	nop
 8001856:	46bd      	mov	sp, r7
 8001858:	f85d 7b04 	ldr.w	r7, [sp], #4
 800185c:	4770      	bx	lr

0800185e <PendSV_Handler>:
 800185e:	b480      	push	{r7}
 8001860:	af00      	add	r7, sp, #0
 8001862:	bf00      	nop
 8001864:	46bd      	mov	sp, r7
 8001866:	f85d 7b04 	ldr.w	r7, [sp], #4
 800186a:	4770      	bx	lr

0800186c <SysTick_Handler>:
 800186c:	b580      	push	{r7, lr}
 800186e:	af00      	add	r7, sp, #0
 8001870:	f000 f8a2 	bl	80019b8 <HAL_IncTick>
 8001874:	bf00      	nop
 8001876:	bd80      	pop	{r7, pc}

08001878 <USART2_IRQHandler>:
 8001878:	b580      	push	{r7, lr}
 800187a:	af00      	add	r7, sp, #0
 800187c:	4802      	ldr	r0, [pc, #8]	; (8001888 <USART2_IRQHandler+0x10>)
 800187e:	f001 f965 	bl	8002b4c <HAL_UART_IRQHandler>
 8001882:	bf00      	nop
 8001884:	bd80      	pop	{r7, pc}
 8001886:	bf00      	nop
 8001888:	20000490 	.word	0x20000490

0800188c <EXTI15_10_IRQHandler>:
 800188c:	b580      	push	{r7, lr}
 800188e:	af00      	add	r7, sp, #0
 8001890:	f44f 5000 	mov.w	r0, #8192	; 0x2000
 8001894:	f000 fc0c 	bl	80020b0 <HAL_GPIO_EXTI_IRQHandler>
 8001898:	bf00      	nop
 800189a:	bd80      	pop	{r7, pc}

0800189c <SystemInit>:
 800189c:	b480      	push	{r7}
 800189e:	af00      	add	r7, sp, #0
 80018a0:	4b06      	ldr	r3, [pc, #24]	; (80018bc <SystemInit+0x20>)
 80018a2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80018a6:	4a05      	ldr	r2, [pc, #20]	; (80018bc <SystemInit+0x20>)
 80018a8:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80018ac:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 80018b0:	bf00      	nop
 80018b2:	46bd      	mov	sp, r7
 80018b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018b8:	4770      	bx	lr
 80018ba:	bf00      	nop
 80018bc:	e000ed00 	.word	0xe000ed00

080018c0 <Reset_Handler>:
 80018c0:	f8df d034 	ldr.w	sp, [pc, #52]	; 80018f8 <LoopFillZerobss+0x12>
 80018c4:	480d      	ldr	r0, [pc, #52]	; (80018fc <LoopFillZerobss+0x16>)
 80018c6:	490e      	ldr	r1, [pc, #56]	; (8001900 <LoopFillZerobss+0x1a>)
 80018c8:	4a0e      	ldr	r2, [pc, #56]	; (8001904 <LoopFillZerobss+0x1e>)
 80018ca:	2300      	movs	r3, #0
 80018cc:	e002      	b.n	80018d4 <LoopCopyDataInit>

080018ce <CopyDataInit>:
 80018ce:	58d4      	ldr	r4, [r2, r3]
 80018d0:	50c4      	str	r4, [r0, r3]
 80018d2:	3304      	adds	r3, #4

080018d4 <LoopCopyDataInit>:
 80018d4:	18c4      	adds	r4, r0, r3
 80018d6:	428c      	cmp	r4, r1
 80018d8:	d3f9      	bcc.n	80018ce <CopyDataInit>
 80018da:	4a0b      	ldr	r2, [pc, #44]	; (8001908 <LoopFillZerobss+0x22>)
 80018dc:	4c0b      	ldr	r4, [pc, #44]	; (800190c <LoopFillZerobss+0x26>)
 80018de:	2300      	movs	r3, #0
 80018e0:	e001      	b.n	80018e6 <LoopFillZerobss>

080018e2 <FillZerobss>:
 80018e2:	6013      	str	r3, [r2, #0]
 80018e4:	3204      	adds	r2, #4

080018e6 <LoopFillZerobss>:
 80018e6:	42a2      	cmp	r2, r4
 80018e8:	d3fb      	bcc.n	80018e2 <FillZerobss>
 80018ea:	f7ff ffd7 	bl	800189c <SystemInit>
 80018ee:	f001 fe31 	bl	8003554 <__libc_init_array>
 80018f2:	f7ff fd0b 	bl	800130c <main>
 80018f6:	4770      	bx	lr
 80018f8:	20018000 	.word	0x20018000
 80018fc:	20000000 	.word	0x20000000
 8001900:	2000000c 	.word	0x2000000c
 8001904:	080035ec 	.word	0x080035ec
 8001908:	2000000c 	.word	0x2000000c
 800190c:	200004e8 	.word	0x200004e8

08001910 <ADC_IRQHandler>:
 8001910:	e7fe      	b.n	8001910 <ADC_IRQHandler>
	...

08001914 <HAL_Init>:
 8001914:	b580      	push	{r7, lr}
 8001916:	af00      	add	r7, sp, #0
 8001918:	4b0e      	ldr	r3, [pc, #56]	; (8001954 <HAL_Init+0x40>)
 800191a:	681b      	ldr	r3, [r3, #0]
 800191c:	4a0d      	ldr	r2, [pc, #52]	; (8001954 <HAL_Init+0x40>)
 800191e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001922:	6013      	str	r3, [r2, #0]
 8001924:	4b0b      	ldr	r3, [pc, #44]	; (8001954 <HAL_Init+0x40>)
 8001926:	681b      	ldr	r3, [r3, #0]
 8001928:	4a0a      	ldr	r2, [pc, #40]	; (8001954 <HAL_Init+0x40>)
 800192a:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800192e:	6013      	str	r3, [r2, #0]
 8001930:	4b08      	ldr	r3, [pc, #32]	; (8001954 <HAL_Init+0x40>)
 8001932:	681b      	ldr	r3, [r3, #0]
 8001934:	4a07      	ldr	r2, [pc, #28]	; (8001954 <HAL_Init+0x40>)
 8001936:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800193a:	6013      	str	r3, [r2, #0]
 800193c:	2003      	movs	r0, #3
 800193e:	f000 f92b 	bl	8001b98 <HAL_NVIC_SetPriorityGrouping>
 8001942:	2000      	movs	r0, #0
 8001944:	f000 f808 	bl	8001958 <HAL_InitTick>
 8001948:	f7ff fef4 	bl	8001734 <HAL_MspInit>
 800194c:	2300      	movs	r3, #0
 800194e:	4618      	mov	r0, r3
 8001950:	bd80      	pop	{r7, pc}
 8001952:	bf00      	nop
 8001954:	40023c00 	.word	0x40023c00

08001958 <HAL_InitTick>:
 8001958:	b580      	push	{r7, lr}
 800195a:	b082      	sub	sp, #8
 800195c:	af00      	add	r7, sp, #0
 800195e:	6078      	str	r0, [r7, #4]
 8001960:	4b12      	ldr	r3, [pc, #72]	; (80019ac <HAL_InitTick+0x54>)
 8001962:	681a      	ldr	r2, [r3, #0]
 8001964:	4b12      	ldr	r3, [pc, #72]	; (80019b0 <HAL_InitTick+0x58>)
 8001966:	781b      	ldrb	r3, [r3, #0]
 8001968:	4619      	mov	r1, r3
 800196a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800196e:	fbb3 f3f1 	udiv	r3, r3, r1
 8001972:	fbb2 f3f3 	udiv	r3, r2, r3
 8001976:	4618      	mov	r0, r3
 8001978:	f000 f943 	bl	8001c02 <HAL_SYSTICK_Config>
 800197c:	4603      	mov	r3, r0
 800197e:	2b00      	cmp	r3, #0
 8001980:	d001      	beq.n	8001986 <HAL_InitTick+0x2e>
 8001982:	2301      	movs	r3, #1
 8001984:	e00e      	b.n	80019a4 <HAL_InitTick+0x4c>
 8001986:	687b      	ldr	r3, [r7, #4]
 8001988:	2b0f      	cmp	r3, #15
 800198a:	d80a      	bhi.n	80019a2 <HAL_InitTick+0x4a>
 800198c:	2200      	movs	r2, #0
 800198e:	6879      	ldr	r1, [r7, #4]
 8001990:	f04f 30ff 	mov.w	r0, #4294967295
 8001994:	f000 f90b 	bl	8001bae <HAL_NVIC_SetPriority>
 8001998:	4a06      	ldr	r2, [pc, #24]	; (80019b4 <HAL_InitTick+0x5c>)
 800199a:	687b      	ldr	r3, [r7, #4]
 800199c:	6013      	str	r3, [r2, #0]
 800199e:	2300      	movs	r3, #0
 80019a0:	e000      	b.n	80019a4 <HAL_InitTick+0x4c>
 80019a2:	2301      	movs	r3, #1
 80019a4:	4618      	mov	r0, r3
 80019a6:	3708      	adds	r7, #8
 80019a8:	46bd      	mov	sp, r7
 80019aa:	bd80      	pop	{r7, pc}
 80019ac:	20000000 	.word	0x20000000
 80019b0:	20000008 	.word	0x20000008
 80019b4:	20000004 	.word	0x20000004

080019b8 <HAL_IncTick>:
 80019b8:	b480      	push	{r7}
 80019ba:	af00      	add	r7, sp, #0
 80019bc:	4b06      	ldr	r3, [pc, #24]	; (80019d8 <HAL_IncTick+0x20>)
 80019be:	781b      	ldrb	r3, [r3, #0]
 80019c0:	461a      	mov	r2, r3
 80019c2:	4b06      	ldr	r3, [pc, #24]	; (80019dc <HAL_IncTick+0x24>)
 80019c4:	681b      	ldr	r3, [r3, #0]
 80019c6:	4413      	add	r3, r2
 80019c8:	4a04      	ldr	r2, [pc, #16]	; (80019dc <HAL_IncTick+0x24>)
 80019ca:	6013      	str	r3, [r2, #0]
 80019cc:	bf00      	nop
 80019ce:	46bd      	mov	sp, r7
 80019d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019d4:	4770      	bx	lr
 80019d6:	bf00      	nop
 80019d8:	20000008 	.word	0x20000008
 80019dc:	200004e4 	.word	0x200004e4

080019e0 <HAL_GetTick>:
 80019e0:	b480      	push	{r7}
 80019e2:	af00      	add	r7, sp, #0
 80019e4:	4b03      	ldr	r3, [pc, #12]	; (80019f4 <HAL_GetTick+0x14>)
 80019e6:	681b      	ldr	r3, [r3, #0]
 80019e8:	4618      	mov	r0, r3
 80019ea:	46bd      	mov	sp, r7
 80019ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019f0:	4770      	bx	lr
 80019f2:	bf00      	nop
 80019f4:	200004e4 	.word	0x200004e4

080019f8 <__NVIC_SetPriorityGrouping>:
 80019f8:	b480      	push	{r7}
 80019fa:	b085      	sub	sp, #20
 80019fc:	af00      	add	r7, sp, #0
 80019fe:	6078      	str	r0, [r7, #4]
 8001a00:	687b      	ldr	r3, [r7, #4]
 8001a02:	f003 0307 	and.w	r3, r3, #7
 8001a06:	60fb      	str	r3, [r7, #12]
 8001a08:	4b0c      	ldr	r3, [pc, #48]	; (8001a3c <__NVIC_SetPriorityGrouping+0x44>)
 8001a0a:	68db      	ldr	r3, [r3, #12]
 8001a0c:	60bb      	str	r3, [r7, #8]
 8001a0e:	68ba      	ldr	r2, [r7, #8]
 8001a10:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8001a14:	4013      	ands	r3, r2
 8001a16:	60bb      	str	r3, [r7, #8]
 8001a18:	68fb      	ldr	r3, [r7, #12]
 8001a1a:	021a      	lsls	r2, r3, #8
 8001a1c:	68bb      	ldr	r3, [r7, #8]
 8001a1e:	4313      	orrs	r3, r2
 8001a20:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8001a24:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001a28:	60bb      	str	r3, [r7, #8]
 8001a2a:	4a04      	ldr	r2, [pc, #16]	; (8001a3c <__NVIC_SetPriorityGrouping+0x44>)
 8001a2c:	68bb      	ldr	r3, [r7, #8]
 8001a2e:	60d3      	str	r3, [r2, #12]
 8001a30:	bf00      	nop
 8001a32:	3714      	adds	r7, #20
 8001a34:	46bd      	mov	sp, r7
 8001a36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a3a:	4770      	bx	lr
 8001a3c:	e000ed00 	.word	0xe000ed00

08001a40 <__NVIC_GetPriorityGrouping>:
 8001a40:	b480      	push	{r7}
 8001a42:	af00      	add	r7, sp, #0
 8001a44:	4b04      	ldr	r3, [pc, #16]	; (8001a58 <__NVIC_GetPriorityGrouping+0x18>)
 8001a46:	68db      	ldr	r3, [r3, #12]
 8001a48:	0a1b      	lsrs	r3, r3, #8
 8001a4a:	f003 0307 	and.w	r3, r3, #7
 8001a4e:	4618      	mov	r0, r3
 8001a50:	46bd      	mov	sp, r7
 8001a52:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a56:	4770      	bx	lr
 8001a58:	e000ed00 	.word	0xe000ed00

08001a5c <__NVIC_EnableIRQ>:
 8001a5c:	b480      	push	{r7}
 8001a5e:	b083      	sub	sp, #12
 8001a60:	af00      	add	r7, sp, #0
 8001a62:	4603      	mov	r3, r0
 8001a64:	71fb      	strb	r3, [r7, #7]
 8001a66:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001a6a:	2b00      	cmp	r3, #0
 8001a6c:	db0b      	blt.n	8001a86 <__NVIC_EnableIRQ+0x2a>
 8001a6e:	79fb      	ldrb	r3, [r7, #7]
 8001a70:	f003 021f 	and.w	r2, r3, #31
 8001a74:	4907      	ldr	r1, [pc, #28]	; (8001a94 <__NVIC_EnableIRQ+0x38>)
 8001a76:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001a7a:	095b      	lsrs	r3, r3, #5
 8001a7c:	2001      	movs	r0, #1
 8001a7e:	fa00 f202 	lsl.w	r2, r0, r2
 8001a82:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001a86:	bf00      	nop
 8001a88:	370c      	adds	r7, #12
 8001a8a:	46bd      	mov	sp, r7
 8001a8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a90:	4770      	bx	lr
 8001a92:	bf00      	nop
 8001a94:	e000e100 	.word	0xe000e100

08001a98 <__NVIC_SetPriority>:
 8001a98:	b480      	push	{r7}
 8001a9a:	b083      	sub	sp, #12
 8001a9c:	af00      	add	r7, sp, #0
 8001a9e:	4603      	mov	r3, r0
 8001aa0:	6039      	str	r1, [r7, #0]
 8001aa2:	71fb      	strb	r3, [r7, #7]
 8001aa4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001aa8:	2b00      	cmp	r3, #0
 8001aaa:	db0a      	blt.n	8001ac2 <__NVIC_SetPriority+0x2a>
 8001aac:	683b      	ldr	r3, [r7, #0]
 8001aae:	b2da      	uxtb	r2, r3
 8001ab0:	490c      	ldr	r1, [pc, #48]	; (8001ae4 <__NVIC_SetPriority+0x4c>)
 8001ab2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001ab6:	0112      	lsls	r2, r2, #4
 8001ab8:	b2d2      	uxtb	r2, r2
 8001aba:	440b      	add	r3, r1
 8001abc:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8001ac0:	e00a      	b.n	8001ad8 <__NVIC_SetPriority+0x40>
 8001ac2:	683b      	ldr	r3, [r7, #0]
 8001ac4:	b2da      	uxtb	r2, r3
 8001ac6:	4908      	ldr	r1, [pc, #32]	; (8001ae8 <__NVIC_SetPriority+0x50>)
 8001ac8:	79fb      	ldrb	r3, [r7, #7]
 8001aca:	f003 030f 	and.w	r3, r3, #15
 8001ace:	3b04      	subs	r3, #4
 8001ad0:	0112      	lsls	r2, r2, #4
 8001ad2:	b2d2      	uxtb	r2, r2
 8001ad4:	440b      	add	r3, r1
 8001ad6:	761a      	strb	r2, [r3, #24]
 8001ad8:	bf00      	nop
 8001ada:	370c      	adds	r7, #12
 8001adc:	46bd      	mov	sp, r7
 8001ade:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ae2:	4770      	bx	lr
 8001ae4:	e000e100 	.word	0xe000e100
 8001ae8:	e000ed00 	.word	0xe000ed00

08001aec <NVIC_EncodePriority>:
 8001aec:	b480      	push	{r7}
 8001aee:	b089      	sub	sp, #36	; 0x24
 8001af0:	af00      	add	r7, sp, #0
 8001af2:	60f8      	str	r0, [r7, #12]
 8001af4:	60b9      	str	r1, [r7, #8]
 8001af6:	607a      	str	r2, [r7, #4]
 8001af8:	68fb      	ldr	r3, [r7, #12]
 8001afa:	f003 0307 	and.w	r3, r3, #7
 8001afe:	61fb      	str	r3, [r7, #28]
 8001b00:	69fb      	ldr	r3, [r7, #28]
 8001b02:	f1c3 0307 	rsb	r3, r3, #7
 8001b06:	2b04      	cmp	r3, #4
 8001b08:	bf28      	it	cs
 8001b0a:	2304      	movcs	r3, #4
 8001b0c:	61bb      	str	r3, [r7, #24]
 8001b0e:	69fb      	ldr	r3, [r7, #28]
 8001b10:	3304      	adds	r3, #4
 8001b12:	2b06      	cmp	r3, #6
 8001b14:	d902      	bls.n	8001b1c <NVIC_EncodePriority+0x30>
 8001b16:	69fb      	ldr	r3, [r7, #28]
 8001b18:	3b03      	subs	r3, #3
 8001b1a:	e000      	b.n	8001b1e <NVIC_EncodePriority+0x32>
 8001b1c:	2300      	movs	r3, #0
 8001b1e:	617b      	str	r3, [r7, #20]
 8001b20:	f04f 32ff 	mov.w	r2, #4294967295
 8001b24:	69bb      	ldr	r3, [r7, #24]
 8001b26:	fa02 f303 	lsl.w	r3, r2, r3
 8001b2a:	43da      	mvns	r2, r3
 8001b2c:	68bb      	ldr	r3, [r7, #8]
 8001b2e:	401a      	ands	r2, r3
 8001b30:	697b      	ldr	r3, [r7, #20]
 8001b32:	409a      	lsls	r2, r3
 8001b34:	f04f 31ff 	mov.w	r1, #4294967295
 8001b38:	697b      	ldr	r3, [r7, #20]
 8001b3a:	fa01 f303 	lsl.w	r3, r1, r3
 8001b3e:	43d9      	mvns	r1, r3
 8001b40:	687b      	ldr	r3, [r7, #4]
 8001b42:	400b      	ands	r3, r1
 8001b44:	4313      	orrs	r3, r2
 8001b46:	4618      	mov	r0, r3
 8001b48:	3724      	adds	r7, #36	; 0x24
 8001b4a:	46bd      	mov	sp, r7
 8001b4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b50:	4770      	bx	lr
	...

08001b54 <SysTick_Config>:
 8001b54:	b580      	push	{r7, lr}
 8001b56:	b082      	sub	sp, #8
 8001b58:	af00      	add	r7, sp, #0
 8001b5a:	6078      	str	r0, [r7, #4]
 8001b5c:	687b      	ldr	r3, [r7, #4]
 8001b5e:	3b01      	subs	r3, #1
 8001b60:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8001b64:	d301      	bcc.n	8001b6a <SysTick_Config+0x16>
 8001b66:	2301      	movs	r3, #1
 8001b68:	e00f      	b.n	8001b8a <SysTick_Config+0x36>
 8001b6a:	4a0a      	ldr	r2, [pc, #40]	; (8001b94 <SysTick_Config+0x40>)
 8001b6c:	687b      	ldr	r3, [r7, #4]
 8001b6e:	3b01      	subs	r3, #1
 8001b70:	6053      	str	r3, [r2, #4]
 8001b72:	210f      	movs	r1, #15
 8001b74:	f04f 30ff 	mov.w	r0, #4294967295
 8001b78:	f7ff ff8e 	bl	8001a98 <__NVIC_SetPriority>
 8001b7c:	4b05      	ldr	r3, [pc, #20]	; (8001b94 <SysTick_Config+0x40>)
 8001b7e:	2200      	movs	r2, #0
 8001b80:	609a      	str	r2, [r3, #8]
 8001b82:	4b04      	ldr	r3, [pc, #16]	; (8001b94 <SysTick_Config+0x40>)
 8001b84:	2207      	movs	r2, #7
 8001b86:	601a      	str	r2, [r3, #0]
 8001b88:	2300      	movs	r3, #0
 8001b8a:	4618      	mov	r0, r3
 8001b8c:	3708      	adds	r7, #8
 8001b8e:	46bd      	mov	sp, r7
 8001b90:	bd80      	pop	{r7, pc}
 8001b92:	bf00      	nop
 8001b94:	e000e010 	.word	0xe000e010

08001b98 <HAL_NVIC_SetPriorityGrouping>:
 8001b98:	b580      	push	{r7, lr}
 8001b9a:	b082      	sub	sp, #8
 8001b9c:	af00      	add	r7, sp, #0
 8001b9e:	6078      	str	r0, [r7, #4]
 8001ba0:	6878      	ldr	r0, [r7, #4]
 8001ba2:	f7ff ff29 	bl	80019f8 <__NVIC_SetPriorityGrouping>
 8001ba6:	bf00      	nop
 8001ba8:	3708      	adds	r7, #8
 8001baa:	46bd      	mov	sp, r7
 8001bac:	bd80      	pop	{r7, pc}

08001bae <HAL_NVIC_SetPriority>:
 8001bae:	b580      	push	{r7, lr}
 8001bb0:	b086      	sub	sp, #24
 8001bb2:	af00      	add	r7, sp, #0
 8001bb4:	4603      	mov	r3, r0
 8001bb6:	60b9      	str	r1, [r7, #8]
 8001bb8:	607a      	str	r2, [r7, #4]
 8001bba:	73fb      	strb	r3, [r7, #15]
 8001bbc:	2300      	movs	r3, #0
 8001bbe:	617b      	str	r3, [r7, #20]
 8001bc0:	f7ff ff3e 	bl	8001a40 <__NVIC_GetPriorityGrouping>
 8001bc4:	6178      	str	r0, [r7, #20]
 8001bc6:	687a      	ldr	r2, [r7, #4]
 8001bc8:	68b9      	ldr	r1, [r7, #8]
 8001bca:	6978      	ldr	r0, [r7, #20]
 8001bcc:	f7ff ff8e 	bl	8001aec <NVIC_EncodePriority>
 8001bd0:	4602      	mov	r2, r0
 8001bd2:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001bd6:	4611      	mov	r1, r2
 8001bd8:	4618      	mov	r0, r3
 8001bda:	f7ff ff5d 	bl	8001a98 <__NVIC_SetPriority>
 8001bde:	bf00      	nop
 8001be0:	3718      	adds	r7, #24
 8001be2:	46bd      	mov	sp, r7
 8001be4:	bd80      	pop	{r7, pc}

08001be6 <HAL_NVIC_EnableIRQ>:
 8001be6:	b580      	push	{r7, lr}
 8001be8:	b082      	sub	sp, #8
 8001bea:	af00      	add	r7, sp, #0
 8001bec:	4603      	mov	r3, r0
 8001bee:	71fb      	strb	r3, [r7, #7]
 8001bf0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001bf4:	4618      	mov	r0, r3
 8001bf6:	f7ff ff31 	bl	8001a5c <__NVIC_EnableIRQ>
 8001bfa:	bf00      	nop
 8001bfc:	3708      	adds	r7, #8
 8001bfe:	46bd      	mov	sp, r7
 8001c00:	bd80      	pop	{r7, pc}

08001c02 <HAL_SYSTICK_Config>:
 8001c02:	b580      	push	{r7, lr}
 8001c04:	b082      	sub	sp, #8
 8001c06:	af00      	add	r7, sp, #0
 8001c08:	6078      	str	r0, [r7, #4]
 8001c0a:	6878      	ldr	r0, [r7, #4]
 8001c0c:	f7ff ffa2 	bl	8001b54 <SysTick_Config>
 8001c10:	4603      	mov	r3, r0
 8001c12:	4618      	mov	r0, r3
 8001c14:	3708      	adds	r7, #8
 8001c16:	46bd      	mov	sp, r7
 8001c18:	bd80      	pop	{r7, pc}

08001c1a <HAL_DMA_Abort>:
 8001c1a:	b580      	push	{r7, lr}
 8001c1c:	b084      	sub	sp, #16
 8001c1e:	af00      	add	r7, sp, #0
 8001c20:	6078      	str	r0, [r7, #4]
 8001c22:	687b      	ldr	r3, [r7, #4]
 8001c24:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8001c26:	60fb      	str	r3, [r7, #12]
 8001c28:	f7ff feda 	bl	80019e0 <HAL_GetTick>
 8001c2c:	60b8      	str	r0, [r7, #8]
 8001c2e:	687b      	ldr	r3, [r7, #4]
 8001c30:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8001c34:	b2db      	uxtb	r3, r3
 8001c36:	2b02      	cmp	r3, #2
 8001c38:	d008      	beq.n	8001c4c <HAL_DMA_Abort+0x32>
 8001c3a:	687b      	ldr	r3, [r7, #4]
 8001c3c:	2280      	movs	r2, #128	; 0x80
 8001c3e:	655a      	str	r2, [r3, #84]	; 0x54
 8001c40:	687b      	ldr	r3, [r7, #4]
 8001c42:	2200      	movs	r2, #0
 8001c44:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8001c48:	2301      	movs	r3, #1
 8001c4a:	e052      	b.n	8001cf2 <HAL_DMA_Abort+0xd8>
 8001c4c:	687b      	ldr	r3, [r7, #4]
 8001c4e:	681b      	ldr	r3, [r3, #0]
 8001c50:	681a      	ldr	r2, [r3, #0]
 8001c52:	687b      	ldr	r3, [r7, #4]
 8001c54:	681b      	ldr	r3, [r3, #0]
 8001c56:	f022 0216 	bic.w	r2, r2, #22
 8001c5a:	601a      	str	r2, [r3, #0]
 8001c5c:	687b      	ldr	r3, [r7, #4]
 8001c5e:	681b      	ldr	r3, [r3, #0]
 8001c60:	695a      	ldr	r2, [r3, #20]
 8001c62:	687b      	ldr	r3, [r7, #4]
 8001c64:	681b      	ldr	r3, [r3, #0]
 8001c66:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8001c6a:	615a      	str	r2, [r3, #20]
 8001c6c:	687b      	ldr	r3, [r7, #4]
 8001c6e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001c70:	2b00      	cmp	r3, #0
 8001c72:	d103      	bne.n	8001c7c <HAL_DMA_Abort+0x62>
 8001c74:	687b      	ldr	r3, [r7, #4]
 8001c76:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8001c78:	2b00      	cmp	r3, #0
 8001c7a:	d007      	beq.n	8001c8c <HAL_DMA_Abort+0x72>
 8001c7c:	687b      	ldr	r3, [r7, #4]
 8001c7e:	681b      	ldr	r3, [r3, #0]
 8001c80:	681a      	ldr	r2, [r3, #0]
 8001c82:	687b      	ldr	r3, [r7, #4]
 8001c84:	681b      	ldr	r3, [r3, #0]
 8001c86:	f022 0208 	bic.w	r2, r2, #8
 8001c8a:	601a      	str	r2, [r3, #0]
 8001c8c:	687b      	ldr	r3, [r7, #4]
 8001c8e:	681b      	ldr	r3, [r3, #0]
 8001c90:	681a      	ldr	r2, [r3, #0]
 8001c92:	687b      	ldr	r3, [r7, #4]
 8001c94:	681b      	ldr	r3, [r3, #0]
 8001c96:	f022 0201 	bic.w	r2, r2, #1
 8001c9a:	601a      	str	r2, [r3, #0]
 8001c9c:	e013      	b.n	8001cc6 <HAL_DMA_Abort+0xac>
 8001c9e:	f7ff fe9f 	bl	80019e0 <HAL_GetTick>
 8001ca2:	4602      	mov	r2, r0
 8001ca4:	68bb      	ldr	r3, [r7, #8]
 8001ca6:	1ad3      	subs	r3, r2, r3
 8001ca8:	2b05      	cmp	r3, #5
 8001caa:	d90c      	bls.n	8001cc6 <HAL_DMA_Abort+0xac>
 8001cac:	687b      	ldr	r3, [r7, #4]
 8001cae:	2220      	movs	r2, #32
 8001cb0:	655a      	str	r2, [r3, #84]	; 0x54
 8001cb2:	687b      	ldr	r3, [r7, #4]
 8001cb4:	2200      	movs	r2, #0
 8001cb6:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8001cba:	687b      	ldr	r3, [r7, #4]
 8001cbc:	2203      	movs	r2, #3
 8001cbe:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8001cc2:	2303      	movs	r3, #3
 8001cc4:	e015      	b.n	8001cf2 <HAL_DMA_Abort+0xd8>
 8001cc6:	687b      	ldr	r3, [r7, #4]
 8001cc8:	681b      	ldr	r3, [r3, #0]
 8001cca:	681b      	ldr	r3, [r3, #0]
 8001ccc:	f003 0301 	and.w	r3, r3, #1
 8001cd0:	2b00      	cmp	r3, #0
 8001cd2:	d1e4      	bne.n	8001c9e <HAL_DMA_Abort+0x84>
 8001cd4:	687b      	ldr	r3, [r7, #4]
 8001cd6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8001cd8:	223f      	movs	r2, #63	; 0x3f
 8001cda:	409a      	lsls	r2, r3
 8001cdc:	68fb      	ldr	r3, [r7, #12]
 8001cde:	609a      	str	r2, [r3, #8]
 8001ce0:	687b      	ldr	r3, [r7, #4]
 8001ce2:	2200      	movs	r2, #0
 8001ce4:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8001ce8:	687b      	ldr	r3, [r7, #4]
 8001cea:	2201      	movs	r2, #1
 8001cec:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8001cf0:	2300      	movs	r3, #0
 8001cf2:	4618      	mov	r0, r3
 8001cf4:	3710      	adds	r7, #16
 8001cf6:	46bd      	mov	sp, r7
 8001cf8:	bd80      	pop	{r7, pc}

08001cfa <HAL_DMA_Abort_IT>:
 8001cfa:	b480      	push	{r7}
 8001cfc:	b083      	sub	sp, #12
 8001cfe:	af00      	add	r7, sp, #0
 8001d00:	6078      	str	r0, [r7, #4]
 8001d02:	687b      	ldr	r3, [r7, #4]
 8001d04:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8001d08:	b2db      	uxtb	r3, r3
 8001d0a:	2b02      	cmp	r3, #2
 8001d0c:	d004      	beq.n	8001d18 <HAL_DMA_Abort_IT+0x1e>
 8001d0e:	687b      	ldr	r3, [r7, #4]
 8001d10:	2280      	movs	r2, #128	; 0x80
 8001d12:	655a      	str	r2, [r3, #84]	; 0x54
 8001d14:	2301      	movs	r3, #1
 8001d16:	e00c      	b.n	8001d32 <HAL_DMA_Abort_IT+0x38>
 8001d18:	687b      	ldr	r3, [r7, #4]
 8001d1a:	2205      	movs	r2, #5
 8001d1c:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8001d20:	687b      	ldr	r3, [r7, #4]
 8001d22:	681b      	ldr	r3, [r3, #0]
 8001d24:	681a      	ldr	r2, [r3, #0]
 8001d26:	687b      	ldr	r3, [r7, #4]
 8001d28:	681b      	ldr	r3, [r3, #0]
 8001d2a:	f022 0201 	bic.w	r2, r2, #1
 8001d2e:	601a      	str	r2, [r3, #0]
 8001d30:	2300      	movs	r3, #0
 8001d32:	4618      	mov	r0, r3
 8001d34:	370c      	adds	r7, #12
 8001d36:	46bd      	mov	sp, r7
 8001d38:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d3c:	4770      	bx	lr
	...

08001d40 <HAL_GPIO_Init>:
 8001d40:	b480      	push	{r7}
 8001d42:	b089      	sub	sp, #36	; 0x24
 8001d44:	af00      	add	r7, sp, #0
 8001d46:	6078      	str	r0, [r7, #4]
 8001d48:	6039      	str	r1, [r7, #0]
 8001d4a:	2300      	movs	r3, #0
 8001d4c:	617b      	str	r3, [r7, #20]
 8001d4e:	2300      	movs	r3, #0
 8001d50:	613b      	str	r3, [r7, #16]
 8001d52:	2300      	movs	r3, #0
 8001d54:	61bb      	str	r3, [r7, #24]
 8001d56:	2300      	movs	r3, #0
 8001d58:	61fb      	str	r3, [r7, #28]
 8001d5a:	e159      	b.n	8002010 <HAL_GPIO_Init+0x2d0>
 8001d5c:	2201      	movs	r2, #1
 8001d5e:	69fb      	ldr	r3, [r7, #28]
 8001d60:	fa02 f303 	lsl.w	r3, r2, r3
 8001d64:	617b      	str	r3, [r7, #20]
 8001d66:	683b      	ldr	r3, [r7, #0]
 8001d68:	681b      	ldr	r3, [r3, #0]
 8001d6a:	697a      	ldr	r2, [r7, #20]
 8001d6c:	4013      	ands	r3, r2
 8001d6e:	613b      	str	r3, [r7, #16]
 8001d70:	693a      	ldr	r2, [r7, #16]
 8001d72:	697b      	ldr	r3, [r7, #20]
 8001d74:	429a      	cmp	r2, r3
 8001d76:	f040 8148 	bne.w	800200a <HAL_GPIO_Init+0x2ca>
 8001d7a:	683b      	ldr	r3, [r7, #0]
 8001d7c:	685b      	ldr	r3, [r3, #4]
 8001d7e:	f003 0303 	and.w	r3, r3, #3
 8001d82:	2b01      	cmp	r3, #1
 8001d84:	d005      	beq.n	8001d92 <HAL_GPIO_Init+0x52>
 8001d86:	683b      	ldr	r3, [r7, #0]
 8001d88:	685b      	ldr	r3, [r3, #4]
 8001d8a:	f003 0303 	and.w	r3, r3, #3
 8001d8e:	2b02      	cmp	r3, #2
 8001d90:	d130      	bne.n	8001df4 <HAL_GPIO_Init+0xb4>
 8001d92:	687b      	ldr	r3, [r7, #4]
 8001d94:	689b      	ldr	r3, [r3, #8]
 8001d96:	61bb      	str	r3, [r7, #24]
 8001d98:	69fb      	ldr	r3, [r7, #28]
 8001d9a:	005b      	lsls	r3, r3, #1
 8001d9c:	2203      	movs	r2, #3
 8001d9e:	fa02 f303 	lsl.w	r3, r2, r3
 8001da2:	43db      	mvns	r3, r3
 8001da4:	69ba      	ldr	r2, [r7, #24]
 8001da6:	4013      	ands	r3, r2
 8001da8:	61bb      	str	r3, [r7, #24]
 8001daa:	683b      	ldr	r3, [r7, #0]
 8001dac:	68da      	ldr	r2, [r3, #12]
 8001dae:	69fb      	ldr	r3, [r7, #28]
 8001db0:	005b      	lsls	r3, r3, #1
 8001db2:	fa02 f303 	lsl.w	r3, r2, r3
 8001db6:	69ba      	ldr	r2, [r7, #24]
 8001db8:	4313      	orrs	r3, r2
 8001dba:	61bb      	str	r3, [r7, #24]
 8001dbc:	687b      	ldr	r3, [r7, #4]
 8001dbe:	69ba      	ldr	r2, [r7, #24]
 8001dc0:	609a      	str	r2, [r3, #8]
 8001dc2:	687b      	ldr	r3, [r7, #4]
 8001dc4:	685b      	ldr	r3, [r3, #4]
 8001dc6:	61bb      	str	r3, [r7, #24]
 8001dc8:	2201      	movs	r2, #1
 8001dca:	69fb      	ldr	r3, [r7, #28]
 8001dcc:	fa02 f303 	lsl.w	r3, r2, r3
 8001dd0:	43db      	mvns	r3, r3
 8001dd2:	69ba      	ldr	r2, [r7, #24]
 8001dd4:	4013      	ands	r3, r2
 8001dd6:	61bb      	str	r3, [r7, #24]
 8001dd8:	683b      	ldr	r3, [r7, #0]
 8001dda:	685b      	ldr	r3, [r3, #4]
 8001ddc:	091b      	lsrs	r3, r3, #4
 8001dde:	f003 0201 	and.w	r2, r3, #1
 8001de2:	69fb      	ldr	r3, [r7, #28]
 8001de4:	fa02 f303 	lsl.w	r3, r2, r3
 8001de8:	69ba      	ldr	r2, [r7, #24]
 8001dea:	4313      	orrs	r3, r2
 8001dec:	61bb      	str	r3, [r7, #24]
 8001dee:	687b      	ldr	r3, [r7, #4]
 8001df0:	69ba      	ldr	r2, [r7, #24]
 8001df2:	605a      	str	r2, [r3, #4]
 8001df4:	683b      	ldr	r3, [r7, #0]
 8001df6:	685b      	ldr	r3, [r3, #4]
 8001df8:	f003 0303 	and.w	r3, r3, #3
 8001dfc:	2b03      	cmp	r3, #3
 8001dfe:	d017      	beq.n	8001e30 <HAL_GPIO_Init+0xf0>
 8001e00:	687b      	ldr	r3, [r7, #4]
 8001e02:	68db      	ldr	r3, [r3, #12]
 8001e04:	61bb      	str	r3, [r7, #24]
 8001e06:	69fb      	ldr	r3, [r7, #28]
 8001e08:	005b      	lsls	r3, r3, #1
 8001e0a:	2203      	movs	r2, #3
 8001e0c:	fa02 f303 	lsl.w	r3, r2, r3
 8001e10:	43db      	mvns	r3, r3
 8001e12:	69ba      	ldr	r2, [r7, #24]
 8001e14:	4013      	ands	r3, r2
 8001e16:	61bb      	str	r3, [r7, #24]
 8001e18:	683b      	ldr	r3, [r7, #0]
 8001e1a:	689a      	ldr	r2, [r3, #8]
 8001e1c:	69fb      	ldr	r3, [r7, #28]
 8001e1e:	005b      	lsls	r3, r3, #1
 8001e20:	fa02 f303 	lsl.w	r3, r2, r3
 8001e24:	69ba      	ldr	r2, [r7, #24]
 8001e26:	4313      	orrs	r3, r2
 8001e28:	61bb      	str	r3, [r7, #24]
 8001e2a:	687b      	ldr	r3, [r7, #4]
 8001e2c:	69ba      	ldr	r2, [r7, #24]
 8001e2e:	60da      	str	r2, [r3, #12]
 8001e30:	683b      	ldr	r3, [r7, #0]
 8001e32:	685b      	ldr	r3, [r3, #4]
 8001e34:	f003 0303 	and.w	r3, r3, #3
 8001e38:	2b02      	cmp	r3, #2
 8001e3a:	d123      	bne.n	8001e84 <HAL_GPIO_Init+0x144>
 8001e3c:	69fb      	ldr	r3, [r7, #28]
 8001e3e:	08da      	lsrs	r2, r3, #3
 8001e40:	687b      	ldr	r3, [r7, #4]
 8001e42:	3208      	adds	r2, #8
 8001e44:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001e48:	61bb      	str	r3, [r7, #24]
 8001e4a:	69fb      	ldr	r3, [r7, #28]
 8001e4c:	f003 0307 	and.w	r3, r3, #7
 8001e50:	009b      	lsls	r3, r3, #2
 8001e52:	220f      	movs	r2, #15
 8001e54:	fa02 f303 	lsl.w	r3, r2, r3
 8001e58:	43db      	mvns	r3, r3
 8001e5a:	69ba      	ldr	r2, [r7, #24]
 8001e5c:	4013      	ands	r3, r2
 8001e5e:	61bb      	str	r3, [r7, #24]
 8001e60:	683b      	ldr	r3, [r7, #0]
 8001e62:	691a      	ldr	r2, [r3, #16]
 8001e64:	69fb      	ldr	r3, [r7, #28]
 8001e66:	f003 0307 	and.w	r3, r3, #7
 8001e6a:	009b      	lsls	r3, r3, #2
 8001e6c:	fa02 f303 	lsl.w	r3, r2, r3
 8001e70:	69ba      	ldr	r2, [r7, #24]
 8001e72:	4313      	orrs	r3, r2
 8001e74:	61bb      	str	r3, [r7, #24]
 8001e76:	69fb      	ldr	r3, [r7, #28]
 8001e78:	08da      	lsrs	r2, r3, #3
 8001e7a:	687b      	ldr	r3, [r7, #4]
 8001e7c:	3208      	adds	r2, #8
 8001e7e:	69b9      	ldr	r1, [r7, #24]
 8001e80:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8001e84:	687b      	ldr	r3, [r7, #4]
 8001e86:	681b      	ldr	r3, [r3, #0]
 8001e88:	61bb      	str	r3, [r7, #24]
 8001e8a:	69fb      	ldr	r3, [r7, #28]
 8001e8c:	005b      	lsls	r3, r3, #1
 8001e8e:	2203      	movs	r2, #3
 8001e90:	fa02 f303 	lsl.w	r3, r2, r3
 8001e94:	43db      	mvns	r3, r3
 8001e96:	69ba      	ldr	r2, [r7, #24]
 8001e98:	4013      	ands	r3, r2
 8001e9a:	61bb      	str	r3, [r7, #24]
 8001e9c:	683b      	ldr	r3, [r7, #0]
 8001e9e:	685b      	ldr	r3, [r3, #4]
 8001ea0:	f003 0203 	and.w	r2, r3, #3
 8001ea4:	69fb      	ldr	r3, [r7, #28]
 8001ea6:	005b      	lsls	r3, r3, #1
 8001ea8:	fa02 f303 	lsl.w	r3, r2, r3
 8001eac:	69ba      	ldr	r2, [r7, #24]
 8001eae:	4313      	orrs	r3, r2
 8001eb0:	61bb      	str	r3, [r7, #24]
 8001eb2:	687b      	ldr	r3, [r7, #4]
 8001eb4:	69ba      	ldr	r2, [r7, #24]
 8001eb6:	601a      	str	r2, [r3, #0]
 8001eb8:	683b      	ldr	r3, [r7, #0]
 8001eba:	685b      	ldr	r3, [r3, #4]
 8001ebc:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001ec0:	2b00      	cmp	r3, #0
 8001ec2:	f000 80a2 	beq.w	800200a <HAL_GPIO_Init+0x2ca>
 8001ec6:	2300      	movs	r3, #0
 8001ec8:	60fb      	str	r3, [r7, #12]
 8001eca:	4b57      	ldr	r3, [pc, #348]	; (8002028 <HAL_GPIO_Init+0x2e8>)
 8001ecc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001ece:	4a56      	ldr	r2, [pc, #344]	; (8002028 <HAL_GPIO_Init+0x2e8>)
 8001ed0:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001ed4:	6453      	str	r3, [r2, #68]	; 0x44
 8001ed6:	4b54      	ldr	r3, [pc, #336]	; (8002028 <HAL_GPIO_Init+0x2e8>)
 8001ed8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001eda:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8001ede:	60fb      	str	r3, [r7, #12]
 8001ee0:	68fb      	ldr	r3, [r7, #12]
 8001ee2:	4a52      	ldr	r2, [pc, #328]	; (800202c <HAL_GPIO_Init+0x2ec>)
 8001ee4:	69fb      	ldr	r3, [r7, #28]
 8001ee6:	089b      	lsrs	r3, r3, #2
 8001ee8:	3302      	adds	r3, #2
 8001eea:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001eee:	61bb      	str	r3, [r7, #24]
 8001ef0:	69fb      	ldr	r3, [r7, #28]
 8001ef2:	f003 0303 	and.w	r3, r3, #3
 8001ef6:	009b      	lsls	r3, r3, #2
 8001ef8:	220f      	movs	r2, #15
 8001efa:	fa02 f303 	lsl.w	r3, r2, r3
 8001efe:	43db      	mvns	r3, r3
 8001f00:	69ba      	ldr	r2, [r7, #24]
 8001f02:	4013      	ands	r3, r2
 8001f04:	61bb      	str	r3, [r7, #24]
 8001f06:	687b      	ldr	r3, [r7, #4]
 8001f08:	4a49      	ldr	r2, [pc, #292]	; (8002030 <HAL_GPIO_Init+0x2f0>)
 8001f0a:	4293      	cmp	r3, r2
 8001f0c:	d019      	beq.n	8001f42 <HAL_GPIO_Init+0x202>
 8001f0e:	687b      	ldr	r3, [r7, #4]
 8001f10:	4a48      	ldr	r2, [pc, #288]	; (8002034 <HAL_GPIO_Init+0x2f4>)
 8001f12:	4293      	cmp	r3, r2
 8001f14:	d013      	beq.n	8001f3e <HAL_GPIO_Init+0x1fe>
 8001f16:	687b      	ldr	r3, [r7, #4]
 8001f18:	4a47      	ldr	r2, [pc, #284]	; (8002038 <HAL_GPIO_Init+0x2f8>)
 8001f1a:	4293      	cmp	r3, r2
 8001f1c:	d00d      	beq.n	8001f3a <HAL_GPIO_Init+0x1fa>
 8001f1e:	687b      	ldr	r3, [r7, #4]
 8001f20:	4a46      	ldr	r2, [pc, #280]	; (800203c <HAL_GPIO_Init+0x2fc>)
 8001f22:	4293      	cmp	r3, r2
 8001f24:	d007      	beq.n	8001f36 <HAL_GPIO_Init+0x1f6>
 8001f26:	687b      	ldr	r3, [r7, #4]
 8001f28:	4a45      	ldr	r2, [pc, #276]	; (8002040 <HAL_GPIO_Init+0x300>)
 8001f2a:	4293      	cmp	r3, r2
 8001f2c:	d101      	bne.n	8001f32 <HAL_GPIO_Init+0x1f2>
 8001f2e:	2304      	movs	r3, #4
 8001f30:	e008      	b.n	8001f44 <HAL_GPIO_Init+0x204>
 8001f32:	2307      	movs	r3, #7
 8001f34:	e006      	b.n	8001f44 <HAL_GPIO_Init+0x204>
 8001f36:	2303      	movs	r3, #3
 8001f38:	e004      	b.n	8001f44 <HAL_GPIO_Init+0x204>
 8001f3a:	2302      	movs	r3, #2
 8001f3c:	e002      	b.n	8001f44 <HAL_GPIO_Init+0x204>
 8001f3e:	2301      	movs	r3, #1
 8001f40:	e000      	b.n	8001f44 <HAL_GPIO_Init+0x204>
 8001f42:	2300      	movs	r3, #0
 8001f44:	69fa      	ldr	r2, [r7, #28]
 8001f46:	f002 0203 	and.w	r2, r2, #3
 8001f4a:	0092      	lsls	r2, r2, #2
 8001f4c:	4093      	lsls	r3, r2
 8001f4e:	69ba      	ldr	r2, [r7, #24]
 8001f50:	4313      	orrs	r3, r2
 8001f52:	61bb      	str	r3, [r7, #24]
 8001f54:	4935      	ldr	r1, [pc, #212]	; (800202c <HAL_GPIO_Init+0x2ec>)
 8001f56:	69fb      	ldr	r3, [r7, #28]
 8001f58:	089b      	lsrs	r3, r3, #2
 8001f5a:	3302      	adds	r3, #2
 8001f5c:	69ba      	ldr	r2, [r7, #24]
 8001f5e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001f62:	4b38      	ldr	r3, [pc, #224]	; (8002044 <HAL_GPIO_Init+0x304>)
 8001f64:	681b      	ldr	r3, [r3, #0]
 8001f66:	61bb      	str	r3, [r7, #24]
 8001f68:	693b      	ldr	r3, [r7, #16]
 8001f6a:	43db      	mvns	r3, r3
 8001f6c:	69ba      	ldr	r2, [r7, #24]
 8001f6e:	4013      	ands	r3, r2
 8001f70:	61bb      	str	r3, [r7, #24]
 8001f72:	683b      	ldr	r3, [r7, #0]
 8001f74:	685b      	ldr	r3, [r3, #4]
 8001f76:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001f7a:	2b00      	cmp	r3, #0
 8001f7c:	d003      	beq.n	8001f86 <HAL_GPIO_Init+0x246>
 8001f7e:	69ba      	ldr	r2, [r7, #24]
 8001f80:	693b      	ldr	r3, [r7, #16]
 8001f82:	4313      	orrs	r3, r2
 8001f84:	61bb      	str	r3, [r7, #24]
 8001f86:	4a2f      	ldr	r2, [pc, #188]	; (8002044 <HAL_GPIO_Init+0x304>)
 8001f88:	69bb      	ldr	r3, [r7, #24]
 8001f8a:	6013      	str	r3, [r2, #0]
 8001f8c:	4b2d      	ldr	r3, [pc, #180]	; (8002044 <HAL_GPIO_Init+0x304>)
 8001f8e:	685b      	ldr	r3, [r3, #4]
 8001f90:	61bb      	str	r3, [r7, #24]
 8001f92:	693b      	ldr	r3, [r7, #16]
 8001f94:	43db      	mvns	r3, r3
 8001f96:	69ba      	ldr	r2, [r7, #24]
 8001f98:	4013      	ands	r3, r2
 8001f9a:	61bb      	str	r3, [r7, #24]
 8001f9c:	683b      	ldr	r3, [r7, #0]
 8001f9e:	685b      	ldr	r3, [r3, #4]
 8001fa0:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001fa4:	2b00      	cmp	r3, #0
 8001fa6:	d003      	beq.n	8001fb0 <HAL_GPIO_Init+0x270>
 8001fa8:	69ba      	ldr	r2, [r7, #24]
 8001faa:	693b      	ldr	r3, [r7, #16]
 8001fac:	4313      	orrs	r3, r2
 8001fae:	61bb      	str	r3, [r7, #24]
 8001fb0:	4a24      	ldr	r2, [pc, #144]	; (8002044 <HAL_GPIO_Init+0x304>)
 8001fb2:	69bb      	ldr	r3, [r7, #24]
 8001fb4:	6053      	str	r3, [r2, #4]
 8001fb6:	4b23      	ldr	r3, [pc, #140]	; (8002044 <HAL_GPIO_Init+0x304>)
 8001fb8:	689b      	ldr	r3, [r3, #8]
 8001fba:	61bb      	str	r3, [r7, #24]
 8001fbc:	693b      	ldr	r3, [r7, #16]
 8001fbe:	43db      	mvns	r3, r3
 8001fc0:	69ba      	ldr	r2, [r7, #24]
 8001fc2:	4013      	ands	r3, r2
 8001fc4:	61bb      	str	r3, [r7, #24]
 8001fc6:	683b      	ldr	r3, [r7, #0]
 8001fc8:	685b      	ldr	r3, [r3, #4]
 8001fca:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8001fce:	2b00      	cmp	r3, #0
 8001fd0:	d003      	beq.n	8001fda <HAL_GPIO_Init+0x29a>
 8001fd2:	69ba      	ldr	r2, [r7, #24]
 8001fd4:	693b      	ldr	r3, [r7, #16]
 8001fd6:	4313      	orrs	r3, r2
 8001fd8:	61bb      	str	r3, [r7, #24]
 8001fda:	4a1a      	ldr	r2, [pc, #104]	; (8002044 <HAL_GPIO_Init+0x304>)
 8001fdc:	69bb      	ldr	r3, [r7, #24]
 8001fde:	6093      	str	r3, [r2, #8]
 8001fe0:	4b18      	ldr	r3, [pc, #96]	; (8002044 <HAL_GPIO_Init+0x304>)
 8001fe2:	68db      	ldr	r3, [r3, #12]
 8001fe4:	61bb      	str	r3, [r7, #24]
 8001fe6:	693b      	ldr	r3, [r7, #16]
 8001fe8:	43db      	mvns	r3, r3
 8001fea:	69ba      	ldr	r2, [r7, #24]
 8001fec:	4013      	ands	r3, r2
 8001fee:	61bb      	str	r3, [r7, #24]
 8001ff0:	683b      	ldr	r3, [r7, #0]
 8001ff2:	685b      	ldr	r3, [r3, #4]
 8001ff4:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001ff8:	2b00      	cmp	r3, #0
 8001ffa:	d003      	beq.n	8002004 <HAL_GPIO_Init+0x2c4>
 8001ffc:	69ba      	ldr	r2, [r7, #24]
 8001ffe:	693b      	ldr	r3, [r7, #16]
 8002000:	4313      	orrs	r3, r2
 8002002:	61bb      	str	r3, [r7, #24]
 8002004:	4a0f      	ldr	r2, [pc, #60]	; (8002044 <HAL_GPIO_Init+0x304>)
 8002006:	69bb      	ldr	r3, [r7, #24]
 8002008:	60d3      	str	r3, [r2, #12]
 800200a:	69fb      	ldr	r3, [r7, #28]
 800200c:	3301      	adds	r3, #1
 800200e:	61fb      	str	r3, [r7, #28]
 8002010:	69fb      	ldr	r3, [r7, #28]
 8002012:	2b0f      	cmp	r3, #15
 8002014:	f67f aea2 	bls.w	8001d5c <HAL_GPIO_Init+0x1c>
 8002018:	bf00      	nop
 800201a:	bf00      	nop
 800201c:	3724      	adds	r7, #36	; 0x24
 800201e:	46bd      	mov	sp, r7
 8002020:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002024:	4770      	bx	lr
 8002026:	bf00      	nop
 8002028:	40023800 	.word	0x40023800
 800202c:	40013800 	.word	0x40013800
 8002030:	40020000 	.word	0x40020000
 8002034:	40020400 	.word	0x40020400
 8002038:	40020800 	.word	0x40020800
 800203c:	40020c00 	.word	0x40020c00
 8002040:	40021000 	.word	0x40021000
 8002044:	40013c00 	.word	0x40013c00

08002048 <HAL_GPIO_WritePin>:
 8002048:	b480      	push	{r7}
 800204a:	b083      	sub	sp, #12
 800204c:	af00      	add	r7, sp, #0
 800204e:	6078      	str	r0, [r7, #4]
 8002050:	460b      	mov	r3, r1
 8002052:	807b      	strh	r3, [r7, #2]
 8002054:	4613      	mov	r3, r2
 8002056:	707b      	strb	r3, [r7, #1]
 8002058:	787b      	ldrb	r3, [r7, #1]
 800205a:	2b00      	cmp	r3, #0
 800205c:	d003      	beq.n	8002066 <HAL_GPIO_WritePin+0x1e>
 800205e:	887a      	ldrh	r2, [r7, #2]
 8002060:	687b      	ldr	r3, [r7, #4]
 8002062:	619a      	str	r2, [r3, #24]
 8002064:	e003      	b.n	800206e <HAL_GPIO_WritePin+0x26>
 8002066:	887b      	ldrh	r3, [r7, #2]
 8002068:	041a      	lsls	r2, r3, #16
 800206a:	687b      	ldr	r3, [r7, #4]
 800206c:	619a      	str	r2, [r3, #24]
 800206e:	bf00      	nop
 8002070:	370c      	adds	r7, #12
 8002072:	46bd      	mov	sp, r7
 8002074:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002078:	4770      	bx	lr

0800207a <HAL_GPIO_TogglePin>:
 800207a:	b480      	push	{r7}
 800207c:	b085      	sub	sp, #20
 800207e:	af00      	add	r7, sp, #0
 8002080:	6078      	str	r0, [r7, #4]
 8002082:	460b      	mov	r3, r1
 8002084:	807b      	strh	r3, [r7, #2]
 8002086:	687b      	ldr	r3, [r7, #4]
 8002088:	695b      	ldr	r3, [r3, #20]
 800208a:	60fb      	str	r3, [r7, #12]
 800208c:	887a      	ldrh	r2, [r7, #2]
 800208e:	68fb      	ldr	r3, [r7, #12]
 8002090:	4013      	ands	r3, r2
 8002092:	041a      	lsls	r2, r3, #16
 8002094:	68fb      	ldr	r3, [r7, #12]
 8002096:	43d9      	mvns	r1, r3
 8002098:	887b      	ldrh	r3, [r7, #2]
 800209a:	400b      	ands	r3, r1
 800209c:	431a      	orrs	r2, r3
 800209e:	687b      	ldr	r3, [r7, #4]
 80020a0:	619a      	str	r2, [r3, #24]
 80020a2:	bf00      	nop
 80020a4:	3714      	adds	r7, #20
 80020a6:	46bd      	mov	sp, r7
 80020a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020ac:	4770      	bx	lr
	...

080020b0 <HAL_GPIO_EXTI_IRQHandler>:
 80020b0:	b580      	push	{r7, lr}
 80020b2:	b082      	sub	sp, #8
 80020b4:	af00      	add	r7, sp, #0
 80020b6:	4603      	mov	r3, r0
 80020b8:	80fb      	strh	r3, [r7, #6]
 80020ba:	4b08      	ldr	r3, [pc, #32]	; (80020dc <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 80020bc:	695a      	ldr	r2, [r3, #20]
 80020be:	88fb      	ldrh	r3, [r7, #6]
 80020c0:	4013      	ands	r3, r2
 80020c2:	2b00      	cmp	r3, #0
 80020c4:	d006      	beq.n	80020d4 <HAL_GPIO_EXTI_IRQHandler+0x24>
 80020c6:	4a05      	ldr	r2, [pc, #20]	; (80020dc <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 80020c8:	88fb      	ldrh	r3, [r7, #6]
 80020ca:	6153      	str	r3, [r2, #20]
 80020cc:	88fb      	ldrh	r3, [r7, #6]
 80020ce:	4618      	mov	r0, r3
 80020d0:	f7ff fa88 	bl	80015e4 <HAL_GPIO_EXTI_Callback>
 80020d4:	bf00      	nop
 80020d6:	3708      	adds	r7, #8
 80020d8:	46bd      	mov	sp, r7
 80020da:	bd80      	pop	{r7, pc}
 80020dc:	40013c00 	.word	0x40013c00

080020e0 <HAL_RCC_OscConfig>:
 80020e0:	b580      	push	{r7, lr}
 80020e2:	b086      	sub	sp, #24
 80020e4:	af00      	add	r7, sp, #0
 80020e6:	6078      	str	r0, [r7, #4]
 80020e8:	687b      	ldr	r3, [r7, #4]
 80020ea:	2b00      	cmp	r3, #0
 80020ec:	d101      	bne.n	80020f2 <HAL_RCC_OscConfig+0x12>
 80020ee:	2301      	movs	r3, #1
 80020f0:	e264      	b.n	80025bc <HAL_RCC_OscConfig+0x4dc>
 80020f2:	687b      	ldr	r3, [r7, #4]
 80020f4:	681b      	ldr	r3, [r3, #0]
 80020f6:	f003 0301 	and.w	r3, r3, #1
 80020fa:	2b00      	cmp	r3, #0
 80020fc:	d075      	beq.n	80021ea <HAL_RCC_OscConfig+0x10a>
 80020fe:	4ba3      	ldr	r3, [pc, #652]	; (800238c <HAL_RCC_OscConfig+0x2ac>)
 8002100:	689b      	ldr	r3, [r3, #8]
 8002102:	f003 030c 	and.w	r3, r3, #12
 8002106:	2b04      	cmp	r3, #4
 8002108:	d00c      	beq.n	8002124 <HAL_RCC_OscConfig+0x44>
 800210a:	4ba0      	ldr	r3, [pc, #640]	; (800238c <HAL_RCC_OscConfig+0x2ac>)
 800210c:	689b      	ldr	r3, [r3, #8]
 800210e:	f003 030c 	and.w	r3, r3, #12
 8002112:	2b08      	cmp	r3, #8
 8002114:	d112      	bne.n	800213c <HAL_RCC_OscConfig+0x5c>
 8002116:	4b9d      	ldr	r3, [pc, #628]	; (800238c <HAL_RCC_OscConfig+0x2ac>)
 8002118:	685b      	ldr	r3, [r3, #4]
 800211a:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800211e:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8002122:	d10b      	bne.n	800213c <HAL_RCC_OscConfig+0x5c>
 8002124:	4b99      	ldr	r3, [pc, #612]	; (800238c <HAL_RCC_OscConfig+0x2ac>)
 8002126:	681b      	ldr	r3, [r3, #0]
 8002128:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800212c:	2b00      	cmp	r3, #0
 800212e:	d05b      	beq.n	80021e8 <HAL_RCC_OscConfig+0x108>
 8002130:	687b      	ldr	r3, [r7, #4]
 8002132:	685b      	ldr	r3, [r3, #4]
 8002134:	2b00      	cmp	r3, #0
 8002136:	d157      	bne.n	80021e8 <HAL_RCC_OscConfig+0x108>
 8002138:	2301      	movs	r3, #1
 800213a:	e23f      	b.n	80025bc <HAL_RCC_OscConfig+0x4dc>
 800213c:	687b      	ldr	r3, [r7, #4]
 800213e:	685b      	ldr	r3, [r3, #4]
 8002140:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8002144:	d106      	bne.n	8002154 <HAL_RCC_OscConfig+0x74>
 8002146:	4b91      	ldr	r3, [pc, #580]	; (800238c <HAL_RCC_OscConfig+0x2ac>)
 8002148:	681b      	ldr	r3, [r3, #0]
 800214a:	4a90      	ldr	r2, [pc, #576]	; (800238c <HAL_RCC_OscConfig+0x2ac>)
 800214c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8002150:	6013      	str	r3, [r2, #0]
 8002152:	e01d      	b.n	8002190 <HAL_RCC_OscConfig+0xb0>
 8002154:	687b      	ldr	r3, [r7, #4]
 8002156:	685b      	ldr	r3, [r3, #4]
 8002158:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800215c:	d10c      	bne.n	8002178 <HAL_RCC_OscConfig+0x98>
 800215e:	4b8b      	ldr	r3, [pc, #556]	; (800238c <HAL_RCC_OscConfig+0x2ac>)
 8002160:	681b      	ldr	r3, [r3, #0]
 8002162:	4a8a      	ldr	r2, [pc, #552]	; (800238c <HAL_RCC_OscConfig+0x2ac>)
 8002164:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8002168:	6013      	str	r3, [r2, #0]
 800216a:	4b88      	ldr	r3, [pc, #544]	; (800238c <HAL_RCC_OscConfig+0x2ac>)
 800216c:	681b      	ldr	r3, [r3, #0]
 800216e:	4a87      	ldr	r2, [pc, #540]	; (800238c <HAL_RCC_OscConfig+0x2ac>)
 8002170:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8002174:	6013      	str	r3, [r2, #0]
 8002176:	e00b      	b.n	8002190 <HAL_RCC_OscConfig+0xb0>
 8002178:	4b84      	ldr	r3, [pc, #528]	; (800238c <HAL_RCC_OscConfig+0x2ac>)
 800217a:	681b      	ldr	r3, [r3, #0]
 800217c:	4a83      	ldr	r2, [pc, #524]	; (800238c <HAL_RCC_OscConfig+0x2ac>)
 800217e:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8002182:	6013      	str	r3, [r2, #0]
 8002184:	4b81      	ldr	r3, [pc, #516]	; (800238c <HAL_RCC_OscConfig+0x2ac>)
 8002186:	681b      	ldr	r3, [r3, #0]
 8002188:	4a80      	ldr	r2, [pc, #512]	; (800238c <HAL_RCC_OscConfig+0x2ac>)
 800218a:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800218e:	6013      	str	r3, [r2, #0]
 8002190:	687b      	ldr	r3, [r7, #4]
 8002192:	685b      	ldr	r3, [r3, #4]
 8002194:	2b00      	cmp	r3, #0
 8002196:	d013      	beq.n	80021c0 <HAL_RCC_OscConfig+0xe0>
 8002198:	f7ff fc22 	bl	80019e0 <HAL_GetTick>
 800219c:	6138      	str	r0, [r7, #16]
 800219e:	e008      	b.n	80021b2 <HAL_RCC_OscConfig+0xd2>
 80021a0:	f7ff fc1e 	bl	80019e0 <HAL_GetTick>
 80021a4:	4602      	mov	r2, r0
 80021a6:	693b      	ldr	r3, [r7, #16]
 80021a8:	1ad3      	subs	r3, r2, r3
 80021aa:	2b64      	cmp	r3, #100	; 0x64
 80021ac:	d901      	bls.n	80021b2 <HAL_RCC_OscConfig+0xd2>
 80021ae:	2303      	movs	r3, #3
 80021b0:	e204      	b.n	80025bc <HAL_RCC_OscConfig+0x4dc>
 80021b2:	4b76      	ldr	r3, [pc, #472]	; (800238c <HAL_RCC_OscConfig+0x2ac>)
 80021b4:	681b      	ldr	r3, [r3, #0]
 80021b6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80021ba:	2b00      	cmp	r3, #0
 80021bc:	d0f0      	beq.n	80021a0 <HAL_RCC_OscConfig+0xc0>
 80021be:	e014      	b.n	80021ea <HAL_RCC_OscConfig+0x10a>
 80021c0:	f7ff fc0e 	bl	80019e0 <HAL_GetTick>
 80021c4:	6138      	str	r0, [r7, #16]
 80021c6:	e008      	b.n	80021da <HAL_RCC_OscConfig+0xfa>
 80021c8:	f7ff fc0a 	bl	80019e0 <HAL_GetTick>
 80021cc:	4602      	mov	r2, r0
 80021ce:	693b      	ldr	r3, [r7, #16]
 80021d0:	1ad3      	subs	r3, r2, r3
 80021d2:	2b64      	cmp	r3, #100	; 0x64
 80021d4:	d901      	bls.n	80021da <HAL_RCC_OscConfig+0xfa>
 80021d6:	2303      	movs	r3, #3
 80021d8:	e1f0      	b.n	80025bc <HAL_RCC_OscConfig+0x4dc>
 80021da:	4b6c      	ldr	r3, [pc, #432]	; (800238c <HAL_RCC_OscConfig+0x2ac>)
 80021dc:	681b      	ldr	r3, [r3, #0]
 80021de:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80021e2:	2b00      	cmp	r3, #0
 80021e4:	d1f0      	bne.n	80021c8 <HAL_RCC_OscConfig+0xe8>
 80021e6:	e000      	b.n	80021ea <HAL_RCC_OscConfig+0x10a>
 80021e8:	bf00      	nop
 80021ea:	687b      	ldr	r3, [r7, #4]
 80021ec:	681b      	ldr	r3, [r3, #0]
 80021ee:	f003 0302 	and.w	r3, r3, #2
 80021f2:	2b00      	cmp	r3, #0
 80021f4:	d063      	beq.n	80022be <HAL_RCC_OscConfig+0x1de>
 80021f6:	4b65      	ldr	r3, [pc, #404]	; (800238c <HAL_RCC_OscConfig+0x2ac>)
 80021f8:	689b      	ldr	r3, [r3, #8]
 80021fa:	f003 030c 	and.w	r3, r3, #12
 80021fe:	2b00      	cmp	r3, #0
 8002200:	d00b      	beq.n	800221a <HAL_RCC_OscConfig+0x13a>
 8002202:	4b62      	ldr	r3, [pc, #392]	; (800238c <HAL_RCC_OscConfig+0x2ac>)
 8002204:	689b      	ldr	r3, [r3, #8]
 8002206:	f003 030c 	and.w	r3, r3, #12
 800220a:	2b08      	cmp	r3, #8
 800220c:	d11c      	bne.n	8002248 <HAL_RCC_OscConfig+0x168>
 800220e:	4b5f      	ldr	r3, [pc, #380]	; (800238c <HAL_RCC_OscConfig+0x2ac>)
 8002210:	685b      	ldr	r3, [r3, #4]
 8002212:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8002216:	2b00      	cmp	r3, #0
 8002218:	d116      	bne.n	8002248 <HAL_RCC_OscConfig+0x168>
 800221a:	4b5c      	ldr	r3, [pc, #368]	; (800238c <HAL_RCC_OscConfig+0x2ac>)
 800221c:	681b      	ldr	r3, [r3, #0]
 800221e:	f003 0302 	and.w	r3, r3, #2
 8002222:	2b00      	cmp	r3, #0
 8002224:	d005      	beq.n	8002232 <HAL_RCC_OscConfig+0x152>
 8002226:	687b      	ldr	r3, [r7, #4]
 8002228:	68db      	ldr	r3, [r3, #12]
 800222a:	2b01      	cmp	r3, #1
 800222c:	d001      	beq.n	8002232 <HAL_RCC_OscConfig+0x152>
 800222e:	2301      	movs	r3, #1
 8002230:	e1c4      	b.n	80025bc <HAL_RCC_OscConfig+0x4dc>
 8002232:	4b56      	ldr	r3, [pc, #344]	; (800238c <HAL_RCC_OscConfig+0x2ac>)
 8002234:	681b      	ldr	r3, [r3, #0]
 8002236:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800223a:	687b      	ldr	r3, [r7, #4]
 800223c:	691b      	ldr	r3, [r3, #16]
 800223e:	00db      	lsls	r3, r3, #3
 8002240:	4952      	ldr	r1, [pc, #328]	; (800238c <HAL_RCC_OscConfig+0x2ac>)
 8002242:	4313      	orrs	r3, r2
 8002244:	600b      	str	r3, [r1, #0]
 8002246:	e03a      	b.n	80022be <HAL_RCC_OscConfig+0x1de>
 8002248:	687b      	ldr	r3, [r7, #4]
 800224a:	68db      	ldr	r3, [r3, #12]
 800224c:	2b00      	cmp	r3, #0
 800224e:	d020      	beq.n	8002292 <HAL_RCC_OscConfig+0x1b2>
 8002250:	4b4f      	ldr	r3, [pc, #316]	; (8002390 <HAL_RCC_OscConfig+0x2b0>)
 8002252:	2201      	movs	r2, #1
 8002254:	601a      	str	r2, [r3, #0]
 8002256:	f7ff fbc3 	bl	80019e0 <HAL_GetTick>
 800225a:	6138      	str	r0, [r7, #16]
 800225c:	e008      	b.n	8002270 <HAL_RCC_OscConfig+0x190>
 800225e:	f7ff fbbf 	bl	80019e0 <HAL_GetTick>
 8002262:	4602      	mov	r2, r0
 8002264:	693b      	ldr	r3, [r7, #16]
 8002266:	1ad3      	subs	r3, r2, r3
 8002268:	2b02      	cmp	r3, #2
 800226a:	d901      	bls.n	8002270 <HAL_RCC_OscConfig+0x190>
 800226c:	2303      	movs	r3, #3
 800226e:	e1a5      	b.n	80025bc <HAL_RCC_OscConfig+0x4dc>
 8002270:	4b46      	ldr	r3, [pc, #280]	; (800238c <HAL_RCC_OscConfig+0x2ac>)
 8002272:	681b      	ldr	r3, [r3, #0]
 8002274:	f003 0302 	and.w	r3, r3, #2
 8002278:	2b00      	cmp	r3, #0
 800227a:	d0f0      	beq.n	800225e <HAL_RCC_OscConfig+0x17e>
 800227c:	4b43      	ldr	r3, [pc, #268]	; (800238c <HAL_RCC_OscConfig+0x2ac>)
 800227e:	681b      	ldr	r3, [r3, #0]
 8002280:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8002284:	687b      	ldr	r3, [r7, #4]
 8002286:	691b      	ldr	r3, [r3, #16]
 8002288:	00db      	lsls	r3, r3, #3
 800228a:	4940      	ldr	r1, [pc, #256]	; (800238c <HAL_RCC_OscConfig+0x2ac>)
 800228c:	4313      	orrs	r3, r2
 800228e:	600b      	str	r3, [r1, #0]
 8002290:	e015      	b.n	80022be <HAL_RCC_OscConfig+0x1de>
 8002292:	4b3f      	ldr	r3, [pc, #252]	; (8002390 <HAL_RCC_OscConfig+0x2b0>)
 8002294:	2200      	movs	r2, #0
 8002296:	601a      	str	r2, [r3, #0]
 8002298:	f7ff fba2 	bl	80019e0 <HAL_GetTick>
 800229c:	6138      	str	r0, [r7, #16]
 800229e:	e008      	b.n	80022b2 <HAL_RCC_OscConfig+0x1d2>
 80022a0:	f7ff fb9e 	bl	80019e0 <HAL_GetTick>
 80022a4:	4602      	mov	r2, r0
 80022a6:	693b      	ldr	r3, [r7, #16]
 80022a8:	1ad3      	subs	r3, r2, r3
 80022aa:	2b02      	cmp	r3, #2
 80022ac:	d901      	bls.n	80022b2 <HAL_RCC_OscConfig+0x1d2>
 80022ae:	2303      	movs	r3, #3
 80022b0:	e184      	b.n	80025bc <HAL_RCC_OscConfig+0x4dc>
 80022b2:	4b36      	ldr	r3, [pc, #216]	; (800238c <HAL_RCC_OscConfig+0x2ac>)
 80022b4:	681b      	ldr	r3, [r3, #0]
 80022b6:	f003 0302 	and.w	r3, r3, #2
 80022ba:	2b00      	cmp	r3, #0
 80022bc:	d1f0      	bne.n	80022a0 <HAL_RCC_OscConfig+0x1c0>
 80022be:	687b      	ldr	r3, [r7, #4]
 80022c0:	681b      	ldr	r3, [r3, #0]
 80022c2:	f003 0308 	and.w	r3, r3, #8
 80022c6:	2b00      	cmp	r3, #0
 80022c8:	d030      	beq.n	800232c <HAL_RCC_OscConfig+0x24c>
 80022ca:	687b      	ldr	r3, [r7, #4]
 80022cc:	695b      	ldr	r3, [r3, #20]
 80022ce:	2b00      	cmp	r3, #0
 80022d0:	d016      	beq.n	8002300 <HAL_RCC_OscConfig+0x220>
 80022d2:	4b30      	ldr	r3, [pc, #192]	; (8002394 <HAL_RCC_OscConfig+0x2b4>)
 80022d4:	2201      	movs	r2, #1
 80022d6:	601a      	str	r2, [r3, #0]
 80022d8:	f7ff fb82 	bl	80019e0 <HAL_GetTick>
 80022dc:	6138      	str	r0, [r7, #16]
 80022de:	e008      	b.n	80022f2 <HAL_RCC_OscConfig+0x212>
 80022e0:	f7ff fb7e 	bl	80019e0 <HAL_GetTick>
 80022e4:	4602      	mov	r2, r0
 80022e6:	693b      	ldr	r3, [r7, #16]
 80022e8:	1ad3      	subs	r3, r2, r3
 80022ea:	2b02      	cmp	r3, #2
 80022ec:	d901      	bls.n	80022f2 <HAL_RCC_OscConfig+0x212>
 80022ee:	2303      	movs	r3, #3
 80022f0:	e164      	b.n	80025bc <HAL_RCC_OscConfig+0x4dc>
 80022f2:	4b26      	ldr	r3, [pc, #152]	; (800238c <HAL_RCC_OscConfig+0x2ac>)
 80022f4:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80022f6:	f003 0302 	and.w	r3, r3, #2
 80022fa:	2b00      	cmp	r3, #0
 80022fc:	d0f0      	beq.n	80022e0 <HAL_RCC_OscConfig+0x200>
 80022fe:	e015      	b.n	800232c <HAL_RCC_OscConfig+0x24c>
 8002300:	4b24      	ldr	r3, [pc, #144]	; (8002394 <HAL_RCC_OscConfig+0x2b4>)
 8002302:	2200      	movs	r2, #0
 8002304:	601a      	str	r2, [r3, #0]
 8002306:	f7ff fb6b 	bl	80019e0 <HAL_GetTick>
 800230a:	6138      	str	r0, [r7, #16]
 800230c:	e008      	b.n	8002320 <HAL_RCC_OscConfig+0x240>
 800230e:	f7ff fb67 	bl	80019e0 <HAL_GetTick>
 8002312:	4602      	mov	r2, r0
 8002314:	693b      	ldr	r3, [r7, #16]
 8002316:	1ad3      	subs	r3, r2, r3
 8002318:	2b02      	cmp	r3, #2
 800231a:	d901      	bls.n	8002320 <HAL_RCC_OscConfig+0x240>
 800231c:	2303      	movs	r3, #3
 800231e:	e14d      	b.n	80025bc <HAL_RCC_OscConfig+0x4dc>
 8002320:	4b1a      	ldr	r3, [pc, #104]	; (800238c <HAL_RCC_OscConfig+0x2ac>)
 8002322:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8002324:	f003 0302 	and.w	r3, r3, #2
 8002328:	2b00      	cmp	r3, #0
 800232a:	d1f0      	bne.n	800230e <HAL_RCC_OscConfig+0x22e>
 800232c:	687b      	ldr	r3, [r7, #4]
 800232e:	681b      	ldr	r3, [r3, #0]
 8002330:	f003 0304 	and.w	r3, r3, #4
 8002334:	2b00      	cmp	r3, #0
 8002336:	f000 80a0 	beq.w	800247a <HAL_RCC_OscConfig+0x39a>
 800233a:	2300      	movs	r3, #0
 800233c:	75fb      	strb	r3, [r7, #23]
 800233e:	4b13      	ldr	r3, [pc, #76]	; (800238c <HAL_RCC_OscConfig+0x2ac>)
 8002340:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002342:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002346:	2b00      	cmp	r3, #0
 8002348:	d10f      	bne.n	800236a <HAL_RCC_OscConfig+0x28a>
 800234a:	2300      	movs	r3, #0
 800234c:	60bb      	str	r3, [r7, #8]
 800234e:	4b0f      	ldr	r3, [pc, #60]	; (800238c <HAL_RCC_OscConfig+0x2ac>)
 8002350:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002352:	4a0e      	ldr	r2, [pc, #56]	; (800238c <HAL_RCC_OscConfig+0x2ac>)
 8002354:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002358:	6413      	str	r3, [r2, #64]	; 0x40
 800235a:	4b0c      	ldr	r3, [pc, #48]	; (800238c <HAL_RCC_OscConfig+0x2ac>)
 800235c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800235e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002362:	60bb      	str	r3, [r7, #8]
 8002364:	68bb      	ldr	r3, [r7, #8]
 8002366:	2301      	movs	r3, #1
 8002368:	75fb      	strb	r3, [r7, #23]
 800236a:	4b0b      	ldr	r3, [pc, #44]	; (8002398 <HAL_RCC_OscConfig+0x2b8>)
 800236c:	681b      	ldr	r3, [r3, #0]
 800236e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002372:	2b00      	cmp	r3, #0
 8002374:	d121      	bne.n	80023ba <HAL_RCC_OscConfig+0x2da>
 8002376:	4b08      	ldr	r3, [pc, #32]	; (8002398 <HAL_RCC_OscConfig+0x2b8>)
 8002378:	681b      	ldr	r3, [r3, #0]
 800237a:	4a07      	ldr	r2, [pc, #28]	; (8002398 <HAL_RCC_OscConfig+0x2b8>)
 800237c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002380:	6013      	str	r3, [r2, #0]
 8002382:	f7ff fb2d 	bl	80019e0 <HAL_GetTick>
 8002386:	6138      	str	r0, [r7, #16]
 8002388:	e011      	b.n	80023ae <HAL_RCC_OscConfig+0x2ce>
 800238a:	bf00      	nop
 800238c:	40023800 	.word	0x40023800
 8002390:	42470000 	.word	0x42470000
 8002394:	42470e80 	.word	0x42470e80
 8002398:	40007000 	.word	0x40007000
 800239c:	f7ff fb20 	bl	80019e0 <HAL_GetTick>
 80023a0:	4602      	mov	r2, r0
 80023a2:	693b      	ldr	r3, [r7, #16]
 80023a4:	1ad3      	subs	r3, r2, r3
 80023a6:	2b02      	cmp	r3, #2
 80023a8:	d901      	bls.n	80023ae <HAL_RCC_OscConfig+0x2ce>
 80023aa:	2303      	movs	r3, #3
 80023ac:	e106      	b.n	80025bc <HAL_RCC_OscConfig+0x4dc>
 80023ae:	4b85      	ldr	r3, [pc, #532]	; (80025c4 <HAL_RCC_OscConfig+0x4e4>)
 80023b0:	681b      	ldr	r3, [r3, #0]
 80023b2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80023b6:	2b00      	cmp	r3, #0
 80023b8:	d0f0      	beq.n	800239c <HAL_RCC_OscConfig+0x2bc>
 80023ba:	687b      	ldr	r3, [r7, #4]
 80023bc:	689b      	ldr	r3, [r3, #8]
 80023be:	2b01      	cmp	r3, #1
 80023c0:	d106      	bne.n	80023d0 <HAL_RCC_OscConfig+0x2f0>
 80023c2:	4b81      	ldr	r3, [pc, #516]	; (80025c8 <HAL_RCC_OscConfig+0x4e8>)
 80023c4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80023c6:	4a80      	ldr	r2, [pc, #512]	; (80025c8 <HAL_RCC_OscConfig+0x4e8>)
 80023c8:	f043 0301 	orr.w	r3, r3, #1
 80023cc:	6713      	str	r3, [r2, #112]	; 0x70
 80023ce:	e01c      	b.n	800240a <HAL_RCC_OscConfig+0x32a>
 80023d0:	687b      	ldr	r3, [r7, #4]
 80023d2:	689b      	ldr	r3, [r3, #8]
 80023d4:	2b05      	cmp	r3, #5
 80023d6:	d10c      	bne.n	80023f2 <HAL_RCC_OscConfig+0x312>
 80023d8:	4b7b      	ldr	r3, [pc, #492]	; (80025c8 <HAL_RCC_OscConfig+0x4e8>)
 80023da:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80023dc:	4a7a      	ldr	r2, [pc, #488]	; (80025c8 <HAL_RCC_OscConfig+0x4e8>)
 80023de:	f043 0304 	orr.w	r3, r3, #4
 80023e2:	6713      	str	r3, [r2, #112]	; 0x70
 80023e4:	4b78      	ldr	r3, [pc, #480]	; (80025c8 <HAL_RCC_OscConfig+0x4e8>)
 80023e6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80023e8:	4a77      	ldr	r2, [pc, #476]	; (80025c8 <HAL_RCC_OscConfig+0x4e8>)
 80023ea:	f043 0301 	orr.w	r3, r3, #1
 80023ee:	6713      	str	r3, [r2, #112]	; 0x70
 80023f0:	e00b      	b.n	800240a <HAL_RCC_OscConfig+0x32a>
 80023f2:	4b75      	ldr	r3, [pc, #468]	; (80025c8 <HAL_RCC_OscConfig+0x4e8>)
 80023f4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80023f6:	4a74      	ldr	r2, [pc, #464]	; (80025c8 <HAL_RCC_OscConfig+0x4e8>)
 80023f8:	f023 0301 	bic.w	r3, r3, #1
 80023fc:	6713      	str	r3, [r2, #112]	; 0x70
 80023fe:	4b72      	ldr	r3, [pc, #456]	; (80025c8 <HAL_RCC_OscConfig+0x4e8>)
 8002400:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002402:	4a71      	ldr	r2, [pc, #452]	; (80025c8 <HAL_RCC_OscConfig+0x4e8>)
 8002404:	f023 0304 	bic.w	r3, r3, #4
 8002408:	6713      	str	r3, [r2, #112]	; 0x70
 800240a:	687b      	ldr	r3, [r7, #4]
 800240c:	689b      	ldr	r3, [r3, #8]
 800240e:	2b00      	cmp	r3, #0
 8002410:	d015      	beq.n	800243e <HAL_RCC_OscConfig+0x35e>
 8002412:	f7ff fae5 	bl	80019e0 <HAL_GetTick>
 8002416:	6138      	str	r0, [r7, #16]
 8002418:	e00a      	b.n	8002430 <HAL_RCC_OscConfig+0x350>
 800241a:	f7ff fae1 	bl	80019e0 <HAL_GetTick>
 800241e:	4602      	mov	r2, r0
 8002420:	693b      	ldr	r3, [r7, #16]
 8002422:	1ad3      	subs	r3, r2, r3
 8002424:	f241 3288 	movw	r2, #5000	; 0x1388
 8002428:	4293      	cmp	r3, r2
 800242a:	d901      	bls.n	8002430 <HAL_RCC_OscConfig+0x350>
 800242c:	2303      	movs	r3, #3
 800242e:	e0c5      	b.n	80025bc <HAL_RCC_OscConfig+0x4dc>
 8002430:	4b65      	ldr	r3, [pc, #404]	; (80025c8 <HAL_RCC_OscConfig+0x4e8>)
 8002432:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002434:	f003 0302 	and.w	r3, r3, #2
 8002438:	2b00      	cmp	r3, #0
 800243a:	d0ee      	beq.n	800241a <HAL_RCC_OscConfig+0x33a>
 800243c:	e014      	b.n	8002468 <HAL_RCC_OscConfig+0x388>
 800243e:	f7ff facf 	bl	80019e0 <HAL_GetTick>
 8002442:	6138      	str	r0, [r7, #16]
 8002444:	e00a      	b.n	800245c <HAL_RCC_OscConfig+0x37c>
 8002446:	f7ff facb 	bl	80019e0 <HAL_GetTick>
 800244a:	4602      	mov	r2, r0
 800244c:	693b      	ldr	r3, [r7, #16]
 800244e:	1ad3      	subs	r3, r2, r3
 8002450:	f241 3288 	movw	r2, #5000	; 0x1388
 8002454:	4293      	cmp	r3, r2
 8002456:	d901      	bls.n	800245c <HAL_RCC_OscConfig+0x37c>
 8002458:	2303      	movs	r3, #3
 800245a:	e0af      	b.n	80025bc <HAL_RCC_OscConfig+0x4dc>
 800245c:	4b5a      	ldr	r3, [pc, #360]	; (80025c8 <HAL_RCC_OscConfig+0x4e8>)
 800245e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002460:	f003 0302 	and.w	r3, r3, #2
 8002464:	2b00      	cmp	r3, #0
 8002466:	d1ee      	bne.n	8002446 <HAL_RCC_OscConfig+0x366>
 8002468:	7dfb      	ldrb	r3, [r7, #23]
 800246a:	2b01      	cmp	r3, #1
 800246c:	d105      	bne.n	800247a <HAL_RCC_OscConfig+0x39a>
 800246e:	4b56      	ldr	r3, [pc, #344]	; (80025c8 <HAL_RCC_OscConfig+0x4e8>)
 8002470:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002472:	4a55      	ldr	r2, [pc, #340]	; (80025c8 <HAL_RCC_OscConfig+0x4e8>)
 8002474:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8002478:	6413      	str	r3, [r2, #64]	; 0x40
 800247a:	687b      	ldr	r3, [r7, #4]
 800247c:	699b      	ldr	r3, [r3, #24]
 800247e:	2b00      	cmp	r3, #0
 8002480:	f000 809b 	beq.w	80025ba <HAL_RCC_OscConfig+0x4da>
 8002484:	4b50      	ldr	r3, [pc, #320]	; (80025c8 <HAL_RCC_OscConfig+0x4e8>)
 8002486:	689b      	ldr	r3, [r3, #8]
 8002488:	f003 030c 	and.w	r3, r3, #12
 800248c:	2b08      	cmp	r3, #8
 800248e:	d05c      	beq.n	800254a <HAL_RCC_OscConfig+0x46a>
 8002490:	687b      	ldr	r3, [r7, #4]
 8002492:	699b      	ldr	r3, [r3, #24]
 8002494:	2b02      	cmp	r3, #2
 8002496:	d141      	bne.n	800251c <HAL_RCC_OscConfig+0x43c>
 8002498:	4b4c      	ldr	r3, [pc, #304]	; (80025cc <HAL_RCC_OscConfig+0x4ec>)
 800249a:	2200      	movs	r2, #0
 800249c:	601a      	str	r2, [r3, #0]
 800249e:	f7ff fa9f 	bl	80019e0 <HAL_GetTick>
 80024a2:	6138      	str	r0, [r7, #16]
 80024a4:	e008      	b.n	80024b8 <HAL_RCC_OscConfig+0x3d8>
 80024a6:	f7ff fa9b 	bl	80019e0 <HAL_GetTick>
 80024aa:	4602      	mov	r2, r0
 80024ac:	693b      	ldr	r3, [r7, #16]
 80024ae:	1ad3      	subs	r3, r2, r3
 80024b0:	2b02      	cmp	r3, #2
 80024b2:	d901      	bls.n	80024b8 <HAL_RCC_OscConfig+0x3d8>
 80024b4:	2303      	movs	r3, #3
 80024b6:	e081      	b.n	80025bc <HAL_RCC_OscConfig+0x4dc>
 80024b8:	4b43      	ldr	r3, [pc, #268]	; (80025c8 <HAL_RCC_OscConfig+0x4e8>)
 80024ba:	681b      	ldr	r3, [r3, #0]
 80024bc:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80024c0:	2b00      	cmp	r3, #0
 80024c2:	d1f0      	bne.n	80024a6 <HAL_RCC_OscConfig+0x3c6>
 80024c4:	687b      	ldr	r3, [r7, #4]
 80024c6:	69da      	ldr	r2, [r3, #28]
 80024c8:	687b      	ldr	r3, [r7, #4]
 80024ca:	6a1b      	ldr	r3, [r3, #32]
 80024cc:	431a      	orrs	r2, r3
 80024ce:	687b      	ldr	r3, [r7, #4]
 80024d0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80024d2:	019b      	lsls	r3, r3, #6
 80024d4:	431a      	orrs	r2, r3
 80024d6:	687b      	ldr	r3, [r7, #4]
 80024d8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80024da:	085b      	lsrs	r3, r3, #1
 80024dc:	3b01      	subs	r3, #1
 80024de:	041b      	lsls	r3, r3, #16
 80024e0:	431a      	orrs	r2, r3
 80024e2:	687b      	ldr	r3, [r7, #4]
 80024e4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80024e6:	061b      	lsls	r3, r3, #24
 80024e8:	4937      	ldr	r1, [pc, #220]	; (80025c8 <HAL_RCC_OscConfig+0x4e8>)
 80024ea:	4313      	orrs	r3, r2
 80024ec:	604b      	str	r3, [r1, #4]
 80024ee:	4b37      	ldr	r3, [pc, #220]	; (80025cc <HAL_RCC_OscConfig+0x4ec>)
 80024f0:	2201      	movs	r2, #1
 80024f2:	601a      	str	r2, [r3, #0]
 80024f4:	f7ff fa74 	bl	80019e0 <HAL_GetTick>
 80024f8:	6138      	str	r0, [r7, #16]
 80024fa:	e008      	b.n	800250e <HAL_RCC_OscConfig+0x42e>
 80024fc:	f7ff fa70 	bl	80019e0 <HAL_GetTick>
 8002500:	4602      	mov	r2, r0
 8002502:	693b      	ldr	r3, [r7, #16]
 8002504:	1ad3      	subs	r3, r2, r3
 8002506:	2b02      	cmp	r3, #2
 8002508:	d901      	bls.n	800250e <HAL_RCC_OscConfig+0x42e>
 800250a:	2303      	movs	r3, #3
 800250c:	e056      	b.n	80025bc <HAL_RCC_OscConfig+0x4dc>
 800250e:	4b2e      	ldr	r3, [pc, #184]	; (80025c8 <HAL_RCC_OscConfig+0x4e8>)
 8002510:	681b      	ldr	r3, [r3, #0]
 8002512:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002516:	2b00      	cmp	r3, #0
 8002518:	d0f0      	beq.n	80024fc <HAL_RCC_OscConfig+0x41c>
 800251a:	e04e      	b.n	80025ba <HAL_RCC_OscConfig+0x4da>
 800251c:	4b2b      	ldr	r3, [pc, #172]	; (80025cc <HAL_RCC_OscConfig+0x4ec>)
 800251e:	2200      	movs	r2, #0
 8002520:	601a      	str	r2, [r3, #0]
 8002522:	f7ff fa5d 	bl	80019e0 <HAL_GetTick>
 8002526:	6138      	str	r0, [r7, #16]
 8002528:	e008      	b.n	800253c <HAL_RCC_OscConfig+0x45c>
 800252a:	f7ff fa59 	bl	80019e0 <HAL_GetTick>
 800252e:	4602      	mov	r2, r0
 8002530:	693b      	ldr	r3, [r7, #16]
 8002532:	1ad3      	subs	r3, r2, r3
 8002534:	2b02      	cmp	r3, #2
 8002536:	d901      	bls.n	800253c <HAL_RCC_OscConfig+0x45c>
 8002538:	2303      	movs	r3, #3
 800253a:	e03f      	b.n	80025bc <HAL_RCC_OscConfig+0x4dc>
 800253c:	4b22      	ldr	r3, [pc, #136]	; (80025c8 <HAL_RCC_OscConfig+0x4e8>)
 800253e:	681b      	ldr	r3, [r3, #0]
 8002540:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002544:	2b00      	cmp	r3, #0
 8002546:	d1f0      	bne.n	800252a <HAL_RCC_OscConfig+0x44a>
 8002548:	e037      	b.n	80025ba <HAL_RCC_OscConfig+0x4da>
 800254a:	687b      	ldr	r3, [r7, #4]
 800254c:	699b      	ldr	r3, [r3, #24]
 800254e:	2b01      	cmp	r3, #1
 8002550:	d101      	bne.n	8002556 <HAL_RCC_OscConfig+0x476>
 8002552:	2301      	movs	r3, #1
 8002554:	e032      	b.n	80025bc <HAL_RCC_OscConfig+0x4dc>
 8002556:	4b1c      	ldr	r3, [pc, #112]	; (80025c8 <HAL_RCC_OscConfig+0x4e8>)
 8002558:	685b      	ldr	r3, [r3, #4]
 800255a:	60fb      	str	r3, [r7, #12]
 800255c:	687b      	ldr	r3, [r7, #4]
 800255e:	699b      	ldr	r3, [r3, #24]
 8002560:	2b01      	cmp	r3, #1
 8002562:	d028      	beq.n	80025b6 <HAL_RCC_OscConfig+0x4d6>
 8002564:	68fb      	ldr	r3, [r7, #12]
 8002566:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 800256a:	687b      	ldr	r3, [r7, #4]
 800256c:	69db      	ldr	r3, [r3, #28]
 800256e:	429a      	cmp	r2, r3
 8002570:	d121      	bne.n	80025b6 <HAL_RCC_OscConfig+0x4d6>
 8002572:	68fb      	ldr	r3, [r7, #12]
 8002574:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8002578:	687b      	ldr	r3, [r7, #4]
 800257a:	6a1b      	ldr	r3, [r3, #32]
 800257c:	429a      	cmp	r2, r3
 800257e:	d11a      	bne.n	80025b6 <HAL_RCC_OscConfig+0x4d6>
 8002580:	68fa      	ldr	r2, [r7, #12]
 8002582:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8002586:	4013      	ands	r3, r2
 8002588:	687a      	ldr	r2, [r7, #4]
 800258a:	6a52      	ldr	r2, [r2, #36]	; 0x24
 800258c:	0192      	lsls	r2, r2, #6
 800258e:	4293      	cmp	r3, r2
 8002590:	d111      	bne.n	80025b6 <HAL_RCC_OscConfig+0x4d6>
 8002592:	68fb      	ldr	r3, [r7, #12]
 8002594:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8002598:	687b      	ldr	r3, [r7, #4]
 800259a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800259c:	085b      	lsrs	r3, r3, #1
 800259e:	3b01      	subs	r3, #1
 80025a0:	041b      	lsls	r3, r3, #16
 80025a2:	429a      	cmp	r2, r3
 80025a4:	d107      	bne.n	80025b6 <HAL_RCC_OscConfig+0x4d6>
 80025a6:	68fb      	ldr	r3, [r7, #12]
 80025a8:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 80025ac:	687b      	ldr	r3, [r7, #4]
 80025ae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80025b0:	061b      	lsls	r3, r3, #24
 80025b2:	429a      	cmp	r2, r3
 80025b4:	d001      	beq.n	80025ba <HAL_RCC_OscConfig+0x4da>
 80025b6:	2301      	movs	r3, #1
 80025b8:	e000      	b.n	80025bc <HAL_RCC_OscConfig+0x4dc>
 80025ba:	2300      	movs	r3, #0
 80025bc:	4618      	mov	r0, r3
 80025be:	3718      	adds	r7, #24
 80025c0:	46bd      	mov	sp, r7
 80025c2:	bd80      	pop	{r7, pc}
 80025c4:	40007000 	.word	0x40007000
 80025c8:	40023800 	.word	0x40023800
 80025cc:	42470060 	.word	0x42470060

080025d0 <HAL_RCC_ClockConfig>:
 80025d0:	b580      	push	{r7, lr}
 80025d2:	b084      	sub	sp, #16
 80025d4:	af00      	add	r7, sp, #0
 80025d6:	6078      	str	r0, [r7, #4]
 80025d8:	6039      	str	r1, [r7, #0]
 80025da:	687b      	ldr	r3, [r7, #4]
 80025dc:	2b00      	cmp	r3, #0
 80025de:	d101      	bne.n	80025e4 <HAL_RCC_ClockConfig+0x14>
 80025e0:	2301      	movs	r3, #1
 80025e2:	e0cc      	b.n	800277e <HAL_RCC_ClockConfig+0x1ae>
 80025e4:	4b68      	ldr	r3, [pc, #416]	; (8002788 <HAL_RCC_ClockConfig+0x1b8>)
 80025e6:	681b      	ldr	r3, [r3, #0]
 80025e8:	f003 0307 	and.w	r3, r3, #7
 80025ec:	683a      	ldr	r2, [r7, #0]
 80025ee:	429a      	cmp	r2, r3
 80025f0:	d90c      	bls.n	800260c <HAL_RCC_ClockConfig+0x3c>
 80025f2:	4b65      	ldr	r3, [pc, #404]	; (8002788 <HAL_RCC_ClockConfig+0x1b8>)
 80025f4:	683a      	ldr	r2, [r7, #0]
 80025f6:	b2d2      	uxtb	r2, r2
 80025f8:	701a      	strb	r2, [r3, #0]
 80025fa:	4b63      	ldr	r3, [pc, #396]	; (8002788 <HAL_RCC_ClockConfig+0x1b8>)
 80025fc:	681b      	ldr	r3, [r3, #0]
 80025fe:	f003 0307 	and.w	r3, r3, #7
 8002602:	683a      	ldr	r2, [r7, #0]
 8002604:	429a      	cmp	r2, r3
 8002606:	d001      	beq.n	800260c <HAL_RCC_ClockConfig+0x3c>
 8002608:	2301      	movs	r3, #1
 800260a:	e0b8      	b.n	800277e <HAL_RCC_ClockConfig+0x1ae>
 800260c:	687b      	ldr	r3, [r7, #4]
 800260e:	681b      	ldr	r3, [r3, #0]
 8002610:	f003 0302 	and.w	r3, r3, #2
 8002614:	2b00      	cmp	r3, #0
 8002616:	d020      	beq.n	800265a <HAL_RCC_ClockConfig+0x8a>
 8002618:	687b      	ldr	r3, [r7, #4]
 800261a:	681b      	ldr	r3, [r3, #0]
 800261c:	f003 0304 	and.w	r3, r3, #4
 8002620:	2b00      	cmp	r3, #0
 8002622:	d005      	beq.n	8002630 <HAL_RCC_ClockConfig+0x60>
 8002624:	4b59      	ldr	r3, [pc, #356]	; (800278c <HAL_RCC_ClockConfig+0x1bc>)
 8002626:	689b      	ldr	r3, [r3, #8]
 8002628:	4a58      	ldr	r2, [pc, #352]	; (800278c <HAL_RCC_ClockConfig+0x1bc>)
 800262a:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 800262e:	6093      	str	r3, [r2, #8]
 8002630:	687b      	ldr	r3, [r7, #4]
 8002632:	681b      	ldr	r3, [r3, #0]
 8002634:	f003 0308 	and.w	r3, r3, #8
 8002638:	2b00      	cmp	r3, #0
 800263a:	d005      	beq.n	8002648 <HAL_RCC_ClockConfig+0x78>
 800263c:	4b53      	ldr	r3, [pc, #332]	; (800278c <HAL_RCC_ClockConfig+0x1bc>)
 800263e:	689b      	ldr	r3, [r3, #8]
 8002640:	4a52      	ldr	r2, [pc, #328]	; (800278c <HAL_RCC_ClockConfig+0x1bc>)
 8002642:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 8002646:	6093      	str	r3, [r2, #8]
 8002648:	4b50      	ldr	r3, [pc, #320]	; (800278c <HAL_RCC_ClockConfig+0x1bc>)
 800264a:	689b      	ldr	r3, [r3, #8]
 800264c:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8002650:	687b      	ldr	r3, [r7, #4]
 8002652:	689b      	ldr	r3, [r3, #8]
 8002654:	494d      	ldr	r1, [pc, #308]	; (800278c <HAL_RCC_ClockConfig+0x1bc>)
 8002656:	4313      	orrs	r3, r2
 8002658:	608b      	str	r3, [r1, #8]
 800265a:	687b      	ldr	r3, [r7, #4]
 800265c:	681b      	ldr	r3, [r3, #0]
 800265e:	f003 0301 	and.w	r3, r3, #1
 8002662:	2b00      	cmp	r3, #0
 8002664:	d044      	beq.n	80026f0 <HAL_RCC_ClockConfig+0x120>
 8002666:	687b      	ldr	r3, [r7, #4]
 8002668:	685b      	ldr	r3, [r3, #4]
 800266a:	2b01      	cmp	r3, #1
 800266c:	d107      	bne.n	800267e <HAL_RCC_ClockConfig+0xae>
 800266e:	4b47      	ldr	r3, [pc, #284]	; (800278c <HAL_RCC_ClockConfig+0x1bc>)
 8002670:	681b      	ldr	r3, [r3, #0]
 8002672:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002676:	2b00      	cmp	r3, #0
 8002678:	d119      	bne.n	80026ae <HAL_RCC_ClockConfig+0xde>
 800267a:	2301      	movs	r3, #1
 800267c:	e07f      	b.n	800277e <HAL_RCC_ClockConfig+0x1ae>
 800267e:	687b      	ldr	r3, [r7, #4]
 8002680:	685b      	ldr	r3, [r3, #4]
 8002682:	2b02      	cmp	r3, #2
 8002684:	d003      	beq.n	800268e <HAL_RCC_ClockConfig+0xbe>
 8002686:	687b      	ldr	r3, [r7, #4]
 8002688:	685b      	ldr	r3, [r3, #4]
 800268a:	2b03      	cmp	r3, #3
 800268c:	d107      	bne.n	800269e <HAL_RCC_ClockConfig+0xce>
 800268e:	4b3f      	ldr	r3, [pc, #252]	; (800278c <HAL_RCC_ClockConfig+0x1bc>)
 8002690:	681b      	ldr	r3, [r3, #0]
 8002692:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002696:	2b00      	cmp	r3, #0
 8002698:	d109      	bne.n	80026ae <HAL_RCC_ClockConfig+0xde>
 800269a:	2301      	movs	r3, #1
 800269c:	e06f      	b.n	800277e <HAL_RCC_ClockConfig+0x1ae>
 800269e:	4b3b      	ldr	r3, [pc, #236]	; (800278c <HAL_RCC_ClockConfig+0x1bc>)
 80026a0:	681b      	ldr	r3, [r3, #0]
 80026a2:	f003 0302 	and.w	r3, r3, #2
 80026a6:	2b00      	cmp	r3, #0
 80026a8:	d101      	bne.n	80026ae <HAL_RCC_ClockConfig+0xde>
 80026aa:	2301      	movs	r3, #1
 80026ac:	e067      	b.n	800277e <HAL_RCC_ClockConfig+0x1ae>
 80026ae:	4b37      	ldr	r3, [pc, #220]	; (800278c <HAL_RCC_ClockConfig+0x1bc>)
 80026b0:	689b      	ldr	r3, [r3, #8]
 80026b2:	f023 0203 	bic.w	r2, r3, #3
 80026b6:	687b      	ldr	r3, [r7, #4]
 80026b8:	685b      	ldr	r3, [r3, #4]
 80026ba:	4934      	ldr	r1, [pc, #208]	; (800278c <HAL_RCC_ClockConfig+0x1bc>)
 80026bc:	4313      	orrs	r3, r2
 80026be:	608b      	str	r3, [r1, #8]
 80026c0:	f7ff f98e 	bl	80019e0 <HAL_GetTick>
 80026c4:	60f8      	str	r0, [r7, #12]
 80026c6:	e00a      	b.n	80026de <HAL_RCC_ClockConfig+0x10e>
 80026c8:	f7ff f98a 	bl	80019e0 <HAL_GetTick>
 80026cc:	4602      	mov	r2, r0
 80026ce:	68fb      	ldr	r3, [r7, #12]
 80026d0:	1ad3      	subs	r3, r2, r3
 80026d2:	f241 3288 	movw	r2, #5000	; 0x1388
 80026d6:	4293      	cmp	r3, r2
 80026d8:	d901      	bls.n	80026de <HAL_RCC_ClockConfig+0x10e>
 80026da:	2303      	movs	r3, #3
 80026dc:	e04f      	b.n	800277e <HAL_RCC_ClockConfig+0x1ae>
 80026de:	4b2b      	ldr	r3, [pc, #172]	; (800278c <HAL_RCC_ClockConfig+0x1bc>)
 80026e0:	689b      	ldr	r3, [r3, #8]
 80026e2:	f003 020c 	and.w	r2, r3, #12
 80026e6:	687b      	ldr	r3, [r7, #4]
 80026e8:	685b      	ldr	r3, [r3, #4]
 80026ea:	009b      	lsls	r3, r3, #2
 80026ec:	429a      	cmp	r2, r3
 80026ee:	d1eb      	bne.n	80026c8 <HAL_RCC_ClockConfig+0xf8>
 80026f0:	4b25      	ldr	r3, [pc, #148]	; (8002788 <HAL_RCC_ClockConfig+0x1b8>)
 80026f2:	681b      	ldr	r3, [r3, #0]
 80026f4:	f003 0307 	and.w	r3, r3, #7
 80026f8:	683a      	ldr	r2, [r7, #0]
 80026fa:	429a      	cmp	r2, r3
 80026fc:	d20c      	bcs.n	8002718 <HAL_RCC_ClockConfig+0x148>
 80026fe:	4b22      	ldr	r3, [pc, #136]	; (8002788 <HAL_RCC_ClockConfig+0x1b8>)
 8002700:	683a      	ldr	r2, [r7, #0]
 8002702:	b2d2      	uxtb	r2, r2
 8002704:	701a      	strb	r2, [r3, #0]
 8002706:	4b20      	ldr	r3, [pc, #128]	; (8002788 <HAL_RCC_ClockConfig+0x1b8>)
 8002708:	681b      	ldr	r3, [r3, #0]
 800270a:	f003 0307 	and.w	r3, r3, #7
 800270e:	683a      	ldr	r2, [r7, #0]
 8002710:	429a      	cmp	r2, r3
 8002712:	d001      	beq.n	8002718 <HAL_RCC_ClockConfig+0x148>
 8002714:	2301      	movs	r3, #1
 8002716:	e032      	b.n	800277e <HAL_RCC_ClockConfig+0x1ae>
 8002718:	687b      	ldr	r3, [r7, #4]
 800271a:	681b      	ldr	r3, [r3, #0]
 800271c:	f003 0304 	and.w	r3, r3, #4
 8002720:	2b00      	cmp	r3, #0
 8002722:	d008      	beq.n	8002736 <HAL_RCC_ClockConfig+0x166>
 8002724:	4b19      	ldr	r3, [pc, #100]	; (800278c <HAL_RCC_ClockConfig+0x1bc>)
 8002726:	689b      	ldr	r3, [r3, #8]
 8002728:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 800272c:	687b      	ldr	r3, [r7, #4]
 800272e:	68db      	ldr	r3, [r3, #12]
 8002730:	4916      	ldr	r1, [pc, #88]	; (800278c <HAL_RCC_ClockConfig+0x1bc>)
 8002732:	4313      	orrs	r3, r2
 8002734:	608b      	str	r3, [r1, #8]
 8002736:	687b      	ldr	r3, [r7, #4]
 8002738:	681b      	ldr	r3, [r3, #0]
 800273a:	f003 0308 	and.w	r3, r3, #8
 800273e:	2b00      	cmp	r3, #0
 8002740:	d009      	beq.n	8002756 <HAL_RCC_ClockConfig+0x186>
 8002742:	4b12      	ldr	r3, [pc, #72]	; (800278c <HAL_RCC_ClockConfig+0x1bc>)
 8002744:	689b      	ldr	r3, [r3, #8]
 8002746:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 800274a:	687b      	ldr	r3, [r7, #4]
 800274c:	691b      	ldr	r3, [r3, #16]
 800274e:	00db      	lsls	r3, r3, #3
 8002750:	490e      	ldr	r1, [pc, #56]	; (800278c <HAL_RCC_ClockConfig+0x1bc>)
 8002752:	4313      	orrs	r3, r2
 8002754:	608b      	str	r3, [r1, #8]
 8002756:	f000 f821 	bl	800279c <HAL_RCC_GetSysClockFreq>
 800275a:	4602      	mov	r2, r0
 800275c:	4b0b      	ldr	r3, [pc, #44]	; (800278c <HAL_RCC_ClockConfig+0x1bc>)
 800275e:	689b      	ldr	r3, [r3, #8]
 8002760:	091b      	lsrs	r3, r3, #4
 8002762:	f003 030f 	and.w	r3, r3, #15
 8002766:	490a      	ldr	r1, [pc, #40]	; (8002790 <HAL_RCC_ClockConfig+0x1c0>)
 8002768:	5ccb      	ldrb	r3, [r1, r3]
 800276a:	fa22 f303 	lsr.w	r3, r2, r3
 800276e:	4a09      	ldr	r2, [pc, #36]	; (8002794 <HAL_RCC_ClockConfig+0x1c4>)
 8002770:	6013      	str	r3, [r2, #0]
 8002772:	4b09      	ldr	r3, [pc, #36]	; (8002798 <HAL_RCC_ClockConfig+0x1c8>)
 8002774:	681b      	ldr	r3, [r3, #0]
 8002776:	4618      	mov	r0, r3
 8002778:	f7ff f8ee 	bl	8001958 <HAL_InitTick>
 800277c:	2300      	movs	r3, #0
 800277e:	4618      	mov	r0, r3
 8002780:	3710      	adds	r7, #16
 8002782:	46bd      	mov	sp, r7
 8002784:	bd80      	pop	{r7, pc}
 8002786:	bf00      	nop
 8002788:	40023c00 	.word	0x40023c00
 800278c:	40023800 	.word	0x40023800
 8002790:	080035c4 	.word	0x080035c4
 8002794:	20000000 	.word	0x20000000
 8002798:	20000004 	.word	0x20000004

0800279c <HAL_RCC_GetSysClockFreq>:
 800279c:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 80027a0:	b084      	sub	sp, #16
 80027a2:	af00      	add	r7, sp, #0
 80027a4:	2300      	movs	r3, #0
 80027a6:	607b      	str	r3, [r7, #4]
 80027a8:	2300      	movs	r3, #0
 80027aa:	60fb      	str	r3, [r7, #12]
 80027ac:	2300      	movs	r3, #0
 80027ae:	603b      	str	r3, [r7, #0]
 80027b0:	2300      	movs	r3, #0
 80027b2:	60bb      	str	r3, [r7, #8]
 80027b4:	4b67      	ldr	r3, [pc, #412]	; (8002954 <HAL_RCC_GetSysClockFreq+0x1b8>)
 80027b6:	689b      	ldr	r3, [r3, #8]
 80027b8:	f003 030c 	and.w	r3, r3, #12
 80027bc:	2b08      	cmp	r3, #8
 80027be:	d00d      	beq.n	80027dc <HAL_RCC_GetSysClockFreq+0x40>
 80027c0:	2b08      	cmp	r3, #8
 80027c2:	f200 80bd 	bhi.w	8002940 <HAL_RCC_GetSysClockFreq+0x1a4>
 80027c6:	2b00      	cmp	r3, #0
 80027c8:	d002      	beq.n	80027d0 <HAL_RCC_GetSysClockFreq+0x34>
 80027ca:	2b04      	cmp	r3, #4
 80027cc:	d003      	beq.n	80027d6 <HAL_RCC_GetSysClockFreq+0x3a>
 80027ce:	e0b7      	b.n	8002940 <HAL_RCC_GetSysClockFreq+0x1a4>
 80027d0:	4b61      	ldr	r3, [pc, #388]	; (8002958 <HAL_RCC_GetSysClockFreq+0x1bc>)
 80027d2:	60bb      	str	r3, [r7, #8]
 80027d4:	e0b7      	b.n	8002946 <HAL_RCC_GetSysClockFreq+0x1aa>
 80027d6:	4b61      	ldr	r3, [pc, #388]	; (800295c <HAL_RCC_GetSysClockFreq+0x1c0>)
 80027d8:	60bb      	str	r3, [r7, #8]
 80027da:	e0b4      	b.n	8002946 <HAL_RCC_GetSysClockFreq+0x1aa>
 80027dc:	4b5d      	ldr	r3, [pc, #372]	; (8002954 <HAL_RCC_GetSysClockFreq+0x1b8>)
 80027de:	685b      	ldr	r3, [r3, #4]
 80027e0:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 80027e4:	607b      	str	r3, [r7, #4]
 80027e6:	4b5b      	ldr	r3, [pc, #364]	; (8002954 <HAL_RCC_GetSysClockFreq+0x1b8>)
 80027e8:	685b      	ldr	r3, [r3, #4]
 80027ea:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80027ee:	2b00      	cmp	r3, #0
 80027f0:	d04d      	beq.n	800288e <HAL_RCC_GetSysClockFreq+0xf2>
 80027f2:	4b58      	ldr	r3, [pc, #352]	; (8002954 <HAL_RCC_GetSysClockFreq+0x1b8>)
 80027f4:	685b      	ldr	r3, [r3, #4]
 80027f6:	099b      	lsrs	r3, r3, #6
 80027f8:	461a      	mov	r2, r3
 80027fa:	f04f 0300 	mov.w	r3, #0
 80027fe:	f240 10ff 	movw	r0, #511	; 0x1ff
 8002802:	f04f 0100 	mov.w	r1, #0
 8002806:	ea02 0800 	and.w	r8, r2, r0
 800280a:	ea03 0901 	and.w	r9, r3, r1
 800280e:	4640      	mov	r0, r8
 8002810:	4649      	mov	r1, r9
 8002812:	f04f 0200 	mov.w	r2, #0
 8002816:	f04f 0300 	mov.w	r3, #0
 800281a:	014b      	lsls	r3, r1, #5
 800281c:	ea43 63d0 	orr.w	r3, r3, r0, lsr #27
 8002820:	0142      	lsls	r2, r0, #5
 8002822:	4610      	mov	r0, r2
 8002824:	4619      	mov	r1, r3
 8002826:	ebb0 0008 	subs.w	r0, r0, r8
 800282a:	eb61 0109 	sbc.w	r1, r1, r9
 800282e:	f04f 0200 	mov.w	r2, #0
 8002832:	f04f 0300 	mov.w	r3, #0
 8002836:	018b      	lsls	r3, r1, #6
 8002838:	ea43 6390 	orr.w	r3, r3, r0, lsr #26
 800283c:	0182      	lsls	r2, r0, #6
 800283e:	1a12      	subs	r2, r2, r0
 8002840:	eb63 0301 	sbc.w	r3, r3, r1
 8002844:	f04f 0000 	mov.w	r0, #0
 8002848:	f04f 0100 	mov.w	r1, #0
 800284c:	00d9      	lsls	r1, r3, #3
 800284e:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
 8002852:	00d0      	lsls	r0, r2, #3
 8002854:	4602      	mov	r2, r0
 8002856:	460b      	mov	r3, r1
 8002858:	eb12 0208 	adds.w	r2, r2, r8
 800285c:	eb43 0309 	adc.w	r3, r3, r9
 8002860:	f04f 0000 	mov.w	r0, #0
 8002864:	f04f 0100 	mov.w	r1, #0
 8002868:	0259      	lsls	r1, r3, #9
 800286a:	ea41 51d2 	orr.w	r1, r1, r2, lsr #23
 800286e:	0250      	lsls	r0, r2, #9
 8002870:	4602      	mov	r2, r0
 8002872:	460b      	mov	r3, r1
 8002874:	4610      	mov	r0, r2
 8002876:	4619      	mov	r1, r3
 8002878:	687b      	ldr	r3, [r7, #4]
 800287a:	461a      	mov	r2, r3
 800287c:	f04f 0300 	mov.w	r3, #0
 8002880:	f7fd fca8 	bl	80001d4 <__aeabi_uldivmod>
 8002884:	4602      	mov	r2, r0
 8002886:	460b      	mov	r3, r1
 8002888:	4613      	mov	r3, r2
 800288a:	60fb      	str	r3, [r7, #12]
 800288c:	e04a      	b.n	8002924 <HAL_RCC_GetSysClockFreq+0x188>
 800288e:	4b31      	ldr	r3, [pc, #196]	; (8002954 <HAL_RCC_GetSysClockFreq+0x1b8>)
 8002890:	685b      	ldr	r3, [r3, #4]
 8002892:	099b      	lsrs	r3, r3, #6
 8002894:	461a      	mov	r2, r3
 8002896:	f04f 0300 	mov.w	r3, #0
 800289a:	f240 10ff 	movw	r0, #511	; 0x1ff
 800289e:	f04f 0100 	mov.w	r1, #0
 80028a2:	ea02 0400 	and.w	r4, r2, r0
 80028a6:	ea03 0501 	and.w	r5, r3, r1
 80028aa:	4620      	mov	r0, r4
 80028ac:	4629      	mov	r1, r5
 80028ae:	f04f 0200 	mov.w	r2, #0
 80028b2:	f04f 0300 	mov.w	r3, #0
 80028b6:	014b      	lsls	r3, r1, #5
 80028b8:	ea43 63d0 	orr.w	r3, r3, r0, lsr #27
 80028bc:	0142      	lsls	r2, r0, #5
 80028be:	4610      	mov	r0, r2
 80028c0:	4619      	mov	r1, r3
 80028c2:	1b00      	subs	r0, r0, r4
 80028c4:	eb61 0105 	sbc.w	r1, r1, r5
 80028c8:	f04f 0200 	mov.w	r2, #0
 80028cc:	f04f 0300 	mov.w	r3, #0
 80028d0:	018b      	lsls	r3, r1, #6
 80028d2:	ea43 6390 	orr.w	r3, r3, r0, lsr #26
 80028d6:	0182      	lsls	r2, r0, #6
 80028d8:	1a12      	subs	r2, r2, r0
 80028da:	eb63 0301 	sbc.w	r3, r3, r1
 80028de:	f04f 0000 	mov.w	r0, #0
 80028e2:	f04f 0100 	mov.w	r1, #0
 80028e6:	00d9      	lsls	r1, r3, #3
 80028e8:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
 80028ec:	00d0      	lsls	r0, r2, #3
 80028ee:	4602      	mov	r2, r0
 80028f0:	460b      	mov	r3, r1
 80028f2:	1912      	adds	r2, r2, r4
 80028f4:	eb45 0303 	adc.w	r3, r5, r3
 80028f8:	f04f 0000 	mov.w	r0, #0
 80028fc:	f04f 0100 	mov.w	r1, #0
 8002900:	0299      	lsls	r1, r3, #10
 8002902:	ea41 5192 	orr.w	r1, r1, r2, lsr #22
 8002906:	0290      	lsls	r0, r2, #10
 8002908:	4602      	mov	r2, r0
 800290a:	460b      	mov	r3, r1
 800290c:	4610      	mov	r0, r2
 800290e:	4619      	mov	r1, r3
 8002910:	687b      	ldr	r3, [r7, #4]
 8002912:	461a      	mov	r2, r3
 8002914:	f04f 0300 	mov.w	r3, #0
 8002918:	f7fd fc5c 	bl	80001d4 <__aeabi_uldivmod>
 800291c:	4602      	mov	r2, r0
 800291e:	460b      	mov	r3, r1
 8002920:	4613      	mov	r3, r2
 8002922:	60fb      	str	r3, [r7, #12]
 8002924:	4b0b      	ldr	r3, [pc, #44]	; (8002954 <HAL_RCC_GetSysClockFreq+0x1b8>)
 8002926:	685b      	ldr	r3, [r3, #4]
 8002928:	0c1b      	lsrs	r3, r3, #16
 800292a:	f003 0303 	and.w	r3, r3, #3
 800292e:	3301      	adds	r3, #1
 8002930:	005b      	lsls	r3, r3, #1
 8002932:	603b      	str	r3, [r7, #0]
 8002934:	68fa      	ldr	r2, [r7, #12]
 8002936:	683b      	ldr	r3, [r7, #0]
 8002938:	fbb2 f3f3 	udiv	r3, r2, r3
 800293c:	60bb      	str	r3, [r7, #8]
 800293e:	e002      	b.n	8002946 <HAL_RCC_GetSysClockFreq+0x1aa>
 8002940:	4b05      	ldr	r3, [pc, #20]	; (8002958 <HAL_RCC_GetSysClockFreq+0x1bc>)
 8002942:	60bb      	str	r3, [r7, #8]
 8002944:	bf00      	nop
 8002946:	68bb      	ldr	r3, [r7, #8]
 8002948:	4618      	mov	r0, r3
 800294a:	3710      	adds	r7, #16
 800294c:	46bd      	mov	sp, r7
 800294e:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 8002952:	bf00      	nop
 8002954:	40023800 	.word	0x40023800
 8002958:	00f42400 	.word	0x00f42400
 800295c:	007a1200 	.word	0x007a1200

08002960 <HAL_RCC_GetHCLKFreq>:
 8002960:	b480      	push	{r7}
 8002962:	af00      	add	r7, sp, #0
 8002964:	4b03      	ldr	r3, [pc, #12]	; (8002974 <HAL_RCC_GetHCLKFreq+0x14>)
 8002966:	681b      	ldr	r3, [r3, #0]
 8002968:	4618      	mov	r0, r3
 800296a:	46bd      	mov	sp, r7
 800296c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002970:	4770      	bx	lr
 8002972:	bf00      	nop
 8002974:	20000000 	.word	0x20000000

08002978 <HAL_RCC_GetPCLK1Freq>:
 8002978:	b580      	push	{r7, lr}
 800297a:	af00      	add	r7, sp, #0
 800297c:	f7ff fff0 	bl	8002960 <HAL_RCC_GetHCLKFreq>
 8002980:	4602      	mov	r2, r0
 8002982:	4b05      	ldr	r3, [pc, #20]	; (8002998 <HAL_RCC_GetPCLK1Freq+0x20>)
 8002984:	689b      	ldr	r3, [r3, #8]
 8002986:	0a9b      	lsrs	r3, r3, #10
 8002988:	f003 0307 	and.w	r3, r3, #7
 800298c:	4903      	ldr	r1, [pc, #12]	; (800299c <HAL_RCC_GetPCLK1Freq+0x24>)
 800298e:	5ccb      	ldrb	r3, [r1, r3]
 8002990:	fa22 f303 	lsr.w	r3, r2, r3
 8002994:	4618      	mov	r0, r3
 8002996:	bd80      	pop	{r7, pc}
 8002998:	40023800 	.word	0x40023800
 800299c:	080035d4 	.word	0x080035d4

080029a0 <HAL_RCC_GetPCLK2Freq>:
 80029a0:	b580      	push	{r7, lr}
 80029a2:	af00      	add	r7, sp, #0
 80029a4:	f7ff ffdc 	bl	8002960 <HAL_RCC_GetHCLKFreq>
 80029a8:	4602      	mov	r2, r0
 80029aa:	4b05      	ldr	r3, [pc, #20]	; (80029c0 <HAL_RCC_GetPCLK2Freq+0x20>)
 80029ac:	689b      	ldr	r3, [r3, #8]
 80029ae:	0b5b      	lsrs	r3, r3, #13
 80029b0:	f003 0307 	and.w	r3, r3, #7
 80029b4:	4903      	ldr	r1, [pc, #12]	; (80029c4 <HAL_RCC_GetPCLK2Freq+0x24>)
 80029b6:	5ccb      	ldrb	r3, [r1, r3]
 80029b8:	fa22 f303 	lsr.w	r3, r2, r3
 80029bc:	4618      	mov	r0, r3
 80029be:	bd80      	pop	{r7, pc}
 80029c0:	40023800 	.word	0x40023800
 80029c4:	080035d4 	.word	0x080035d4

080029c8 <HAL_UART_Init>:
 80029c8:	b580      	push	{r7, lr}
 80029ca:	b082      	sub	sp, #8
 80029cc:	af00      	add	r7, sp, #0
 80029ce:	6078      	str	r0, [r7, #4]
 80029d0:	687b      	ldr	r3, [r7, #4]
 80029d2:	2b00      	cmp	r3, #0
 80029d4:	d101      	bne.n	80029da <HAL_UART_Init+0x12>
 80029d6:	2301      	movs	r3, #1
 80029d8:	e03f      	b.n	8002a5a <HAL_UART_Init+0x92>
 80029da:	687b      	ldr	r3, [r7, #4]
 80029dc:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80029e0:	b2db      	uxtb	r3, r3
 80029e2:	2b00      	cmp	r3, #0
 80029e4:	d106      	bne.n	80029f4 <HAL_UART_Init+0x2c>
 80029e6:	687b      	ldr	r3, [r7, #4]
 80029e8:	2200      	movs	r2, #0
 80029ea:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80029ee:	6878      	ldr	r0, [r7, #4]
 80029f0:	f7fe fec8 	bl	8001784 <HAL_UART_MspInit>
 80029f4:	687b      	ldr	r3, [r7, #4]
 80029f6:	2224      	movs	r2, #36	; 0x24
 80029f8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80029fc:	687b      	ldr	r3, [r7, #4]
 80029fe:	681b      	ldr	r3, [r3, #0]
 8002a00:	68da      	ldr	r2, [r3, #12]
 8002a02:	687b      	ldr	r3, [r7, #4]
 8002a04:	681b      	ldr	r3, [r3, #0]
 8002a06:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8002a0a:	60da      	str	r2, [r3, #12]
 8002a0c:	6878      	ldr	r0, [r7, #4]
 8002a0e:	f000 fbd9 	bl	80031c4 <UART_SetConfig>
 8002a12:	687b      	ldr	r3, [r7, #4]
 8002a14:	681b      	ldr	r3, [r3, #0]
 8002a16:	691a      	ldr	r2, [r3, #16]
 8002a18:	687b      	ldr	r3, [r7, #4]
 8002a1a:	681b      	ldr	r3, [r3, #0]
 8002a1c:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8002a20:	611a      	str	r2, [r3, #16]
 8002a22:	687b      	ldr	r3, [r7, #4]
 8002a24:	681b      	ldr	r3, [r3, #0]
 8002a26:	695a      	ldr	r2, [r3, #20]
 8002a28:	687b      	ldr	r3, [r7, #4]
 8002a2a:	681b      	ldr	r3, [r3, #0]
 8002a2c:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8002a30:	615a      	str	r2, [r3, #20]
 8002a32:	687b      	ldr	r3, [r7, #4]
 8002a34:	681b      	ldr	r3, [r3, #0]
 8002a36:	68da      	ldr	r2, [r3, #12]
 8002a38:	687b      	ldr	r3, [r7, #4]
 8002a3a:	681b      	ldr	r3, [r3, #0]
 8002a3c:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8002a40:	60da      	str	r2, [r3, #12]
 8002a42:	687b      	ldr	r3, [r7, #4]
 8002a44:	2200      	movs	r2, #0
 8002a46:	641a      	str	r2, [r3, #64]	; 0x40
 8002a48:	687b      	ldr	r3, [r7, #4]
 8002a4a:	2220      	movs	r2, #32
 8002a4c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002a50:	687b      	ldr	r3, [r7, #4]
 8002a52:	2220      	movs	r2, #32
 8002a54:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002a58:	2300      	movs	r3, #0
 8002a5a:	4618      	mov	r0, r3
 8002a5c:	3708      	adds	r7, #8
 8002a5e:	46bd      	mov	sp, r7
 8002a60:	bd80      	pop	{r7, pc}

08002a62 <HAL_UART_Transmit_IT>:
 8002a62:	b480      	push	{r7}
 8002a64:	b085      	sub	sp, #20
 8002a66:	af00      	add	r7, sp, #0
 8002a68:	60f8      	str	r0, [r7, #12]
 8002a6a:	60b9      	str	r1, [r7, #8]
 8002a6c:	4613      	mov	r3, r2
 8002a6e:	80fb      	strh	r3, [r7, #6]
 8002a70:	68fb      	ldr	r3, [r7, #12]
 8002a72:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002a76:	b2db      	uxtb	r3, r3
 8002a78:	2b20      	cmp	r3, #32
 8002a7a:	d130      	bne.n	8002ade <HAL_UART_Transmit_IT+0x7c>
 8002a7c:	68bb      	ldr	r3, [r7, #8]
 8002a7e:	2b00      	cmp	r3, #0
 8002a80:	d002      	beq.n	8002a88 <HAL_UART_Transmit_IT+0x26>
 8002a82:	88fb      	ldrh	r3, [r7, #6]
 8002a84:	2b00      	cmp	r3, #0
 8002a86:	d101      	bne.n	8002a8c <HAL_UART_Transmit_IT+0x2a>
 8002a88:	2301      	movs	r3, #1
 8002a8a:	e029      	b.n	8002ae0 <HAL_UART_Transmit_IT+0x7e>
 8002a8c:	68fb      	ldr	r3, [r7, #12]
 8002a8e:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002a92:	2b01      	cmp	r3, #1
 8002a94:	d101      	bne.n	8002a9a <HAL_UART_Transmit_IT+0x38>
 8002a96:	2302      	movs	r3, #2
 8002a98:	e022      	b.n	8002ae0 <HAL_UART_Transmit_IT+0x7e>
 8002a9a:	68fb      	ldr	r3, [r7, #12]
 8002a9c:	2201      	movs	r2, #1
 8002a9e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002aa2:	68fb      	ldr	r3, [r7, #12]
 8002aa4:	68ba      	ldr	r2, [r7, #8]
 8002aa6:	621a      	str	r2, [r3, #32]
 8002aa8:	68fb      	ldr	r3, [r7, #12]
 8002aaa:	88fa      	ldrh	r2, [r7, #6]
 8002aac:	849a      	strh	r2, [r3, #36]	; 0x24
 8002aae:	68fb      	ldr	r3, [r7, #12]
 8002ab0:	88fa      	ldrh	r2, [r7, #6]
 8002ab2:	84da      	strh	r2, [r3, #38]	; 0x26
 8002ab4:	68fb      	ldr	r3, [r7, #12]
 8002ab6:	2200      	movs	r2, #0
 8002ab8:	641a      	str	r2, [r3, #64]	; 0x40
 8002aba:	68fb      	ldr	r3, [r7, #12]
 8002abc:	2221      	movs	r2, #33	; 0x21
 8002abe:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002ac2:	68fb      	ldr	r3, [r7, #12]
 8002ac4:	2200      	movs	r2, #0
 8002ac6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002aca:	68fb      	ldr	r3, [r7, #12]
 8002acc:	681b      	ldr	r3, [r3, #0]
 8002ace:	68da      	ldr	r2, [r3, #12]
 8002ad0:	68fb      	ldr	r3, [r7, #12]
 8002ad2:	681b      	ldr	r3, [r3, #0]
 8002ad4:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8002ad8:	60da      	str	r2, [r3, #12]
 8002ada:	2300      	movs	r3, #0
 8002adc:	e000      	b.n	8002ae0 <HAL_UART_Transmit_IT+0x7e>
 8002ade:	2302      	movs	r3, #2
 8002ae0:	4618      	mov	r0, r3
 8002ae2:	3714      	adds	r7, #20
 8002ae4:	46bd      	mov	sp, r7
 8002ae6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002aea:	4770      	bx	lr

08002aec <HAL_UART_Receive_IT>:
 8002aec:	b580      	push	{r7, lr}
 8002aee:	b084      	sub	sp, #16
 8002af0:	af00      	add	r7, sp, #0
 8002af2:	60f8      	str	r0, [r7, #12]
 8002af4:	60b9      	str	r1, [r7, #8]
 8002af6:	4613      	mov	r3, r2
 8002af8:	80fb      	strh	r3, [r7, #6]
 8002afa:	68fb      	ldr	r3, [r7, #12]
 8002afc:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8002b00:	b2db      	uxtb	r3, r3
 8002b02:	2b20      	cmp	r3, #32
 8002b04:	d11d      	bne.n	8002b42 <HAL_UART_Receive_IT+0x56>
 8002b06:	68bb      	ldr	r3, [r7, #8]
 8002b08:	2b00      	cmp	r3, #0
 8002b0a:	d002      	beq.n	8002b12 <HAL_UART_Receive_IT+0x26>
 8002b0c:	88fb      	ldrh	r3, [r7, #6]
 8002b0e:	2b00      	cmp	r3, #0
 8002b10:	d101      	bne.n	8002b16 <HAL_UART_Receive_IT+0x2a>
 8002b12:	2301      	movs	r3, #1
 8002b14:	e016      	b.n	8002b44 <HAL_UART_Receive_IT+0x58>
 8002b16:	68fb      	ldr	r3, [r7, #12]
 8002b18:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002b1c:	2b01      	cmp	r3, #1
 8002b1e:	d101      	bne.n	8002b24 <HAL_UART_Receive_IT+0x38>
 8002b20:	2302      	movs	r3, #2
 8002b22:	e00f      	b.n	8002b44 <HAL_UART_Receive_IT+0x58>
 8002b24:	68fb      	ldr	r3, [r7, #12]
 8002b26:	2201      	movs	r2, #1
 8002b28:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002b2c:	68fb      	ldr	r3, [r7, #12]
 8002b2e:	2200      	movs	r2, #0
 8002b30:	631a      	str	r2, [r3, #48]	; 0x30
 8002b32:	88fb      	ldrh	r3, [r7, #6]
 8002b34:	461a      	mov	r2, r3
 8002b36:	68b9      	ldr	r1, [r7, #8]
 8002b38:	68f8      	ldr	r0, [r7, #12]
 8002b3a:	f000 f9c9 	bl	8002ed0 <UART_Start_Receive_IT>
 8002b3e:	4603      	mov	r3, r0
 8002b40:	e000      	b.n	8002b44 <HAL_UART_Receive_IT+0x58>
 8002b42:	2302      	movs	r3, #2
 8002b44:	4618      	mov	r0, r3
 8002b46:	3710      	adds	r7, #16
 8002b48:	46bd      	mov	sp, r7
 8002b4a:	bd80      	pop	{r7, pc}

08002b4c <HAL_UART_IRQHandler>:
 8002b4c:	b580      	push	{r7, lr}
 8002b4e:	b08a      	sub	sp, #40	; 0x28
 8002b50:	af00      	add	r7, sp, #0
 8002b52:	6078      	str	r0, [r7, #4]
 8002b54:	687b      	ldr	r3, [r7, #4]
 8002b56:	681b      	ldr	r3, [r3, #0]
 8002b58:	681b      	ldr	r3, [r3, #0]
 8002b5a:	627b      	str	r3, [r7, #36]	; 0x24
 8002b5c:	687b      	ldr	r3, [r7, #4]
 8002b5e:	681b      	ldr	r3, [r3, #0]
 8002b60:	68db      	ldr	r3, [r3, #12]
 8002b62:	623b      	str	r3, [r7, #32]
 8002b64:	687b      	ldr	r3, [r7, #4]
 8002b66:	681b      	ldr	r3, [r3, #0]
 8002b68:	695b      	ldr	r3, [r3, #20]
 8002b6a:	61fb      	str	r3, [r7, #28]
 8002b6c:	2300      	movs	r3, #0
 8002b6e:	61bb      	str	r3, [r7, #24]
 8002b70:	2300      	movs	r3, #0
 8002b72:	617b      	str	r3, [r7, #20]
 8002b74:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002b76:	f003 030f 	and.w	r3, r3, #15
 8002b7a:	61bb      	str	r3, [r7, #24]
 8002b7c:	69bb      	ldr	r3, [r7, #24]
 8002b7e:	2b00      	cmp	r3, #0
 8002b80:	d10d      	bne.n	8002b9e <HAL_UART_IRQHandler+0x52>
 8002b82:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002b84:	f003 0320 	and.w	r3, r3, #32
 8002b88:	2b00      	cmp	r3, #0
 8002b8a:	d008      	beq.n	8002b9e <HAL_UART_IRQHandler+0x52>
 8002b8c:	6a3b      	ldr	r3, [r7, #32]
 8002b8e:	f003 0320 	and.w	r3, r3, #32
 8002b92:	2b00      	cmp	r3, #0
 8002b94:	d003      	beq.n	8002b9e <HAL_UART_IRQHandler+0x52>
 8002b96:	6878      	ldr	r0, [r7, #4]
 8002b98:	f000 fa7d 	bl	8003096 <UART_Receive_IT>
 8002b9c:	e17c      	b.n	8002e98 <HAL_UART_IRQHandler+0x34c>
 8002b9e:	69bb      	ldr	r3, [r7, #24]
 8002ba0:	2b00      	cmp	r3, #0
 8002ba2:	f000 80b1 	beq.w	8002d08 <HAL_UART_IRQHandler+0x1bc>
 8002ba6:	69fb      	ldr	r3, [r7, #28]
 8002ba8:	f003 0301 	and.w	r3, r3, #1
 8002bac:	2b00      	cmp	r3, #0
 8002bae:	d105      	bne.n	8002bbc <HAL_UART_IRQHandler+0x70>
 8002bb0:	6a3b      	ldr	r3, [r7, #32]
 8002bb2:	f403 7390 	and.w	r3, r3, #288	; 0x120
 8002bb6:	2b00      	cmp	r3, #0
 8002bb8:	f000 80a6 	beq.w	8002d08 <HAL_UART_IRQHandler+0x1bc>
 8002bbc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002bbe:	f003 0301 	and.w	r3, r3, #1
 8002bc2:	2b00      	cmp	r3, #0
 8002bc4:	d00a      	beq.n	8002bdc <HAL_UART_IRQHandler+0x90>
 8002bc6:	6a3b      	ldr	r3, [r7, #32]
 8002bc8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002bcc:	2b00      	cmp	r3, #0
 8002bce:	d005      	beq.n	8002bdc <HAL_UART_IRQHandler+0x90>
 8002bd0:	687b      	ldr	r3, [r7, #4]
 8002bd2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002bd4:	f043 0201 	orr.w	r2, r3, #1
 8002bd8:	687b      	ldr	r3, [r7, #4]
 8002bda:	641a      	str	r2, [r3, #64]	; 0x40
 8002bdc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002bde:	f003 0304 	and.w	r3, r3, #4
 8002be2:	2b00      	cmp	r3, #0
 8002be4:	d00a      	beq.n	8002bfc <HAL_UART_IRQHandler+0xb0>
 8002be6:	69fb      	ldr	r3, [r7, #28]
 8002be8:	f003 0301 	and.w	r3, r3, #1
 8002bec:	2b00      	cmp	r3, #0
 8002bee:	d005      	beq.n	8002bfc <HAL_UART_IRQHandler+0xb0>
 8002bf0:	687b      	ldr	r3, [r7, #4]
 8002bf2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002bf4:	f043 0202 	orr.w	r2, r3, #2
 8002bf8:	687b      	ldr	r3, [r7, #4]
 8002bfa:	641a      	str	r2, [r3, #64]	; 0x40
 8002bfc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002bfe:	f003 0302 	and.w	r3, r3, #2
 8002c02:	2b00      	cmp	r3, #0
 8002c04:	d00a      	beq.n	8002c1c <HAL_UART_IRQHandler+0xd0>
 8002c06:	69fb      	ldr	r3, [r7, #28]
 8002c08:	f003 0301 	and.w	r3, r3, #1
 8002c0c:	2b00      	cmp	r3, #0
 8002c0e:	d005      	beq.n	8002c1c <HAL_UART_IRQHandler+0xd0>
 8002c10:	687b      	ldr	r3, [r7, #4]
 8002c12:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002c14:	f043 0204 	orr.w	r2, r3, #4
 8002c18:	687b      	ldr	r3, [r7, #4]
 8002c1a:	641a      	str	r2, [r3, #64]	; 0x40
 8002c1c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002c1e:	f003 0308 	and.w	r3, r3, #8
 8002c22:	2b00      	cmp	r3, #0
 8002c24:	d00f      	beq.n	8002c46 <HAL_UART_IRQHandler+0xfa>
 8002c26:	6a3b      	ldr	r3, [r7, #32]
 8002c28:	f003 0320 	and.w	r3, r3, #32
 8002c2c:	2b00      	cmp	r3, #0
 8002c2e:	d104      	bne.n	8002c3a <HAL_UART_IRQHandler+0xee>
 8002c30:	69fb      	ldr	r3, [r7, #28]
 8002c32:	f003 0301 	and.w	r3, r3, #1
 8002c36:	2b00      	cmp	r3, #0
 8002c38:	d005      	beq.n	8002c46 <HAL_UART_IRQHandler+0xfa>
 8002c3a:	687b      	ldr	r3, [r7, #4]
 8002c3c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002c3e:	f043 0208 	orr.w	r2, r3, #8
 8002c42:	687b      	ldr	r3, [r7, #4]
 8002c44:	641a      	str	r2, [r3, #64]	; 0x40
 8002c46:	687b      	ldr	r3, [r7, #4]
 8002c48:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002c4a:	2b00      	cmp	r3, #0
 8002c4c:	f000 811f 	beq.w	8002e8e <HAL_UART_IRQHandler+0x342>
 8002c50:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002c52:	f003 0320 	and.w	r3, r3, #32
 8002c56:	2b00      	cmp	r3, #0
 8002c58:	d007      	beq.n	8002c6a <HAL_UART_IRQHandler+0x11e>
 8002c5a:	6a3b      	ldr	r3, [r7, #32]
 8002c5c:	f003 0320 	and.w	r3, r3, #32
 8002c60:	2b00      	cmp	r3, #0
 8002c62:	d002      	beq.n	8002c6a <HAL_UART_IRQHandler+0x11e>
 8002c64:	6878      	ldr	r0, [r7, #4]
 8002c66:	f000 fa16 	bl	8003096 <UART_Receive_IT>
 8002c6a:	687b      	ldr	r3, [r7, #4]
 8002c6c:	681b      	ldr	r3, [r3, #0]
 8002c6e:	695b      	ldr	r3, [r3, #20]
 8002c70:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002c74:	2b40      	cmp	r3, #64	; 0x40
 8002c76:	bf0c      	ite	eq
 8002c78:	2301      	moveq	r3, #1
 8002c7a:	2300      	movne	r3, #0
 8002c7c:	b2db      	uxtb	r3, r3
 8002c7e:	617b      	str	r3, [r7, #20]
 8002c80:	687b      	ldr	r3, [r7, #4]
 8002c82:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002c84:	f003 0308 	and.w	r3, r3, #8
 8002c88:	2b00      	cmp	r3, #0
 8002c8a:	d102      	bne.n	8002c92 <HAL_UART_IRQHandler+0x146>
 8002c8c:	697b      	ldr	r3, [r7, #20]
 8002c8e:	2b00      	cmp	r3, #0
 8002c90:	d031      	beq.n	8002cf6 <HAL_UART_IRQHandler+0x1aa>
 8002c92:	6878      	ldr	r0, [r7, #4]
 8002c94:	f000 f956 	bl	8002f44 <UART_EndRxTransfer>
 8002c98:	687b      	ldr	r3, [r7, #4]
 8002c9a:	681b      	ldr	r3, [r3, #0]
 8002c9c:	695b      	ldr	r3, [r3, #20]
 8002c9e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002ca2:	2b40      	cmp	r3, #64	; 0x40
 8002ca4:	d123      	bne.n	8002cee <HAL_UART_IRQHandler+0x1a2>
 8002ca6:	687b      	ldr	r3, [r7, #4]
 8002ca8:	681b      	ldr	r3, [r3, #0]
 8002caa:	695a      	ldr	r2, [r3, #20]
 8002cac:	687b      	ldr	r3, [r7, #4]
 8002cae:	681b      	ldr	r3, [r3, #0]
 8002cb0:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8002cb4:	615a      	str	r2, [r3, #20]
 8002cb6:	687b      	ldr	r3, [r7, #4]
 8002cb8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002cba:	2b00      	cmp	r3, #0
 8002cbc:	d013      	beq.n	8002ce6 <HAL_UART_IRQHandler+0x19a>
 8002cbe:	687b      	ldr	r3, [r7, #4]
 8002cc0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002cc2:	4a77      	ldr	r2, [pc, #476]	; (8002ea0 <HAL_UART_IRQHandler+0x354>)
 8002cc4:	651a      	str	r2, [r3, #80]	; 0x50
 8002cc6:	687b      	ldr	r3, [r7, #4]
 8002cc8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002cca:	4618      	mov	r0, r3
 8002ccc:	f7ff f815 	bl	8001cfa <HAL_DMA_Abort_IT>
 8002cd0:	4603      	mov	r3, r0
 8002cd2:	2b00      	cmp	r3, #0
 8002cd4:	d016      	beq.n	8002d04 <HAL_UART_IRQHandler+0x1b8>
 8002cd6:	687b      	ldr	r3, [r7, #4]
 8002cd8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002cda:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8002cdc:	687a      	ldr	r2, [r7, #4]
 8002cde:	6b92      	ldr	r2, [r2, #56]	; 0x38
 8002ce0:	4610      	mov	r0, r2
 8002ce2:	4798      	blx	r3
 8002ce4:	e00e      	b.n	8002d04 <HAL_UART_IRQHandler+0x1b8>
 8002ce6:	6878      	ldr	r0, [r7, #4]
 8002ce8:	f000 f8dc 	bl	8002ea4 <HAL_UART_ErrorCallback>
 8002cec:	e00a      	b.n	8002d04 <HAL_UART_IRQHandler+0x1b8>
 8002cee:	6878      	ldr	r0, [r7, #4]
 8002cf0:	f000 f8d8 	bl	8002ea4 <HAL_UART_ErrorCallback>
 8002cf4:	e006      	b.n	8002d04 <HAL_UART_IRQHandler+0x1b8>
 8002cf6:	6878      	ldr	r0, [r7, #4]
 8002cf8:	f000 f8d4 	bl	8002ea4 <HAL_UART_ErrorCallback>
 8002cfc:	687b      	ldr	r3, [r7, #4]
 8002cfe:	2200      	movs	r2, #0
 8002d00:	641a      	str	r2, [r3, #64]	; 0x40
 8002d02:	e0c4      	b.n	8002e8e <HAL_UART_IRQHandler+0x342>
 8002d04:	bf00      	nop
 8002d06:	e0c2      	b.n	8002e8e <HAL_UART_IRQHandler+0x342>
 8002d08:	687b      	ldr	r3, [r7, #4]
 8002d0a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002d0c:	2b01      	cmp	r3, #1
 8002d0e:	f040 80a2 	bne.w	8002e56 <HAL_UART_IRQHandler+0x30a>
 8002d12:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002d14:	f003 0310 	and.w	r3, r3, #16
 8002d18:	2b00      	cmp	r3, #0
 8002d1a:	f000 809c 	beq.w	8002e56 <HAL_UART_IRQHandler+0x30a>
 8002d1e:	6a3b      	ldr	r3, [r7, #32]
 8002d20:	f003 0310 	and.w	r3, r3, #16
 8002d24:	2b00      	cmp	r3, #0
 8002d26:	f000 8096 	beq.w	8002e56 <HAL_UART_IRQHandler+0x30a>
 8002d2a:	2300      	movs	r3, #0
 8002d2c:	60fb      	str	r3, [r7, #12]
 8002d2e:	687b      	ldr	r3, [r7, #4]
 8002d30:	681b      	ldr	r3, [r3, #0]
 8002d32:	681b      	ldr	r3, [r3, #0]
 8002d34:	60fb      	str	r3, [r7, #12]
 8002d36:	687b      	ldr	r3, [r7, #4]
 8002d38:	681b      	ldr	r3, [r3, #0]
 8002d3a:	685b      	ldr	r3, [r3, #4]
 8002d3c:	60fb      	str	r3, [r7, #12]
 8002d3e:	68fb      	ldr	r3, [r7, #12]
 8002d40:	687b      	ldr	r3, [r7, #4]
 8002d42:	681b      	ldr	r3, [r3, #0]
 8002d44:	695b      	ldr	r3, [r3, #20]
 8002d46:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002d4a:	2b40      	cmp	r3, #64	; 0x40
 8002d4c:	d14f      	bne.n	8002dee <HAL_UART_IRQHandler+0x2a2>
 8002d4e:	687b      	ldr	r3, [r7, #4]
 8002d50:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002d52:	681b      	ldr	r3, [r3, #0]
 8002d54:	685b      	ldr	r3, [r3, #4]
 8002d56:	823b      	strh	r3, [r7, #16]
 8002d58:	8a3b      	ldrh	r3, [r7, #16]
 8002d5a:	2b00      	cmp	r3, #0
 8002d5c:	f000 8099 	beq.w	8002e92 <HAL_UART_IRQHandler+0x346>
 8002d60:	687b      	ldr	r3, [r7, #4]
 8002d62:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 8002d64:	8a3a      	ldrh	r2, [r7, #16]
 8002d66:	429a      	cmp	r2, r3
 8002d68:	f080 8093 	bcs.w	8002e92 <HAL_UART_IRQHandler+0x346>
 8002d6c:	687b      	ldr	r3, [r7, #4]
 8002d6e:	8a3a      	ldrh	r2, [r7, #16]
 8002d70:	85da      	strh	r2, [r3, #46]	; 0x2e
 8002d72:	687b      	ldr	r3, [r7, #4]
 8002d74:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002d76:	69db      	ldr	r3, [r3, #28]
 8002d78:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8002d7c:	d02b      	beq.n	8002dd6 <HAL_UART_IRQHandler+0x28a>
 8002d7e:	687b      	ldr	r3, [r7, #4]
 8002d80:	681b      	ldr	r3, [r3, #0]
 8002d82:	68da      	ldr	r2, [r3, #12]
 8002d84:	687b      	ldr	r3, [r7, #4]
 8002d86:	681b      	ldr	r3, [r3, #0]
 8002d88:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8002d8c:	60da      	str	r2, [r3, #12]
 8002d8e:	687b      	ldr	r3, [r7, #4]
 8002d90:	681b      	ldr	r3, [r3, #0]
 8002d92:	695a      	ldr	r2, [r3, #20]
 8002d94:	687b      	ldr	r3, [r7, #4]
 8002d96:	681b      	ldr	r3, [r3, #0]
 8002d98:	f022 0201 	bic.w	r2, r2, #1
 8002d9c:	615a      	str	r2, [r3, #20]
 8002d9e:	687b      	ldr	r3, [r7, #4]
 8002da0:	681b      	ldr	r3, [r3, #0]
 8002da2:	695a      	ldr	r2, [r3, #20]
 8002da4:	687b      	ldr	r3, [r7, #4]
 8002da6:	681b      	ldr	r3, [r3, #0]
 8002da8:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8002dac:	615a      	str	r2, [r3, #20]
 8002dae:	687b      	ldr	r3, [r7, #4]
 8002db0:	2220      	movs	r2, #32
 8002db2:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002db6:	687b      	ldr	r3, [r7, #4]
 8002db8:	2200      	movs	r2, #0
 8002dba:	631a      	str	r2, [r3, #48]	; 0x30
 8002dbc:	687b      	ldr	r3, [r7, #4]
 8002dbe:	681b      	ldr	r3, [r3, #0]
 8002dc0:	68da      	ldr	r2, [r3, #12]
 8002dc2:	687b      	ldr	r3, [r7, #4]
 8002dc4:	681b      	ldr	r3, [r3, #0]
 8002dc6:	f022 0210 	bic.w	r2, r2, #16
 8002dca:	60da      	str	r2, [r3, #12]
 8002dcc:	687b      	ldr	r3, [r7, #4]
 8002dce:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002dd0:	4618      	mov	r0, r3
 8002dd2:	f7fe ff22 	bl	8001c1a <HAL_DMA_Abort>
 8002dd6:	687b      	ldr	r3, [r7, #4]
 8002dd8:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 8002dda:	687b      	ldr	r3, [r7, #4]
 8002ddc:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8002dde:	b29b      	uxth	r3, r3
 8002de0:	1ad3      	subs	r3, r2, r3
 8002de2:	b29b      	uxth	r3, r3
 8002de4:	4619      	mov	r1, r3
 8002de6:	6878      	ldr	r0, [r7, #4]
 8002de8:	f000 f866 	bl	8002eb8 <HAL_UARTEx_RxEventCallback>
 8002dec:	e051      	b.n	8002e92 <HAL_UART_IRQHandler+0x346>
 8002dee:	687b      	ldr	r3, [r7, #4]
 8002df0:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 8002df2:	687b      	ldr	r3, [r7, #4]
 8002df4:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8002df6:	b29b      	uxth	r3, r3
 8002df8:	1ad3      	subs	r3, r2, r3
 8002dfa:	827b      	strh	r3, [r7, #18]
 8002dfc:	687b      	ldr	r3, [r7, #4]
 8002dfe:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8002e00:	b29b      	uxth	r3, r3
 8002e02:	2b00      	cmp	r3, #0
 8002e04:	d047      	beq.n	8002e96 <HAL_UART_IRQHandler+0x34a>
 8002e06:	8a7b      	ldrh	r3, [r7, #18]
 8002e08:	2b00      	cmp	r3, #0
 8002e0a:	d044      	beq.n	8002e96 <HAL_UART_IRQHandler+0x34a>
 8002e0c:	687b      	ldr	r3, [r7, #4]
 8002e0e:	681b      	ldr	r3, [r3, #0]
 8002e10:	68da      	ldr	r2, [r3, #12]
 8002e12:	687b      	ldr	r3, [r7, #4]
 8002e14:	681b      	ldr	r3, [r3, #0]
 8002e16:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 8002e1a:	60da      	str	r2, [r3, #12]
 8002e1c:	687b      	ldr	r3, [r7, #4]
 8002e1e:	681b      	ldr	r3, [r3, #0]
 8002e20:	695a      	ldr	r2, [r3, #20]
 8002e22:	687b      	ldr	r3, [r7, #4]
 8002e24:	681b      	ldr	r3, [r3, #0]
 8002e26:	f022 0201 	bic.w	r2, r2, #1
 8002e2a:	615a      	str	r2, [r3, #20]
 8002e2c:	687b      	ldr	r3, [r7, #4]
 8002e2e:	2220      	movs	r2, #32
 8002e30:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002e34:	687b      	ldr	r3, [r7, #4]
 8002e36:	2200      	movs	r2, #0
 8002e38:	631a      	str	r2, [r3, #48]	; 0x30
 8002e3a:	687b      	ldr	r3, [r7, #4]
 8002e3c:	681b      	ldr	r3, [r3, #0]
 8002e3e:	68da      	ldr	r2, [r3, #12]
 8002e40:	687b      	ldr	r3, [r7, #4]
 8002e42:	681b      	ldr	r3, [r3, #0]
 8002e44:	f022 0210 	bic.w	r2, r2, #16
 8002e48:	60da      	str	r2, [r3, #12]
 8002e4a:	8a7b      	ldrh	r3, [r7, #18]
 8002e4c:	4619      	mov	r1, r3
 8002e4e:	6878      	ldr	r0, [r7, #4]
 8002e50:	f000 f832 	bl	8002eb8 <HAL_UARTEx_RxEventCallback>
 8002e54:	e01f      	b.n	8002e96 <HAL_UART_IRQHandler+0x34a>
 8002e56:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002e58:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002e5c:	2b00      	cmp	r3, #0
 8002e5e:	d008      	beq.n	8002e72 <HAL_UART_IRQHandler+0x326>
 8002e60:	6a3b      	ldr	r3, [r7, #32]
 8002e62:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002e66:	2b00      	cmp	r3, #0
 8002e68:	d003      	beq.n	8002e72 <HAL_UART_IRQHandler+0x326>
 8002e6a:	6878      	ldr	r0, [r7, #4]
 8002e6c:	f000 f8ab 	bl	8002fc6 <UART_Transmit_IT>
 8002e70:	e012      	b.n	8002e98 <HAL_UART_IRQHandler+0x34c>
 8002e72:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002e74:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002e78:	2b00      	cmp	r3, #0
 8002e7a:	d00d      	beq.n	8002e98 <HAL_UART_IRQHandler+0x34c>
 8002e7c:	6a3b      	ldr	r3, [r7, #32]
 8002e7e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002e82:	2b00      	cmp	r3, #0
 8002e84:	d008      	beq.n	8002e98 <HAL_UART_IRQHandler+0x34c>
 8002e86:	6878      	ldr	r0, [r7, #4]
 8002e88:	f000 f8ed 	bl	8003066 <UART_EndTransmit_IT>
 8002e8c:	e004      	b.n	8002e98 <HAL_UART_IRQHandler+0x34c>
 8002e8e:	bf00      	nop
 8002e90:	e002      	b.n	8002e98 <HAL_UART_IRQHandler+0x34c>
 8002e92:	bf00      	nop
 8002e94:	e000      	b.n	8002e98 <HAL_UART_IRQHandler+0x34c>
 8002e96:	bf00      	nop
 8002e98:	3728      	adds	r7, #40	; 0x28
 8002e9a:	46bd      	mov	sp, r7
 8002e9c:	bd80      	pop	{r7, pc}
 8002e9e:	bf00      	nop
 8002ea0:	08002f9f 	.word	0x08002f9f

08002ea4 <HAL_UART_ErrorCallback>:
 8002ea4:	b480      	push	{r7}
 8002ea6:	b083      	sub	sp, #12
 8002ea8:	af00      	add	r7, sp, #0
 8002eaa:	6078      	str	r0, [r7, #4]
 8002eac:	bf00      	nop
 8002eae:	370c      	adds	r7, #12
 8002eb0:	46bd      	mov	sp, r7
 8002eb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002eb6:	4770      	bx	lr

08002eb8 <HAL_UARTEx_RxEventCallback>:
 8002eb8:	b480      	push	{r7}
 8002eba:	b083      	sub	sp, #12
 8002ebc:	af00      	add	r7, sp, #0
 8002ebe:	6078      	str	r0, [r7, #4]
 8002ec0:	460b      	mov	r3, r1
 8002ec2:	807b      	strh	r3, [r7, #2]
 8002ec4:	bf00      	nop
 8002ec6:	370c      	adds	r7, #12
 8002ec8:	46bd      	mov	sp, r7
 8002eca:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ece:	4770      	bx	lr

08002ed0 <UART_Start_Receive_IT>:
 8002ed0:	b480      	push	{r7}
 8002ed2:	b085      	sub	sp, #20
 8002ed4:	af00      	add	r7, sp, #0
 8002ed6:	60f8      	str	r0, [r7, #12]
 8002ed8:	60b9      	str	r1, [r7, #8]
 8002eda:	4613      	mov	r3, r2
 8002edc:	80fb      	strh	r3, [r7, #6]
 8002ede:	68fb      	ldr	r3, [r7, #12]
 8002ee0:	68ba      	ldr	r2, [r7, #8]
 8002ee2:	629a      	str	r2, [r3, #40]	; 0x28
 8002ee4:	68fb      	ldr	r3, [r7, #12]
 8002ee6:	88fa      	ldrh	r2, [r7, #6]
 8002ee8:	859a      	strh	r2, [r3, #44]	; 0x2c
 8002eea:	68fb      	ldr	r3, [r7, #12]
 8002eec:	88fa      	ldrh	r2, [r7, #6]
 8002eee:	85da      	strh	r2, [r3, #46]	; 0x2e
 8002ef0:	68fb      	ldr	r3, [r7, #12]
 8002ef2:	2200      	movs	r2, #0
 8002ef4:	641a      	str	r2, [r3, #64]	; 0x40
 8002ef6:	68fb      	ldr	r3, [r7, #12]
 8002ef8:	2222      	movs	r2, #34	; 0x22
 8002efa:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002efe:	68fb      	ldr	r3, [r7, #12]
 8002f00:	2200      	movs	r2, #0
 8002f02:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002f06:	68fb      	ldr	r3, [r7, #12]
 8002f08:	681b      	ldr	r3, [r3, #0]
 8002f0a:	68da      	ldr	r2, [r3, #12]
 8002f0c:	68fb      	ldr	r3, [r7, #12]
 8002f0e:	681b      	ldr	r3, [r3, #0]
 8002f10:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8002f14:	60da      	str	r2, [r3, #12]
 8002f16:	68fb      	ldr	r3, [r7, #12]
 8002f18:	681b      	ldr	r3, [r3, #0]
 8002f1a:	695a      	ldr	r2, [r3, #20]
 8002f1c:	68fb      	ldr	r3, [r7, #12]
 8002f1e:	681b      	ldr	r3, [r3, #0]
 8002f20:	f042 0201 	orr.w	r2, r2, #1
 8002f24:	615a      	str	r2, [r3, #20]
 8002f26:	68fb      	ldr	r3, [r7, #12]
 8002f28:	681b      	ldr	r3, [r3, #0]
 8002f2a:	68da      	ldr	r2, [r3, #12]
 8002f2c:	68fb      	ldr	r3, [r7, #12]
 8002f2e:	681b      	ldr	r3, [r3, #0]
 8002f30:	f042 0220 	orr.w	r2, r2, #32
 8002f34:	60da      	str	r2, [r3, #12]
 8002f36:	2300      	movs	r3, #0
 8002f38:	4618      	mov	r0, r3
 8002f3a:	3714      	adds	r7, #20
 8002f3c:	46bd      	mov	sp, r7
 8002f3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f42:	4770      	bx	lr

08002f44 <UART_EndRxTransfer>:
 8002f44:	b480      	push	{r7}
 8002f46:	b083      	sub	sp, #12
 8002f48:	af00      	add	r7, sp, #0
 8002f4a:	6078      	str	r0, [r7, #4]
 8002f4c:	687b      	ldr	r3, [r7, #4]
 8002f4e:	681b      	ldr	r3, [r3, #0]
 8002f50:	68da      	ldr	r2, [r3, #12]
 8002f52:	687b      	ldr	r3, [r7, #4]
 8002f54:	681b      	ldr	r3, [r3, #0]
 8002f56:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 8002f5a:	60da      	str	r2, [r3, #12]
 8002f5c:	687b      	ldr	r3, [r7, #4]
 8002f5e:	681b      	ldr	r3, [r3, #0]
 8002f60:	695a      	ldr	r2, [r3, #20]
 8002f62:	687b      	ldr	r3, [r7, #4]
 8002f64:	681b      	ldr	r3, [r3, #0]
 8002f66:	f022 0201 	bic.w	r2, r2, #1
 8002f6a:	615a      	str	r2, [r3, #20]
 8002f6c:	687b      	ldr	r3, [r7, #4]
 8002f6e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002f70:	2b01      	cmp	r3, #1
 8002f72:	d107      	bne.n	8002f84 <UART_EndRxTransfer+0x40>
 8002f74:	687b      	ldr	r3, [r7, #4]
 8002f76:	681b      	ldr	r3, [r3, #0]
 8002f78:	68da      	ldr	r2, [r3, #12]
 8002f7a:	687b      	ldr	r3, [r7, #4]
 8002f7c:	681b      	ldr	r3, [r3, #0]
 8002f7e:	f022 0210 	bic.w	r2, r2, #16
 8002f82:	60da      	str	r2, [r3, #12]
 8002f84:	687b      	ldr	r3, [r7, #4]
 8002f86:	2220      	movs	r2, #32
 8002f88:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002f8c:	687b      	ldr	r3, [r7, #4]
 8002f8e:	2200      	movs	r2, #0
 8002f90:	631a      	str	r2, [r3, #48]	; 0x30
 8002f92:	bf00      	nop
 8002f94:	370c      	adds	r7, #12
 8002f96:	46bd      	mov	sp, r7
 8002f98:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f9c:	4770      	bx	lr

08002f9e <UART_DMAAbortOnError>:
 8002f9e:	b580      	push	{r7, lr}
 8002fa0:	b084      	sub	sp, #16
 8002fa2:	af00      	add	r7, sp, #0
 8002fa4:	6078      	str	r0, [r7, #4]
 8002fa6:	687b      	ldr	r3, [r7, #4]
 8002fa8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002faa:	60fb      	str	r3, [r7, #12]
 8002fac:	68fb      	ldr	r3, [r7, #12]
 8002fae:	2200      	movs	r2, #0
 8002fb0:	85da      	strh	r2, [r3, #46]	; 0x2e
 8002fb2:	68fb      	ldr	r3, [r7, #12]
 8002fb4:	2200      	movs	r2, #0
 8002fb6:	84da      	strh	r2, [r3, #38]	; 0x26
 8002fb8:	68f8      	ldr	r0, [r7, #12]
 8002fba:	f7ff ff73 	bl	8002ea4 <HAL_UART_ErrorCallback>
 8002fbe:	bf00      	nop
 8002fc0:	3710      	adds	r7, #16
 8002fc2:	46bd      	mov	sp, r7
 8002fc4:	bd80      	pop	{r7, pc}

08002fc6 <UART_Transmit_IT>:
 8002fc6:	b480      	push	{r7}
 8002fc8:	b085      	sub	sp, #20
 8002fca:	af00      	add	r7, sp, #0
 8002fcc:	6078      	str	r0, [r7, #4]
 8002fce:	687b      	ldr	r3, [r7, #4]
 8002fd0:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002fd4:	b2db      	uxtb	r3, r3
 8002fd6:	2b21      	cmp	r3, #33	; 0x21
 8002fd8:	d13e      	bne.n	8003058 <UART_Transmit_IT+0x92>
 8002fda:	687b      	ldr	r3, [r7, #4]
 8002fdc:	689b      	ldr	r3, [r3, #8]
 8002fde:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8002fe2:	d114      	bne.n	800300e <UART_Transmit_IT+0x48>
 8002fe4:	687b      	ldr	r3, [r7, #4]
 8002fe6:	691b      	ldr	r3, [r3, #16]
 8002fe8:	2b00      	cmp	r3, #0
 8002fea:	d110      	bne.n	800300e <UART_Transmit_IT+0x48>
 8002fec:	687b      	ldr	r3, [r7, #4]
 8002fee:	6a1b      	ldr	r3, [r3, #32]
 8002ff0:	60fb      	str	r3, [r7, #12]
 8002ff2:	68fb      	ldr	r3, [r7, #12]
 8002ff4:	881b      	ldrh	r3, [r3, #0]
 8002ff6:	461a      	mov	r2, r3
 8002ff8:	687b      	ldr	r3, [r7, #4]
 8002ffa:	681b      	ldr	r3, [r3, #0]
 8002ffc:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8003000:	605a      	str	r2, [r3, #4]
 8003002:	687b      	ldr	r3, [r7, #4]
 8003004:	6a1b      	ldr	r3, [r3, #32]
 8003006:	1c9a      	adds	r2, r3, #2
 8003008:	687b      	ldr	r3, [r7, #4]
 800300a:	621a      	str	r2, [r3, #32]
 800300c:	e008      	b.n	8003020 <UART_Transmit_IT+0x5a>
 800300e:	687b      	ldr	r3, [r7, #4]
 8003010:	6a1b      	ldr	r3, [r3, #32]
 8003012:	1c59      	adds	r1, r3, #1
 8003014:	687a      	ldr	r2, [r7, #4]
 8003016:	6211      	str	r1, [r2, #32]
 8003018:	781a      	ldrb	r2, [r3, #0]
 800301a:	687b      	ldr	r3, [r7, #4]
 800301c:	681b      	ldr	r3, [r3, #0]
 800301e:	605a      	str	r2, [r3, #4]
 8003020:	687b      	ldr	r3, [r7, #4]
 8003022:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8003024:	b29b      	uxth	r3, r3
 8003026:	3b01      	subs	r3, #1
 8003028:	b29b      	uxth	r3, r3
 800302a:	687a      	ldr	r2, [r7, #4]
 800302c:	4619      	mov	r1, r3
 800302e:	84d1      	strh	r1, [r2, #38]	; 0x26
 8003030:	2b00      	cmp	r3, #0
 8003032:	d10f      	bne.n	8003054 <UART_Transmit_IT+0x8e>
 8003034:	687b      	ldr	r3, [r7, #4]
 8003036:	681b      	ldr	r3, [r3, #0]
 8003038:	68da      	ldr	r2, [r3, #12]
 800303a:	687b      	ldr	r3, [r7, #4]
 800303c:	681b      	ldr	r3, [r3, #0]
 800303e:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8003042:	60da      	str	r2, [r3, #12]
 8003044:	687b      	ldr	r3, [r7, #4]
 8003046:	681b      	ldr	r3, [r3, #0]
 8003048:	68da      	ldr	r2, [r3, #12]
 800304a:	687b      	ldr	r3, [r7, #4]
 800304c:	681b      	ldr	r3, [r3, #0]
 800304e:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8003052:	60da      	str	r2, [r3, #12]
 8003054:	2300      	movs	r3, #0
 8003056:	e000      	b.n	800305a <UART_Transmit_IT+0x94>
 8003058:	2302      	movs	r3, #2
 800305a:	4618      	mov	r0, r3
 800305c:	3714      	adds	r7, #20
 800305e:	46bd      	mov	sp, r7
 8003060:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003064:	4770      	bx	lr

08003066 <UART_EndTransmit_IT>:
 8003066:	b580      	push	{r7, lr}
 8003068:	b082      	sub	sp, #8
 800306a:	af00      	add	r7, sp, #0
 800306c:	6078      	str	r0, [r7, #4]
 800306e:	687b      	ldr	r3, [r7, #4]
 8003070:	681b      	ldr	r3, [r3, #0]
 8003072:	68da      	ldr	r2, [r3, #12]
 8003074:	687b      	ldr	r3, [r7, #4]
 8003076:	681b      	ldr	r3, [r3, #0]
 8003078:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800307c:	60da      	str	r2, [r3, #12]
 800307e:	687b      	ldr	r3, [r7, #4]
 8003080:	2220      	movs	r2, #32
 8003082:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003086:	6878      	ldr	r0, [r7, #4]
 8003088:	f7fe fb3c 	bl	8001704 <HAL_UART_TxCpltCallback>
 800308c:	2300      	movs	r3, #0
 800308e:	4618      	mov	r0, r3
 8003090:	3708      	adds	r7, #8
 8003092:	46bd      	mov	sp, r7
 8003094:	bd80      	pop	{r7, pc}

08003096 <UART_Receive_IT>:
 8003096:	b580      	push	{r7, lr}
 8003098:	b084      	sub	sp, #16
 800309a:	af00      	add	r7, sp, #0
 800309c:	6078      	str	r0, [r7, #4]
 800309e:	687b      	ldr	r3, [r7, #4]
 80030a0:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 80030a4:	b2db      	uxtb	r3, r3
 80030a6:	2b22      	cmp	r3, #34	; 0x22
 80030a8:	f040 8087 	bne.w	80031ba <UART_Receive_IT+0x124>
 80030ac:	687b      	ldr	r3, [r7, #4]
 80030ae:	689b      	ldr	r3, [r3, #8]
 80030b0:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80030b4:	d117      	bne.n	80030e6 <UART_Receive_IT+0x50>
 80030b6:	687b      	ldr	r3, [r7, #4]
 80030b8:	691b      	ldr	r3, [r3, #16]
 80030ba:	2b00      	cmp	r3, #0
 80030bc:	d113      	bne.n	80030e6 <UART_Receive_IT+0x50>
 80030be:	2300      	movs	r3, #0
 80030c0:	60fb      	str	r3, [r7, #12]
 80030c2:	687b      	ldr	r3, [r7, #4]
 80030c4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80030c6:	60bb      	str	r3, [r7, #8]
 80030c8:	687b      	ldr	r3, [r7, #4]
 80030ca:	681b      	ldr	r3, [r3, #0]
 80030cc:	685b      	ldr	r3, [r3, #4]
 80030ce:	b29b      	uxth	r3, r3
 80030d0:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80030d4:	b29a      	uxth	r2, r3
 80030d6:	68bb      	ldr	r3, [r7, #8]
 80030d8:	801a      	strh	r2, [r3, #0]
 80030da:	687b      	ldr	r3, [r7, #4]
 80030dc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80030de:	1c9a      	adds	r2, r3, #2
 80030e0:	687b      	ldr	r3, [r7, #4]
 80030e2:	629a      	str	r2, [r3, #40]	; 0x28
 80030e4:	e026      	b.n	8003134 <UART_Receive_IT+0x9e>
 80030e6:	687b      	ldr	r3, [r7, #4]
 80030e8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80030ea:	60fb      	str	r3, [r7, #12]
 80030ec:	2300      	movs	r3, #0
 80030ee:	60bb      	str	r3, [r7, #8]
 80030f0:	687b      	ldr	r3, [r7, #4]
 80030f2:	689b      	ldr	r3, [r3, #8]
 80030f4:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80030f8:	d007      	beq.n	800310a <UART_Receive_IT+0x74>
 80030fa:	687b      	ldr	r3, [r7, #4]
 80030fc:	689b      	ldr	r3, [r3, #8]
 80030fe:	2b00      	cmp	r3, #0
 8003100:	d10a      	bne.n	8003118 <UART_Receive_IT+0x82>
 8003102:	687b      	ldr	r3, [r7, #4]
 8003104:	691b      	ldr	r3, [r3, #16]
 8003106:	2b00      	cmp	r3, #0
 8003108:	d106      	bne.n	8003118 <UART_Receive_IT+0x82>
 800310a:	687b      	ldr	r3, [r7, #4]
 800310c:	681b      	ldr	r3, [r3, #0]
 800310e:	685b      	ldr	r3, [r3, #4]
 8003110:	b2da      	uxtb	r2, r3
 8003112:	68fb      	ldr	r3, [r7, #12]
 8003114:	701a      	strb	r2, [r3, #0]
 8003116:	e008      	b.n	800312a <UART_Receive_IT+0x94>
 8003118:	687b      	ldr	r3, [r7, #4]
 800311a:	681b      	ldr	r3, [r3, #0]
 800311c:	685b      	ldr	r3, [r3, #4]
 800311e:	b2db      	uxtb	r3, r3
 8003120:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8003124:	b2da      	uxtb	r2, r3
 8003126:	68fb      	ldr	r3, [r7, #12]
 8003128:	701a      	strb	r2, [r3, #0]
 800312a:	687b      	ldr	r3, [r7, #4]
 800312c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800312e:	1c5a      	adds	r2, r3, #1
 8003130:	687b      	ldr	r3, [r7, #4]
 8003132:	629a      	str	r2, [r3, #40]	; 0x28
 8003134:	687b      	ldr	r3, [r7, #4]
 8003136:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8003138:	b29b      	uxth	r3, r3
 800313a:	3b01      	subs	r3, #1
 800313c:	b29b      	uxth	r3, r3
 800313e:	687a      	ldr	r2, [r7, #4]
 8003140:	4619      	mov	r1, r3
 8003142:	85d1      	strh	r1, [r2, #46]	; 0x2e
 8003144:	2b00      	cmp	r3, #0
 8003146:	d136      	bne.n	80031b6 <UART_Receive_IT+0x120>
 8003148:	687b      	ldr	r3, [r7, #4]
 800314a:	681b      	ldr	r3, [r3, #0]
 800314c:	68da      	ldr	r2, [r3, #12]
 800314e:	687b      	ldr	r3, [r7, #4]
 8003150:	681b      	ldr	r3, [r3, #0]
 8003152:	f022 0220 	bic.w	r2, r2, #32
 8003156:	60da      	str	r2, [r3, #12]
 8003158:	687b      	ldr	r3, [r7, #4]
 800315a:	681b      	ldr	r3, [r3, #0]
 800315c:	68da      	ldr	r2, [r3, #12]
 800315e:	687b      	ldr	r3, [r7, #4]
 8003160:	681b      	ldr	r3, [r3, #0]
 8003162:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8003166:	60da      	str	r2, [r3, #12]
 8003168:	687b      	ldr	r3, [r7, #4]
 800316a:	681b      	ldr	r3, [r3, #0]
 800316c:	695a      	ldr	r2, [r3, #20]
 800316e:	687b      	ldr	r3, [r7, #4]
 8003170:	681b      	ldr	r3, [r3, #0]
 8003172:	f022 0201 	bic.w	r2, r2, #1
 8003176:	615a      	str	r2, [r3, #20]
 8003178:	687b      	ldr	r3, [r7, #4]
 800317a:	2220      	movs	r2, #32
 800317c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003180:	687b      	ldr	r3, [r7, #4]
 8003182:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003184:	2b01      	cmp	r3, #1
 8003186:	d10e      	bne.n	80031a6 <UART_Receive_IT+0x110>
 8003188:	687b      	ldr	r3, [r7, #4]
 800318a:	681b      	ldr	r3, [r3, #0]
 800318c:	68da      	ldr	r2, [r3, #12]
 800318e:	687b      	ldr	r3, [r7, #4]
 8003190:	681b      	ldr	r3, [r3, #0]
 8003192:	f022 0210 	bic.w	r2, r2, #16
 8003196:	60da      	str	r2, [r3, #12]
 8003198:	687b      	ldr	r3, [r7, #4]
 800319a:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 800319c:	4619      	mov	r1, r3
 800319e:	6878      	ldr	r0, [r7, #4]
 80031a0:	f7ff fe8a 	bl	8002eb8 <HAL_UARTEx_RxEventCallback>
 80031a4:	e002      	b.n	80031ac <UART_Receive_IT+0x116>
 80031a6:	6878      	ldr	r0, [r7, #4]
 80031a8:	f7fe fa5a 	bl	8001660 <HAL_UART_RxCpltCallback>
 80031ac:	687b      	ldr	r3, [r7, #4]
 80031ae:	2200      	movs	r2, #0
 80031b0:	631a      	str	r2, [r3, #48]	; 0x30
 80031b2:	2300      	movs	r3, #0
 80031b4:	e002      	b.n	80031bc <UART_Receive_IT+0x126>
 80031b6:	2300      	movs	r3, #0
 80031b8:	e000      	b.n	80031bc <UART_Receive_IT+0x126>
 80031ba:	2302      	movs	r3, #2
 80031bc:	4618      	mov	r0, r3
 80031be:	3710      	adds	r7, #16
 80031c0:	46bd      	mov	sp, r7
 80031c2:	bd80      	pop	{r7, pc}

080031c4 <UART_SetConfig>:
 80031c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80031c8:	b09f      	sub	sp, #124	; 0x7c
 80031ca:	af00      	add	r7, sp, #0
 80031cc:	66f8      	str	r0, [r7, #108]	; 0x6c
 80031ce:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80031d0:	681b      	ldr	r3, [r3, #0]
 80031d2:	691b      	ldr	r3, [r3, #16]
 80031d4:	f423 5040 	bic.w	r0, r3, #12288	; 0x3000
 80031d8:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80031da:	68d9      	ldr	r1, [r3, #12]
 80031dc:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80031de:	681a      	ldr	r2, [r3, #0]
 80031e0:	ea40 0301 	orr.w	r3, r0, r1
 80031e4:	6113      	str	r3, [r2, #16]
 80031e6:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80031e8:	689a      	ldr	r2, [r3, #8]
 80031ea:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80031ec:	691b      	ldr	r3, [r3, #16]
 80031ee:	431a      	orrs	r2, r3
 80031f0:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80031f2:	695b      	ldr	r3, [r3, #20]
 80031f4:	431a      	orrs	r2, r3
 80031f6:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80031f8:	69db      	ldr	r3, [r3, #28]
 80031fa:	4313      	orrs	r3, r2
 80031fc:	673b      	str	r3, [r7, #112]	; 0x70
 80031fe:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8003200:	681b      	ldr	r3, [r3, #0]
 8003202:	68db      	ldr	r3, [r3, #12]
 8003204:	f423 4116 	bic.w	r1, r3, #38400	; 0x9600
 8003208:	f021 010c 	bic.w	r1, r1, #12
 800320c:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800320e:	681a      	ldr	r2, [r3, #0]
 8003210:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8003212:	430b      	orrs	r3, r1
 8003214:	60d3      	str	r3, [r2, #12]
 8003216:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8003218:	681b      	ldr	r3, [r3, #0]
 800321a:	695b      	ldr	r3, [r3, #20]
 800321c:	f423 7040 	bic.w	r0, r3, #768	; 0x300
 8003220:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8003222:	6999      	ldr	r1, [r3, #24]
 8003224:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8003226:	681a      	ldr	r2, [r3, #0]
 8003228:	ea40 0301 	orr.w	r3, r0, r1
 800322c:	6153      	str	r3, [r2, #20]
 800322e:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8003230:	681a      	ldr	r2, [r3, #0]
 8003232:	4bc5      	ldr	r3, [pc, #788]	; (8003548 <UART_SetConfig+0x384>)
 8003234:	429a      	cmp	r2, r3
 8003236:	d004      	beq.n	8003242 <UART_SetConfig+0x7e>
 8003238:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800323a:	681a      	ldr	r2, [r3, #0]
 800323c:	4bc3      	ldr	r3, [pc, #780]	; (800354c <UART_SetConfig+0x388>)
 800323e:	429a      	cmp	r2, r3
 8003240:	d103      	bne.n	800324a <UART_SetConfig+0x86>
 8003242:	f7ff fbad 	bl	80029a0 <HAL_RCC_GetPCLK2Freq>
 8003246:	6778      	str	r0, [r7, #116]	; 0x74
 8003248:	e002      	b.n	8003250 <UART_SetConfig+0x8c>
 800324a:	f7ff fb95 	bl	8002978 <HAL_RCC_GetPCLK1Freq>
 800324e:	6778      	str	r0, [r7, #116]	; 0x74
 8003250:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8003252:	69db      	ldr	r3, [r3, #28]
 8003254:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8003258:	f040 80b6 	bne.w	80033c8 <UART_SetConfig+0x204>
 800325c:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800325e:	461c      	mov	r4, r3
 8003260:	f04f 0500 	mov.w	r5, #0
 8003264:	4622      	mov	r2, r4
 8003266:	462b      	mov	r3, r5
 8003268:	1891      	adds	r1, r2, r2
 800326a:	6439      	str	r1, [r7, #64]	; 0x40
 800326c:	415b      	adcs	r3, r3
 800326e:	647b      	str	r3, [r7, #68]	; 0x44
 8003270:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 8003274:	1912      	adds	r2, r2, r4
 8003276:	eb45 0303 	adc.w	r3, r5, r3
 800327a:	f04f 0000 	mov.w	r0, #0
 800327e:	f04f 0100 	mov.w	r1, #0
 8003282:	00d9      	lsls	r1, r3, #3
 8003284:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
 8003288:	00d0      	lsls	r0, r2, #3
 800328a:	4602      	mov	r2, r0
 800328c:	460b      	mov	r3, r1
 800328e:	1911      	adds	r1, r2, r4
 8003290:	6639      	str	r1, [r7, #96]	; 0x60
 8003292:	416b      	adcs	r3, r5
 8003294:	667b      	str	r3, [r7, #100]	; 0x64
 8003296:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8003298:	685b      	ldr	r3, [r3, #4]
 800329a:	461a      	mov	r2, r3
 800329c:	f04f 0300 	mov.w	r3, #0
 80032a0:	1891      	adds	r1, r2, r2
 80032a2:	63b9      	str	r1, [r7, #56]	; 0x38
 80032a4:	415b      	adcs	r3, r3
 80032a6:	63fb      	str	r3, [r7, #60]	; 0x3c
 80032a8:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	; 0x38
 80032ac:	e9d7 0118 	ldrd	r0, r1, [r7, #96]	; 0x60
 80032b0:	f7fc ff90 	bl	80001d4 <__aeabi_uldivmod>
 80032b4:	4602      	mov	r2, r0
 80032b6:	460b      	mov	r3, r1
 80032b8:	4ba5      	ldr	r3, [pc, #660]	; (8003550 <UART_SetConfig+0x38c>)
 80032ba:	fba3 2302 	umull	r2, r3, r3, r2
 80032be:	095b      	lsrs	r3, r3, #5
 80032c0:	011e      	lsls	r6, r3, #4
 80032c2:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 80032c4:	461c      	mov	r4, r3
 80032c6:	f04f 0500 	mov.w	r5, #0
 80032ca:	4622      	mov	r2, r4
 80032cc:	462b      	mov	r3, r5
 80032ce:	1891      	adds	r1, r2, r2
 80032d0:	6339      	str	r1, [r7, #48]	; 0x30
 80032d2:	415b      	adcs	r3, r3
 80032d4:	637b      	str	r3, [r7, #52]	; 0x34
 80032d6:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	; 0x30
 80032da:	1912      	adds	r2, r2, r4
 80032dc:	eb45 0303 	adc.w	r3, r5, r3
 80032e0:	f04f 0000 	mov.w	r0, #0
 80032e4:	f04f 0100 	mov.w	r1, #0
 80032e8:	00d9      	lsls	r1, r3, #3
 80032ea:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
 80032ee:	00d0      	lsls	r0, r2, #3
 80032f0:	4602      	mov	r2, r0
 80032f2:	460b      	mov	r3, r1
 80032f4:	1911      	adds	r1, r2, r4
 80032f6:	65b9      	str	r1, [r7, #88]	; 0x58
 80032f8:	416b      	adcs	r3, r5
 80032fa:	65fb      	str	r3, [r7, #92]	; 0x5c
 80032fc:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80032fe:	685b      	ldr	r3, [r3, #4]
 8003300:	461a      	mov	r2, r3
 8003302:	f04f 0300 	mov.w	r3, #0
 8003306:	1891      	adds	r1, r2, r2
 8003308:	62b9      	str	r1, [r7, #40]	; 0x28
 800330a:	415b      	adcs	r3, r3
 800330c:	62fb      	str	r3, [r7, #44]	; 0x2c
 800330e:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 8003312:	e9d7 0116 	ldrd	r0, r1, [r7, #88]	; 0x58
 8003316:	f7fc ff5d 	bl	80001d4 <__aeabi_uldivmod>
 800331a:	4602      	mov	r2, r0
 800331c:	460b      	mov	r3, r1
 800331e:	4b8c      	ldr	r3, [pc, #560]	; (8003550 <UART_SetConfig+0x38c>)
 8003320:	fba3 1302 	umull	r1, r3, r3, r2
 8003324:	095b      	lsrs	r3, r3, #5
 8003326:	2164      	movs	r1, #100	; 0x64
 8003328:	fb01 f303 	mul.w	r3, r1, r3
 800332c:	1ad3      	subs	r3, r2, r3
 800332e:	00db      	lsls	r3, r3, #3
 8003330:	3332      	adds	r3, #50	; 0x32
 8003332:	4a87      	ldr	r2, [pc, #540]	; (8003550 <UART_SetConfig+0x38c>)
 8003334:	fba2 2303 	umull	r2, r3, r2, r3
 8003338:	095b      	lsrs	r3, r3, #5
 800333a:	005b      	lsls	r3, r3, #1
 800333c:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 8003340:	441e      	add	r6, r3
 8003342:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8003344:	4618      	mov	r0, r3
 8003346:	f04f 0100 	mov.w	r1, #0
 800334a:	4602      	mov	r2, r0
 800334c:	460b      	mov	r3, r1
 800334e:	1894      	adds	r4, r2, r2
 8003350:	623c      	str	r4, [r7, #32]
 8003352:	415b      	adcs	r3, r3
 8003354:	627b      	str	r3, [r7, #36]	; 0x24
 8003356:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 800335a:	1812      	adds	r2, r2, r0
 800335c:	eb41 0303 	adc.w	r3, r1, r3
 8003360:	f04f 0400 	mov.w	r4, #0
 8003364:	f04f 0500 	mov.w	r5, #0
 8003368:	00dd      	lsls	r5, r3, #3
 800336a:	ea45 7552 	orr.w	r5, r5, r2, lsr #29
 800336e:	00d4      	lsls	r4, r2, #3
 8003370:	4622      	mov	r2, r4
 8003372:	462b      	mov	r3, r5
 8003374:	1814      	adds	r4, r2, r0
 8003376:	653c      	str	r4, [r7, #80]	; 0x50
 8003378:	414b      	adcs	r3, r1
 800337a:	657b      	str	r3, [r7, #84]	; 0x54
 800337c:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800337e:	685b      	ldr	r3, [r3, #4]
 8003380:	461a      	mov	r2, r3
 8003382:	f04f 0300 	mov.w	r3, #0
 8003386:	1891      	adds	r1, r2, r2
 8003388:	61b9      	str	r1, [r7, #24]
 800338a:	415b      	adcs	r3, r3
 800338c:	61fb      	str	r3, [r7, #28]
 800338e:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8003392:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	; 0x50
 8003396:	f7fc ff1d 	bl	80001d4 <__aeabi_uldivmod>
 800339a:	4602      	mov	r2, r0
 800339c:	460b      	mov	r3, r1
 800339e:	4b6c      	ldr	r3, [pc, #432]	; (8003550 <UART_SetConfig+0x38c>)
 80033a0:	fba3 1302 	umull	r1, r3, r3, r2
 80033a4:	095b      	lsrs	r3, r3, #5
 80033a6:	2164      	movs	r1, #100	; 0x64
 80033a8:	fb01 f303 	mul.w	r3, r1, r3
 80033ac:	1ad3      	subs	r3, r2, r3
 80033ae:	00db      	lsls	r3, r3, #3
 80033b0:	3332      	adds	r3, #50	; 0x32
 80033b2:	4a67      	ldr	r2, [pc, #412]	; (8003550 <UART_SetConfig+0x38c>)
 80033b4:	fba2 2303 	umull	r2, r3, r2, r3
 80033b8:	095b      	lsrs	r3, r3, #5
 80033ba:	f003 0207 	and.w	r2, r3, #7
 80033be:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80033c0:	681b      	ldr	r3, [r3, #0]
 80033c2:	4432      	add	r2, r6
 80033c4:	609a      	str	r2, [r3, #8]
 80033c6:	e0b9      	b.n	800353c <UART_SetConfig+0x378>
 80033c8:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 80033ca:	461c      	mov	r4, r3
 80033cc:	f04f 0500 	mov.w	r5, #0
 80033d0:	4622      	mov	r2, r4
 80033d2:	462b      	mov	r3, r5
 80033d4:	1891      	adds	r1, r2, r2
 80033d6:	6139      	str	r1, [r7, #16]
 80033d8:	415b      	adcs	r3, r3
 80033da:	617b      	str	r3, [r7, #20]
 80033dc:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 80033e0:	1912      	adds	r2, r2, r4
 80033e2:	eb45 0303 	adc.w	r3, r5, r3
 80033e6:	f04f 0000 	mov.w	r0, #0
 80033ea:	f04f 0100 	mov.w	r1, #0
 80033ee:	00d9      	lsls	r1, r3, #3
 80033f0:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
 80033f4:	00d0      	lsls	r0, r2, #3
 80033f6:	4602      	mov	r2, r0
 80033f8:	460b      	mov	r3, r1
 80033fa:	eb12 0804 	adds.w	r8, r2, r4
 80033fe:	eb43 0905 	adc.w	r9, r3, r5
 8003402:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8003404:	685b      	ldr	r3, [r3, #4]
 8003406:	4618      	mov	r0, r3
 8003408:	f04f 0100 	mov.w	r1, #0
 800340c:	f04f 0200 	mov.w	r2, #0
 8003410:	f04f 0300 	mov.w	r3, #0
 8003414:	008b      	lsls	r3, r1, #2
 8003416:	ea43 7390 	orr.w	r3, r3, r0, lsr #30
 800341a:	0082      	lsls	r2, r0, #2
 800341c:	4640      	mov	r0, r8
 800341e:	4649      	mov	r1, r9
 8003420:	f7fc fed8 	bl	80001d4 <__aeabi_uldivmod>
 8003424:	4602      	mov	r2, r0
 8003426:	460b      	mov	r3, r1
 8003428:	4b49      	ldr	r3, [pc, #292]	; (8003550 <UART_SetConfig+0x38c>)
 800342a:	fba3 2302 	umull	r2, r3, r3, r2
 800342e:	095b      	lsrs	r3, r3, #5
 8003430:	011e      	lsls	r6, r3, #4
 8003432:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8003434:	4618      	mov	r0, r3
 8003436:	f04f 0100 	mov.w	r1, #0
 800343a:	4602      	mov	r2, r0
 800343c:	460b      	mov	r3, r1
 800343e:	1894      	adds	r4, r2, r2
 8003440:	60bc      	str	r4, [r7, #8]
 8003442:	415b      	adcs	r3, r3
 8003444:	60fb      	str	r3, [r7, #12]
 8003446:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 800344a:	1812      	adds	r2, r2, r0
 800344c:	eb41 0303 	adc.w	r3, r1, r3
 8003450:	f04f 0400 	mov.w	r4, #0
 8003454:	f04f 0500 	mov.w	r5, #0
 8003458:	00dd      	lsls	r5, r3, #3
 800345a:	ea45 7552 	orr.w	r5, r5, r2, lsr #29
 800345e:	00d4      	lsls	r4, r2, #3
 8003460:	4622      	mov	r2, r4
 8003462:	462b      	mov	r3, r5
 8003464:	1814      	adds	r4, r2, r0
 8003466:	64bc      	str	r4, [r7, #72]	; 0x48
 8003468:	414b      	adcs	r3, r1
 800346a:	64fb      	str	r3, [r7, #76]	; 0x4c
 800346c:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800346e:	685b      	ldr	r3, [r3, #4]
 8003470:	4618      	mov	r0, r3
 8003472:	f04f 0100 	mov.w	r1, #0
 8003476:	f04f 0200 	mov.w	r2, #0
 800347a:	f04f 0300 	mov.w	r3, #0
 800347e:	008b      	lsls	r3, r1, #2
 8003480:	ea43 7390 	orr.w	r3, r3, r0, lsr #30
 8003484:	0082      	lsls	r2, r0, #2
 8003486:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	; 0x48
 800348a:	f7fc fea3 	bl	80001d4 <__aeabi_uldivmod>
 800348e:	4602      	mov	r2, r0
 8003490:	460b      	mov	r3, r1
 8003492:	4b2f      	ldr	r3, [pc, #188]	; (8003550 <UART_SetConfig+0x38c>)
 8003494:	fba3 1302 	umull	r1, r3, r3, r2
 8003498:	095b      	lsrs	r3, r3, #5
 800349a:	2164      	movs	r1, #100	; 0x64
 800349c:	fb01 f303 	mul.w	r3, r1, r3
 80034a0:	1ad3      	subs	r3, r2, r3
 80034a2:	011b      	lsls	r3, r3, #4
 80034a4:	3332      	adds	r3, #50	; 0x32
 80034a6:	4a2a      	ldr	r2, [pc, #168]	; (8003550 <UART_SetConfig+0x38c>)
 80034a8:	fba2 2303 	umull	r2, r3, r2, r3
 80034ac:	095b      	lsrs	r3, r3, #5
 80034ae:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 80034b2:	441e      	add	r6, r3
 80034b4:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 80034b6:	4618      	mov	r0, r3
 80034b8:	f04f 0100 	mov.w	r1, #0
 80034bc:	4602      	mov	r2, r0
 80034be:	460b      	mov	r3, r1
 80034c0:	1894      	adds	r4, r2, r2
 80034c2:	603c      	str	r4, [r7, #0]
 80034c4:	415b      	adcs	r3, r3
 80034c6:	607b      	str	r3, [r7, #4]
 80034c8:	e9d7 2300 	ldrd	r2, r3, [r7]
 80034cc:	1812      	adds	r2, r2, r0
 80034ce:	eb41 0303 	adc.w	r3, r1, r3
 80034d2:	f04f 0400 	mov.w	r4, #0
 80034d6:	f04f 0500 	mov.w	r5, #0
 80034da:	00dd      	lsls	r5, r3, #3
 80034dc:	ea45 7552 	orr.w	r5, r5, r2, lsr #29
 80034e0:	00d4      	lsls	r4, r2, #3
 80034e2:	4622      	mov	r2, r4
 80034e4:	462b      	mov	r3, r5
 80034e6:	eb12 0a00 	adds.w	sl, r2, r0
 80034ea:	eb43 0b01 	adc.w	fp, r3, r1
 80034ee:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80034f0:	685b      	ldr	r3, [r3, #4]
 80034f2:	4618      	mov	r0, r3
 80034f4:	f04f 0100 	mov.w	r1, #0
 80034f8:	f04f 0200 	mov.w	r2, #0
 80034fc:	f04f 0300 	mov.w	r3, #0
 8003500:	008b      	lsls	r3, r1, #2
 8003502:	ea43 7390 	orr.w	r3, r3, r0, lsr #30
 8003506:	0082      	lsls	r2, r0, #2
 8003508:	4650      	mov	r0, sl
 800350a:	4659      	mov	r1, fp
 800350c:	f7fc fe62 	bl	80001d4 <__aeabi_uldivmod>
 8003510:	4602      	mov	r2, r0
 8003512:	460b      	mov	r3, r1
 8003514:	4b0e      	ldr	r3, [pc, #56]	; (8003550 <UART_SetConfig+0x38c>)
 8003516:	fba3 1302 	umull	r1, r3, r3, r2
 800351a:	095b      	lsrs	r3, r3, #5
 800351c:	2164      	movs	r1, #100	; 0x64
 800351e:	fb01 f303 	mul.w	r3, r1, r3
 8003522:	1ad3      	subs	r3, r2, r3
 8003524:	011b      	lsls	r3, r3, #4
 8003526:	3332      	adds	r3, #50	; 0x32
 8003528:	4a09      	ldr	r2, [pc, #36]	; (8003550 <UART_SetConfig+0x38c>)
 800352a:	fba2 2303 	umull	r2, r3, r2, r3
 800352e:	095b      	lsrs	r3, r3, #5
 8003530:	f003 020f 	and.w	r2, r3, #15
 8003534:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8003536:	681b      	ldr	r3, [r3, #0]
 8003538:	4432      	add	r2, r6
 800353a:	609a      	str	r2, [r3, #8]
 800353c:	bf00      	nop
 800353e:	377c      	adds	r7, #124	; 0x7c
 8003540:	46bd      	mov	sp, r7
 8003542:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003546:	bf00      	nop
 8003548:	40011000 	.word	0x40011000
 800354c:	40011400 	.word	0x40011400
 8003550:	51eb851f 	.word	0x51eb851f

08003554 <__libc_init_array>:
 8003554:	b570      	push	{r4, r5, r6, lr}
 8003556:	4d0d      	ldr	r5, [pc, #52]	; (800358c <__libc_init_array+0x38>)
 8003558:	4c0d      	ldr	r4, [pc, #52]	; (8003590 <__libc_init_array+0x3c>)
 800355a:	1b64      	subs	r4, r4, r5
 800355c:	10a4      	asrs	r4, r4, #2
 800355e:	2600      	movs	r6, #0
 8003560:	42a6      	cmp	r6, r4
 8003562:	d109      	bne.n	8003578 <__libc_init_array+0x24>
 8003564:	4d0b      	ldr	r5, [pc, #44]	; (8003594 <__libc_init_array+0x40>)
 8003566:	4c0c      	ldr	r4, [pc, #48]	; (8003598 <__libc_init_array+0x44>)
 8003568:	f000 f820 	bl	80035ac <_init>
 800356c:	1b64      	subs	r4, r4, r5
 800356e:	10a4      	asrs	r4, r4, #2
 8003570:	2600      	movs	r6, #0
 8003572:	42a6      	cmp	r6, r4
 8003574:	d105      	bne.n	8003582 <__libc_init_array+0x2e>
 8003576:	bd70      	pop	{r4, r5, r6, pc}
 8003578:	f855 3b04 	ldr.w	r3, [r5], #4
 800357c:	4798      	blx	r3
 800357e:	3601      	adds	r6, #1
 8003580:	e7ee      	b.n	8003560 <__libc_init_array+0xc>
 8003582:	f855 3b04 	ldr.w	r3, [r5], #4
 8003586:	4798      	blx	r3
 8003588:	3601      	adds	r6, #1
 800358a:	e7f2      	b.n	8003572 <__libc_init_array+0x1e>
 800358c:	080035e4 	.word	0x080035e4
 8003590:	080035e4 	.word	0x080035e4
 8003594:	080035e4 	.word	0x080035e4
 8003598:	080035e8 	.word	0x080035e8

0800359c <memset>:
 800359c:	4402      	add	r2, r0
 800359e:	4603      	mov	r3, r0
 80035a0:	4293      	cmp	r3, r2
 80035a2:	d100      	bne.n	80035a6 <memset+0xa>
 80035a4:	4770      	bx	lr
 80035a6:	f803 1b01 	strb.w	r1, [r3], #1
 80035aa:	e7f9      	b.n	80035a0 <memset+0x4>

080035ac <_init>:
 80035ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80035ae:	bf00      	nop
 80035b0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80035b2:	bc08      	pop	{r3}
 80035b4:	469e      	mov	lr, r3
 80035b6:	4770      	bx	lr

080035b8 <_fini>:
 80035b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80035ba:	bf00      	nop
 80035bc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80035be:	bc08      	pop	{r3}
 80035c0:	469e      	mov	lr, r3
 80035c2:	4770      	bx	lr
